{"version":3,"sources":["actions/actions.js","util/Ndarray.js","reducers/matrices.js","reducers/index.js","actions/operation.js","epics/operationEpic.js","epics/index.js","components/common/ModalWrapper.js","actions/matrices.js","components/common/InputGrid.js","components/createMatrix/CreateMatrix.js","components/common/Matrix.js","components/common/ResponsiveIcon.js","components/matricesBank/RichMatrix.js","components/matricesBank/MatricesBank.js","components/controlPanel/operations/GenericOperation.js","components/controlPanel/CodeCreators.js","components/controlPanel/ControlPanel.js","components/MatrixGUI.js","App.js","index.js"],"names":["OPERATION_BEGIN","OPERATION_SUCCESS","OPERATION_ERROR","UPSERT_MATRIX","RENAME_MATRIX","DELETE_MATRIX","Ndarray","numericValues","shape","Object","classCallCheck","this","initialState","matrixMap","OrderedMap","foo","fos","mostRecentError","matrices","state","arguments","length","undefined","action","type","objectSpread","contains","name","updateIn","set","mapKeys","k","newName","remove","result","validOperation","ndarray","resultVariable","combineReducers","generatedCode","operationBegin","command","matrixNames","createBody","matrixValues","map","get","toMap","assign","apply","toConsumableArray","i","defineProperty","rootEpic","combineEpics","action$","state$","pipe","ofType","mergeMap","ajax","url","method","headers","Content-Type","body","value","response","catchError","error","of","errorMessage","ModalWrapper","props","_this","possibleConstructorReturn","getPrototypeOf","call","modalState","toggleModal","bind","assertThisInitialized","setState","prev","react_default","a","createElement","React","cloneElement","children","onClick","ModalWrapper_Modal","closeModal","title","toggle","Component","Modal","_ref","className","upsertMatrix","renameMatrix","deleteMatrix","InputGrid","create","numRows","initialRows","numCols","initialCols","matrixName","finishedPopulating","edit","console","log","rows","cols","clone","today","Date","timestamp","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","addRow","addCol","removeRow","removeCol","submit","updateMatrixName","getStartingValue","setFinishedPopulating","prevState","Math","min","max","r","c","push","concat","j","status","_this2","ret","placeholder","onChange","e","target","style","paddingTop","Array","keys","key","disabled","size","fontSize","defaultValue","ref","element","connect","dispatch","bindActionCreators","CreateMatrix","common_ModalWrapper","common_InputGrid","Matrix","count","fragments","List","_props$ndarray$shape","slicedToArray","slice","join","math","katex","renderToString","convertStateToLatex","Parser","ResponsiveIcon","hover","hoverOn","hoverOff","icon","cursor","onMouseEnter","onMouseLeave","RichMatrix","common_Matrix","common_ResponsiveIcon","MatricesBank","createMatrix_CreateMatrix","entrySeq","_ref2","v","matricesBank_RichMatrix","GenericOperation","operate","argv","numDropdowns","codeCreator","showWarning","displayWarning","closeWarning","matrix_1","matrix_2","keySeq","full","invert","transpose","add","subtract","multiply","ControlPanel","selected","color","Item","Divider","operations_GenericOperation","Creators","MatrixGUI","matricesBank_MatricesBank","controlPanel_ControlPanel","App","components_MatrixGUI","logger","createLogger","stateTransformer","newState","_arr","_i","Immutable","Iterable","isIterable","toJS","epicMiddleware","createEpicMiddleware","store","createStore","rootReducer","applyMiddleware","run","render","es","src_App","document","getElementById"],"mappings":"iNAMaA,EAAkB,kBAClBC,EAAoB,oBACpBC,EAAkB,kBAElBC,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAgB,sCCZRC,aACjB,SAAAA,EAAYC,EAAeC,GAAQC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GAC/BK,KAAKJ,cAAgBA,EACrBI,KAAKH,MAAQA,qDAIb,OAAOG,KAAKH,MAAM,kCAIlB,OAAOG,KAAKH,MAAM,mCAIlB,MAAO,CACHD,cAAeI,KAAKJ,cACpBC,MAAOG,KAAKH,gBCZlBI,EAAe,CACnBC,UAAa,IAAIC,IAAW,CAC1BC,IAAK,IAAIT,EAAQ,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,IACnCU,IAAK,IAAIV,EAAQ,CAAC,EAAG,GAAI,CAAC,EAAG,MAE/BW,gBAAmB,IAsDNC,EAnDE,WAAkC,IAAjCC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBR,EAAcW,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACjD,OAAQC,EAAOC,MACb,KAAKxB,EACH,OAAOS,OAAAgB,EAAA,EAAAhB,CAAA,GAAKU,EAAZ,CAAmBF,gBAAiB,KACtC,KAAKd,EACH,OAAIgB,EAAMN,UAAUa,SAASH,EAAOI,MAC3BlB,OAAAgB,EAAA,EAAAhB,CAAA,GACFU,EADL,CAEEN,UAAWM,EAAMN,UAAUe,SAAS,CAACL,EAAOI,MAAO,kBAAM,IAAIrB,EAAQiB,EAAOhB,cAAegB,EAAOf,WAG/FC,OAAAgB,EAAA,EAAAhB,CAAA,GACFU,EADL,CAEEN,UAAWM,EAAMN,UAAUgB,IAAIN,EAAOI,KAAM,IAAIrB,EAAQiB,EAAOhB,cAAegB,EAAOf,UAEzF,KAAKJ,EACH,OAAOK,OAAAgB,EAAA,EAAAhB,CAAA,GACFU,EADL,CAEEN,UAAWM,EAAMN,UAAUiB,QAAQ,SAAAC,GACjC,OAAIA,IAAMR,EAAOI,KACRJ,EAAOS,QAETD,MAGb,KAAK1B,EACH,OAAOI,OAAAgB,EAAA,EAAAhB,CAAA,GACFU,EADL,CAEEN,UAAWM,EAAMN,UAAUoB,OAAOV,EAAOI,QAE7C,KAAK1B,EACH,GAAIsB,EAAOW,OAAOC,eAAgB,CAChC,IAAIC,EAAUb,EAAOW,OAAOA,OAC5B,OAAIf,EAAMN,UAAUa,SAASH,EAAOW,OAAOG,gBAClC5B,OAAAgB,EAAA,EAAAhB,CAAA,GACFU,EADL,CAEEN,UAAWM,EAAMN,UAAUe,SAAS,CAACL,EAAOc,gBAAiB,kBAAM,IAAI/B,EAAQ8B,EAAQ7B,cAAe6B,EAAQ5B,WAG3GC,OAAAgB,EAAA,EAAAhB,CAAA,GACFU,EADL,CAEEN,UAAWM,EAAMN,UAAUgB,IAAIN,EAAOc,eAAgB,IAAI/B,EAAQ8B,EAAQ7B,cAAe6B,EAAQ5B,UAGnG,OAAOC,OAAAgB,EAAA,EAAAhB,CAAA,GAAKU,EAAZ,CAAmBF,gBAAiBM,EAAOW,OAAOA,SAEtD,QACE,OAAOf,qBCvDEmB,cAAgB,CAC3BpB,WACAqB,oGCLG,SAASC,EAAeC,EAASC,EAAaL,GACjD,MAAO,CACHb,KAAMxB,EACNyC,UACAC,cACAL,kBCsBR,SAASM,EAAWD,EAAaxB,GAC7B,IAAI0B,EAAeF,EAAYG,IAAI,SAAAlB,GAAI,OAAIT,EAAS4B,IAAInB,GAAMoB,UAC9D,OAAOtC,OAAOuC,OAAPC,MAAAxC,OAAMA,OAAAyC,EAAA,EAAAzC,CAAWiC,EAAYG,IAAI,SAACd,EAAGoB,GAAJ,OAAA1C,OAAA2C,EAAA,EAAA3C,CAAA,GAAcsB,EAAIa,EAAaO,QC5BpE,IAAME,EAAWC,YDMK,SAACC,EAASC,GAAV,OAAqBD,EAAQE,KACtDC,YAAO1D,GACP2D,YAAS,SAAApC,GAAM,OACXqC,YAAK,CACDC,IAAK,6EACLC,OAAQ,MACRC,QAAS,CACLC,eAAgB,oBAEpBC,KAAM,CACFxB,QAASlB,EAAOkB,QAChBvB,SAAUyB,EAAWpB,EAAOmB,YAAac,EAAOU,MAAMhD,SAASL,cAEpE4C,KACCZ,YAAI,SAAAsB,GAAQ,ODZS9B,ECYYd,EAAOc,eDZHH,ECYmBiC,EAASA,SAASF,KDX3E,CACHzC,KAAMvB,EACNoC,iBACAH,UAJD,IAA0BG,EAAgBH,ICarCkC,YAAW,SAAAC,GAAK,OAAIC,YDJrB,CACH9C,KAAMtB,EACNqE,aCE0CF,wDErB5CG,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAjE,OAAAC,EAAA,EAAAD,CAAAE,KAAA6D,IACjBE,EAAAjE,OAAAkE,EAAA,EAAAlE,CAAAE,KAAAF,OAAAmE,EAAA,EAAAnE,CAAA+D,GAAAK,KAAAlE,KAAM8D,KACDtD,MAAQ,CACX2D,YAAY,GAEdJ,EAAKK,YAAcL,EAAKK,YAAYC,KAAjBvE,OAAAwE,EAAA,EAAAxE,QAAAwE,EAAA,EAAAxE,CAAAiE,KALFA,6EASjB/D,KAAKuE,SAAS,SAACC,EAAMV,GAGnB,MAAO,CAAEK,YAFSK,EAAKL,+CAOzB,OACEM,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACGC,IAAMC,aAAa7E,KAAK8D,MAAMgB,SAAS,GAAI,CAAEC,QAAS/E,KAAKoE,eAG9DK,EAAAC,EAAAC,cAACK,EAAD,CACEC,WAAYjF,KAAKoE,YACjBD,WAAYnE,KAAKQ,MAAM2D,WACvBe,MAAOlF,KAAK8D,MAAMgB,SAAS,IAE1BF,IAAMC,aAAa7E,KAAK8D,MAAMgB,SAAS,GAAI,CAAEK,OAAQnF,KAAKoE,uBA7B1CQ,IAAMQ,WAoC3BC,EAAQ,SAAAC,GAAiD,IAA9CR,EAA8CQ,EAA9CR,SAAUG,EAAoCK,EAApCL,WAAYd,EAAwBmB,EAAxBnB,WAAYe,EAAYI,EAAZJ,MACjD,OAAKf,EAKHM,EAAAC,EAAAC,cAAA,OAAKY,UAAU,mBACbd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,mBAAmBR,QAASE,IAC3CR,EAAAC,EAAAC,cAAA,OAAKY,UAAU,cACbd,EAAAC,EAAAC,cAAA,UAAQY,UAAU,mBAChBd,EAAAC,EAAAC,cAAA,KAAGY,UAAU,oBAAoBL,GACjCT,EAAAC,EAAAC,cAAA,UAAQY,UAAU,SAASR,QAASE,KAEtCR,EAAAC,EAAAC,cAAA,WAASY,UAAU,mBACjBd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,WACZT,IAGLL,EAAAC,EAAAC,cAAA,UAAQY,UAAU,sBAhBf,MA6BI1B,ICnER,SAAS2B,EAAaxE,EAAMnB,EAAOD,GACtC,MAAO,CACHiB,KAAMrB,EACNwB,OACAnB,QACAD,iBAID,SAAS6F,EAAazE,EAAMK,GAC/B,MAAO,CACHR,KAAMpB,EACNuB,OACAK,WAID,SAASqE,EAAa1E,GACzB,MAAO,CACHH,KAAMnB,EACNsB,YChBF2E,cACF,SAAAA,EAAY7B,GAAO,IAAAC,EAEf,GAFejE,OAAAC,EAAA,EAAAD,CAAAE,KAAA2F,GACf5B,EAAAjE,OAAAkE,EAAA,EAAAlE,CAAAE,KAAAF,OAAAmE,EAAA,EAAAnE,CAAA6F,GAAAzB,KAAAlE,KAAM8D,IACFA,EAAM8B,OACN7B,EAAKvD,MAAQ,CACTqF,QAAS/B,EAAMgC,YACfC,QAASjC,EAAMkC,YACfC,WAAY,IAEhBlC,EAAKmC,oBAAqB,OAGzB,GAAIpC,EAAMqC,KACXC,QAAQC,IAAIvC,EAAMrC,SAClBsC,EAAKvD,MAAQ,CACTqF,QAAS/B,EAAMrC,QAAQ6E,OACvBP,QAASjC,EAAMrC,QAAQ8E,OACvB3G,cAAekE,EAAMrC,QAAQ7B,cAC7BqG,WAAYnC,EAAMmC,YAEtBlC,EAAKmC,oBAAqB,OAGzB,GAAIpC,EAAM0C,MAAO,CAClB,IAAIC,EAAQ,IAAIC,KAGZC,EAFOF,EAAMG,cAAgB,KAAOH,EAAMI,WAAa,GAAK,IAAMJ,EAAMK,UAErD,KADZL,EAAMM,WAAa,IAAMN,EAAMO,aAAe,IAAMP,EAAMQ,cAErElD,EAAKvD,MAAQ,CACTqF,QAAS/B,EAAMrC,QAAQ6E,OACvBP,QAASjC,EAAMrC,QAAQ8E,OACvB3G,cAAekE,EAAMrC,QAAQ7B,cAC7BqG,WAAYnC,EAAMmC,WAAa,iBAAmBU,GAEtD5C,EAAKmC,oBAAqB,EAjCf,OAoCfnC,EAAKmD,OAASnD,EAAKmD,OAAO7C,KAAZvE,OAAAwE,EAAA,EAAAxE,QAAAwE,EAAA,EAAAxE,CAAAiE,KACdA,EAAKoD,OAASpD,EAAKoD,OAAO9C,KAAZvE,OAAAwE,EAAA,EAAAxE,QAAAwE,EAAA,EAAAxE,CAAAiE,KACdA,EAAKqD,UAAYrD,EAAKqD,UAAU/C,KAAfvE,OAAAwE,EAAA,EAAAxE,QAAAwE,EAAA,EAAAxE,CAAAiE,KACjBA,EAAKsD,UAAYtD,EAAKsD,UAAUhD,KAAfvE,OAAAwE,EAAA,EAAAxE,QAAAwE,EAAA,EAAAxE,CAAAiE,KACjBA,EAAKuD,OAASvD,EAAKuD,OAAOjD,KAAZvE,OAAAwE,EAAA,EAAAxE,QAAAwE,EAAA,EAAAxE,CAAAiE,KACdA,EAAKwD,iBAAmBxD,EAAKwD,iBAAiBlD,KAAtBvE,OAAAwE,EAAA,EAAAxE,QAAAwE,EAAA,EAAAxE,CAAAiE,KACxBA,EAAKyD,iBAAmBzD,EAAKyD,iBAAiBnD,KAAtBvE,OAAAwE,EAAA,EAAAxE,QAAAwE,EAAA,EAAAxE,CAAAiE,KACxBA,EAAK0D,sBAAwB1D,EAAK0D,sBAAsBpD,KAA3BvE,OAAAwE,EAAA,EAAAxE,QAAAwE,EAAA,EAAAxE,CAAAiE,KA3CdA,wEA+Cf/D,KAAKuE,SAAS,SAACmD,GAAD,MAAgB,CAC1B7B,QAAS8B,KAAKC,IAAIF,EAAU7B,QAAU,EAAG,uCAK7C7F,KAAKuE,SAAS,SAACmD,GAAD,MAAgB,CAC1B3B,QAAS4B,KAAKC,IAAIF,EAAU3B,QAAU,EAAG,0CAK7C/F,KAAKuE,SAAS,SAACmD,GAAD,MAAgB,CAC1B7B,QAAS8B,KAAKE,IAAIH,EAAU7B,QAAU,EAAG,0CAK7C7F,KAAKuE,SAAS,SAACmD,GAAD,MAAgB,CAC1B3B,QAAS4B,KAAKE,IAAIH,EAAU3B,QAAU,EAAG,+CAIhC1E,GACbrB,KAAKuE,SAALzE,OAAAgB,EAAA,EAAAhB,CAAA,GACSE,KAAKQ,MADd,CACqByF,WAAY5E,sCAMjC,IADA,IAAIzB,EAAgB,GACXkI,EAAI,EAAGA,EAAI9H,KAAKQ,MAAMqF,QAASiC,IACpC,IAAK,IAAIC,EAAI,EAAGA,EAAI/H,KAAKQ,MAAMuF,QAASgC,IACpCnI,EAAcoI,KAAKhI,KAAA,YAAAiI,OAAiBH,EAAjB,KAAAG,OAAsBF,IAAKxE,OAGlDvD,KAAK8D,MAAMqC,MACXnG,KAAK8D,MAAM0B,aAAaxF,KAAK8D,MAAMmC,WAAY,CAACjG,KAAKQ,MAAMqF,QAAS7F,KAAKQ,MAAMuF,SAAUnG,GACzFI,KAAK8D,MAAM2B,aAAazF,KAAK8D,MAAMmC,WAAYjG,KAAKQ,MAAMyF,aAE1DjG,KAAK8D,MAAM0B,aAAaxF,KAAKQ,MAAMyF,WAAY,CAACjG,KAAKQ,MAAMqF,QAAS7F,KAAKQ,MAAMuF,SAAUnG,GAE7FI,KAAK8D,MAAMqB,kDAGE3C,EAAG0F,GAChB,OAAKlI,KAAKkG,mBAGH,EAFIlG,KAAKQ,MAAMZ,cAAc4C,EAAIxC,KAAKQ,MAAMuF,QAAUmC,iDAK3CC,GAClBnI,KAAKkG,mBAAqBiC,mCAGrB,IAAAC,EAAApI,KACDqI,EACA5D,EAAAC,EAAAC,cAAA,OAAKY,UAAU,WACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,UACXd,EAAAC,EAAAC,cAAA,SACIY,UAAU,QACV1E,KAAK,OACL0C,MAAOvD,KAAKQ,MAAMyF,WAClBqC,YAAY,cACZC,SAAU,SAACC,GAAD,OAAOJ,EAAKb,iBAAiBiB,EAAEC,OAAOlF,UACpDkB,EAAAC,EAAAC,cAAA,OAAKY,UAAU,oBAAoBmD,MAAO,CAAEC,WAAY,SACpDlE,EAAAC,EAAAC,cAAA,OAAKY,UAAU,oBACVzF,OAAAyC,EAAA,EAAAzC,CAAI8I,MAAM5I,KAAKQ,MAAMqF,SAASgD,QAAQ3G,IAAI,SAAAM,GAAC,OACxCiC,EAAAC,EAAAC,cAAA,OAAKmE,IAAKtG,GACL1C,OAAAyC,EAAA,EAAAzC,CAAI8I,MAAMR,EAAK5H,MAAMuF,SAAS8C,QAAQ3G,IAAI,SAAAgG,GAAC,OACxCzD,EAAAC,EAAAC,cAAA,SACI9D,KAAK,OACLkI,SAAUX,EAAKtE,MAAM0C,MACrBwC,KAAK,IACLN,MAAO,CAAEO,SAAU,QACnBC,aAAcd,EAAKZ,iBAAiBhF,EAAG0F,GACvCY,IAAG,GAAAb,OAAKzF,EAAL,KAAAyF,OAAUC,GACbiB,IAAK,SAAAC,GAAahB,EAAI,YAAAH,OAAazF,EAAb,KAAAyF,OAAkBC,IAAOkB,OAEvD3E,EAAAC,EAAAC,cAAA,eAGZF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,qCACXd,EAAAC,EAAAC,cAAA,UAAQY,UAAU,kBAAkBR,QAAS/E,KAAKoH,WAAlD,cACA3C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQY,UAAU,kBAAkBR,QAAS/E,KAAKkH,QAAlD,aAIRzC,EAAAC,EAAAC,cAAA,OAAKY,UAAU,WACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,kCACXd,EAAAC,EAAAC,cAAA,QAAMY,UAAU,kBAAkBR,QAAS/E,KAAKqH,WAAhD,cACA5C,EAAAC,EAAAC,cAAA,QAAMY,UAAU,kBAAkBR,QAAS/E,KAAKmH,QAAhD,WACA1C,EAAAC,EAAAC,cAAA,OAAK+D,MAAO,CAAEC,WAAY,SACtBlE,EAAAC,EAAAC,cAAA,UAAQY,UAAU,SAASR,QAAS/E,KAAKsH,QAAzC,eAQxB,OADAtH,KAAKyH,uBAAsB,GACpBY,SAvJSzD,IAAMQ,WAqKfiE,kBAAQ,KARvB,SAA4BC,GACxB,OAAOC,YAAmB,CACtB/D,eACAC,gBAEA6D,IAGOD,CAAkC1D,GC1JlC6D,mLAZX,OACE/E,EAAAC,EAAAC,cAAC8E,EAAD,KACEhF,EAAAC,EAAAC,cAAA,UAAQY,UAAU,qBAAlB,qBADF,oBAKEd,EAAAC,EAAAC,cAAC+E,EAAD,CAAW5D,YAAa,EAAGE,YAAa,EAAGJ,QAAM,YAR9BhB,IAAMQ,gDC4BlBuE,+LAvBS7F,GAChB,IAEIwC,EAAMC,EAENqD,EAJAC,EAAY,IAAIC,IAChBlK,EAAgBkE,EAAMrC,QAAQ7B,cAFXmK,EAAAjK,OAAAkK,EAAA,EAAAlK,CAIRgE,EAAMrC,QAAQ5B,MAJN,GAMvB,IAFCyG,EAJsByD,EAAA,GAIhBxD,EAJgBwD,EAAA,GAMlBH,EAAQ,EAAGA,EAAQtD,EAAMsD,IAC1BC,EAAYA,EACP7B,KAAKpI,EACDqK,MAAML,EAAQrD,GAAOqD,EAAQ,GAAKrD,GAClC2D,KAAK,QAElB,MAhBM,mBAgBSL,EAAUK,KAAK,UAf1B,kDAmBJ,IAAIC,EAAOC,IAAMC,eAAerK,KAAKsK,oBAAoBtK,KAAK8D,QAC9D,OACIW,EAAAC,EAAAC,cAAA,WAAM4F,KAAOJ,WAnBJvF,IAAMQ,WCyBZoF,eA9BX,SAAAA,EAAY1G,GAAO,IAAAC,EAAA,OAAAjE,OAAAC,EAAA,EAAAD,CAAAE,KAAAwK,IACfzG,EAAAjE,OAAAkE,EAAA,EAAAlE,CAAAE,KAAAF,OAAAmE,EAAA,EAAAnE,CAAA0K,GAAAtG,KAAAlE,KAAM8D,KACDtD,MAAQ,CACTiK,OAAO,GAEX1G,EAAK2G,QAAU3G,EAAK2G,QAAQrG,KAAbvE,OAAAwE,EAAA,EAAAxE,QAAAwE,EAAA,EAAAxE,CAAAiE,KACfA,EAAK4G,SAAW5G,EAAK4G,SAAStG,KAAdvE,OAAAwE,EAAA,EAAAxE,QAAAwE,EAAA,EAAAxE,CAAAiE,KANDA,yEAUf/D,KAAKuE,SAAS,CAAEkG,OAAO,uCAIvBzK,KAAKuE,SAAS,CAAEkG,OAAO,qCAIvB,OACIhG,EAAAC,EAAAC,cAAA,KAAGY,UAAWvF,KAAKQ,MAAMiK,MAAQ,OAASzK,KAAK8D,MAAM8G,KAAO,OAAS5K,KAAK8D,MAAM8G,KAC5ElC,MAAO,CAAEmC,OAAQ,WACjBC,aAAc9K,KAAK0K,QACnBK,aAAc/K,KAAK2K,SACnB5F,QAAS/E,KAAK8D,MAAMiB,QACpBG,MAAOlF,KAAK8D,MAAMoB,eAzBLN,IAAMQ,WCO7B4F,oLACO,IAAAjH,EAAA/D,KACL,OACIyE,EAAAC,EAAAC,cAAA,OAAKY,UAAU,yBACXd,EAAAC,EAAAC,cAACsG,GAAD,CAAQxJ,QAASzB,KAAK8D,MAAMrC,UAC3BzB,KAAK8D,MAAMmC,WACZxB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAMY,UAAU,sBACZd,EAAAC,EAAAC,cAAC8E,EAAD,KACIhF,EAAAC,EAAAC,cAACuG,GAAD,CAAgBN,KAAK,UAAU1F,MAAM,6BADzC,QAAA+C,OAEajI,KAAK8D,MAAMmC,YACpBxB,EAAAC,EAAAC,cAAC+E,EAAD,CAAWjI,QAASzB,KAAK8D,MAAMrC,QAASwE,WAAYjG,KAAK8D,MAAMmC,WAAYE,MAAI,MAGvF1B,EAAAC,EAAAC,cAAA,QAAMY,UAAU,sBACZd,EAAAC,EAAAC,cAAC8E,EAAD,KACIhF,EAAAC,EAAAC,cAACuG,GAAD,CAAgBN,KAAK,WAAW1F,MAAM,sCAD1C,SAAA+C,OAEcjI,KAAK8D,MAAMmC,YACrBxB,EAAAC,EAAAC,cAAC+E,EAAD,CAAWjI,QAASzB,KAAK8D,MAAMrC,QAASwE,WAAYjG,KAAK8D,MAAMmC,WAAYO,OAAK,MAGxF/B,EAAAC,EAAAC,cAAA,QAAMY,UAAU,sBACZd,EAAAC,EAAAC,cAACuG,GAAD,CAAgBN,KAAK,eAAe7F,QAAS,kBAAMhB,EAAKD,MAAM4B,aAAa3B,EAAKD,MAAMmC,aAAaf,MAAM,gCAtBpGN,IAAMQ,WAoChBiE,mBAAQ,KAPvB,SAA4BC,GACxB,OAAOC,YAAmB,CACtB7D,gBAEA4D,IAGOD,CAAkC2B,ICtC3CG,oLAGF,OACE1G,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,SACbd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,cACbd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,cACbd,EAAAC,EAAAC,cAAA,MAAIY,UAAU,iBAAd,cAEFd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,cACbd,EAAAC,EAAAC,cAACyG,EAAD,SAIN3G,EAAAC,EAAAC,cAAA,OAAKY,UAAU,OACbd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,wBACZvF,KAAK8D,MAAM5D,UAAUmL,WAAWnJ,IAAI,SAAAoD,GAAA,IAAAgG,EAAAxL,OAAAkK,EAAA,EAAAlK,CAAAwF,EAAA,GAAElE,EAAFkK,EAAA,GAAKC,EAALD,EAAA,UACnC7G,EAAAC,EAAAC,cAAA,OAAKY,UAAU,6BAA6BuD,IAAK1H,GAC/CqD,EAAAC,EAAAC,cAAC6G,GAAD,CACE/J,QAAS8J,EACTtF,WAAY7E,EACZ0H,IAAK1H,iBAtBIgE,aAuCZiE,mBANf,SAAyB7I,GACvB,MAAO,CACLN,UAAWM,EAAMD,SAASL,YAIfmJ,CAAyB8B,aCtClCM,eACF,SAAAA,EAAY3H,GAAO,IAAAC,EAAA,OAAAjE,OAAAC,EAAA,EAAAD,CAAAE,KAAAyL,IACf1H,EAAAjE,OAAAkE,EAAA,EAAAlE,CAAAE,KAAAF,OAAAmE,EAAA,EAAAnE,CAAA2L,GAAAvH,KAAAlE,KAAM8D,KAMV4H,QAAU,WACN,IAAIC,EAAO7L,OAAAyC,EAAA,EAAAzC,CAAI8I,MAAM7E,EAAKD,MAAM8H,cAAc/C,QAAQ3G,IAAI,SAAAM,GAAC,OAAIuB,EAAA,WAAAkE,OAAgBzF,IAAKe,QACpFQ,EAAKD,MAAMjC,eAAekC,EAAKD,MAAM+H,YAAYF,GAAOA,EAAM5H,EAAA,WAAmBR,OACjFQ,EAAK+H,eAVU/H,EAanB+H,YAAc,WACV/H,EAAKQ,SAAS,CAAEwH,gBAAgB,KAdjBhI,EAiBnBiI,aAAe,WACXjI,EAAKQ,SAAS,CAAEwH,gBAAgB,KAhBhChI,EAAK2H,QAAU3H,EAAK2H,QAAQrH,KAAbvE,OAAAwE,EAAA,EAAAxE,QAAAwE,EAAA,EAAAxE,CAAAiE,KACfA,EAAK+H,YAAc/H,EAAK+H,YAAYzH,KAAjBvE,OAAAwE,EAAA,EAAAxE,QAAAwE,EAAA,EAAAxE,CAAAiE,KACnBA,EAAKiI,aAAejI,EAAKiI,aAAa3H,KAAlBvE,OAAAwE,EAAA,EAAAxE,QAAAwE,EAAA,EAAAxE,CAAAiE,KACpBA,EAAKvD,MAAQ,CAAEyL,SAAU,GAAIC,SAAU,GAAIxK,eAAgB,GAAIqK,gBAAgB,GALhEhI,wEAqBV,IAAAqE,EAAApI,KACL,OACIyE,EAAAC,EAAAC,cAAA,OAAKY,UAAU,OACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,SACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,cACVzF,OAAAyC,EAAA,EAAAzC,CAAI8I,MAAM5I,KAAK8D,MAAM8H,cAAc/C,QAAQ3G,IAAI,SAAAM,GAAC,OAC7CiC,EAAAC,EAAAC,cAAA,OAAKY,UAAU,aAAauD,IAAKtG,GAC7BiC,EAAAC,EAAAC,cAAA,OAAKY,UAAU,UACXd,EAAAC,EAAAC,cAAA,UAAQuE,aAAa,GAAGC,IAAK,SAAAC,GAAahB,EAAI,WAAAH,OAAYzF,IAAO4G,IAC7D3E,EAAAC,EAAAC,cAAA,UAAQpB,MAAM,GAAGwF,UAAQ,GAhC7C,qBAiCqBX,EAAKtE,MAAM5D,UAAUiM,SAASjK,IAAI,SAAAd,GAAC,OAChCqD,EAAAC,EAAAC,cAAA,UAAQpB,MAAOnC,EAAG0H,IAAK1H,GAAIA,WAQnDqD,EAAAC,EAAAC,cAAA,OAAKY,UAAU,eACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,cACXd,EAAAC,EAAAC,cAAA,SACIY,UAAU,QACV1E,KAAK,OACLyH,YAAY,kBACZa,IAAK,SAAAC,GAAahB,EAAI,WAAiBgB,QAMvD3E,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,SACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,cACVvF,KAAKQ,MAAMuL,gBAAkB/L,KAAK8D,MAAMxD,iBAAmBmE,EAAAC,EAAAC,cAAA,OAAKY,UAAU,2BACvEd,EAAAC,EAAAC,cAAA,UAAQY,UAAU,SAASR,QAAS/E,KAAKgM,eACzCvH,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,0BAAqB3E,KAAK8D,MAAMxD,mBAG3CmE,EAAAC,EAAAC,cAAA,OAAKY,UAAU,eACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,cACXd,EAAAC,EAAAC,cAACyH,GAAA,OAAD,CAAQrH,QAAS/E,KAAK0L,SAAtB,sBA/DG9G,IAAMQ,WAsFtBiE,mBAdf,SAAyB7I,GACrB,MAAO,CACHN,UAAWM,EAAMD,SAASL,UAC1BI,gBAAiBE,EAAMD,SAASD,kBAIxC,SAA4BgJ,GACxB,OAAOC,YAAmB,CACtB1H,kBAEAyH,IAGOD,CAA6CoC,IC9FrD,SAASY,GAAOV,GACnB,uBAAA1D,OAAwB0D,EAAK,GAA7B,KAGG,SAASW,GAAUX,GACtB,sBAAA1D,OAAuB0D,EAAK,GAA5B,KAGG,SAASY,GAAIZ,GAChB,gBAAA1D,OAAiB0D,EAAK,GAAtB,MAAA1D,OAA6B0D,EAAK,GAAlC,KAGG,SAASa,GAASb,GACrB,qBAAA1D,OAAsB0D,EAAK,GAA3B,MAAA1D,OAAkC0D,EAAK,GAAvC,KAGG,SAASc,GAASd,GACrB,gBAAA1D,OAAiB0D,EAAK,GAAtB,MAAA1D,OAA6B0D,EAAK,GAAlC,SCsBWe,eAhCb,SAAAA,EAAY5I,GAAO,IAAAC,EAAA,OAAAjE,OAAAC,EAAA,EAAAD,CAAAE,KAAA0M,IACjB3I,EAAAjE,OAAAkE,EAAA,EAAAlE,CAAAE,KAAAF,OAAAmE,EAAA,EAAAnE,CAAA4M,GAAAxI,KAAAlE,KAAM8D,KAIRyE,SAAW,SAAAoE,GACT5I,EAAKQ,SAAS,CAAEoI,cAJhB5I,EAAKvD,MAAQ,CAAEmM,SAAU,IAFR5I,wEAUjB,OACEU,EAAAC,EAAAC,cAAA,OAAKY,UAAU,OACbd,EAAAC,EAAAC,cAACyH,GAAA,SAAD,CAAU7I,MAAOvD,KAAKQ,MAAMmM,SAAUpE,SAAUvI,KAAKuI,SAAUqE,MAAM,QACnEnI,EAAAC,EAAAC,cAACyH,GAAA,SAASS,KAAV,CAAetJ,MAAM,IAArB,UACAkB,EAAAC,EAAAC,cAACyH,GAAA,SAASU,QAAV,MACArI,EAAAC,EAAAC,cAACyH,GAAA,SAASS,KAAV,CAAetJ,MAAM,UAArB,UACAkB,EAAAC,EAAAC,cAACyH,GAAA,SAASS,KAAV,CAAetJ,MAAM,aAArB,aACAkB,EAAAC,EAAAC,cAACyH,GAAA,SAASS,KAAV,CAAetJ,MAAM,OAArB,OACAkB,EAAAC,EAAAC,cAACyH,GAAA,SAASS,KAAV,CAAetJ,MAAM,YAArB,YACAkB,EAAAC,EAAAC,cAACyH,GAAA,SAASS,KAAV,CAAetJ,MAAM,YAArB,aAEFkB,EAAAC,EAAAC,cAAA,WACyB,WAAxB3E,KAAKQ,MAAMmM,UAAyBlI,EAAAC,EAAAC,cAACoI,GAAD,CAAkBnB,aAAc,EAAGC,YAAamB,KAC5D,cAAxBhN,KAAKQ,MAAMmM,UAA4BlI,EAAAC,EAAAC,cAACoI,GAAD,CAAkBnB,aAAc,EAAGC,YAAamB,KAC/D,QAAxBhN,KAAKQ,MAAMmM,UAAsBlI,EAAAC,EAAAC,cAACoI,GAAD,CAAkBnB,aAAc,EAAGC,YAAamB,KACzD,aAAxBhN,KAAKQ,MAAMmM,UAA2BlI,EAAAC,EAAAC,cAACoI,GAAD,CAAkBnB,aAAc,EAAGC,YAAamB,KAC9D,aAAxBhN,KAAKQ,MAAMmM,UAA2BlI,EAAAC,EAAAC,cAACoI,GAAD,CAAkBnB,aAAc,EAAGC,YAAamB,aA3BpE5H,aCeZ6H,oLAbX,OACExI,EAAAC,EAAAC,cAAA,OAAKY,UAAU,aACbd,EAAAC,EAAAC,cAAA,WAASY,UAAU,WACjBd,EAAAC,EAAAC,cAACuI,GAAD,OAEFzI,EAAAC,EAAAC,cAAA,WAASY,UAAU,WACjBd,EAAAC,EAAAC,cAACwI,GAAD,eATc/H,aCYTgI,oLATX,OACE3I,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAAC0I,GAAD,cANUjI,aCaZkI,GAASC,uBAAa,CAC1BC,iBAAkB,SAAChN,GAGjB,IAFA,IAAIiN,EAAW,GADYC,EAGb5N,OAAO+I,KAAKrI,GAA1BmN,EAAA,EAAAA,EAAAD,EAAAhN,OAAAiN,IAAkC,CAA7B,IAAInL,EAACkL,EAAAC,GACJC,IAAUC,SAASC,WAAWtN,EAAMgC,IACtCiL,EAASjL,GAAKhC,EAAMgC,GAAGuL,OAEvBN,EAASjL,GAAKhC,EAAMgC,GAIxB,OAAOiL,KAILO,GAAiBC,cAEjBC,GAAQC,YACZC,EACAC,YAAgBL,GAAgBV,KAGlCU,GAAeM,IAAI5L,GAEnB6L,iBACE9J,EAAAC,EAAAC,cAAC6J,EAAA,EAAD,CAAUN,MAAOA,IACfzJ,EAAAC,EAAAC,cAAC8J,GAAD,OAEFC,SAASC,eAAe","file":"static/js/main.b6f38271.chunk.js","sourcesContent":["/* Contains definitons of actions */\n\nexport const MULTIPLY_BEGIN = \"MULTIPLY_BEGIN\"\nexport const MULTIPLY_SUCCESS = \"MULTIPLY_SUCCESS\"\nexport const MULTIPLY_ERROR = \"MULTIPLY_ERROR\"\n\nexport const OPERATION_BEGIN = \"OPERATION_BEGIN\"\nexport const OPERATION_SUCCESS = \"OPERATION_SUCCESS\"\nexport const OPERATION_ERROR = \"OPERATION_ERROR\"\n\nexport const UPSERT_MATRIX = \"UPSERT_MATRIX\"\nexport const RENAME_MATRIX = \"RENAME_MATRIX\"\nexport const DELETE_MATRIX = \"DELETE_MATRIX\"\n\nexport const APPEND_LINE = \"APPEND_LINE\"","export default class Ndarray {\n    constructor(numericValues, shape) {\n        this.numericValues = numericValues;\n        this.shape = shape;\n    }\n\n    rows() {\n        return this.shape[0]\n    }\n\n    cols() {\n        return this.shape[1]\n    }\n\n    toMap() {\n        return {\n            numericValues: this.numericValues,\n            shape: this.shape\n        }\n    }\n}","import { UPSERT_MATRIX, RENAME_MATRIX, DELETE_MATRIX, OPERATION_BEGIN, OPERATION_SUCCESS } from \"../actions/actions\";\nimport { OrderedMap } from \"immutable\"\n\nimport Ndarray from \"util/Ndarray\"\n\nconst initialState = {\n  \"matrixMap\": new OrderedMap({\n    foo: new Ndarray([1, 1, 1, 0], [2, 2]),\n    fos: new Ndarray([1, 1], [1, 2])\n  }),\n  \"mostRecentError\": \"\"\n}\n\nconst matrices = (state = initialState, action) => {\n  switch (action.type) {\n    case OPERATION_BEGIN:\n      return { ...state, mostRecentError: \"\" }\n    case UPSERT_MATRIX:\n      if (state.matrixMap.contains(action.name)) {\n        return {\n          ...state,\n          matrixMap: state.matrixMap.updateIn([action.name], () => new Ndarray(action.numericValues, action.shape))\n        }\n      }\n      return {\n        ...state,\n        matrixMap: state.matrixMap.set(action.name, new Ndarray(action.numericValues, action.shape))\n      }\n    case RENAME_MATRIX:\n      return {\n        ...state,\n        matrixMap: state.matrixMap.mapKeys(k => {\n          if (k === action.name) {\n            return action.newName\n          }\n          return k\n        })\n      }\n    case DELETE_MATRIX:\n      return {\n        ...state,\n        matrixMap: state.matrixMap.remove(action.name)\n      }\n    case OPERATION_SUCCESS:\n      if (action.result.validOperation) {\n        let ndarray = action.result.result\n        if (state.matrixMap.contains(action.result.resultVariable)) {\n          return {\n            ...state,\n            matrixMap: state.matrixMap.updateIn([action.resultVariable], () => new Ndarray(ndarray.numericValues, ndarray.shape))\n          }\n        }\n        return {\n          ...state,\n          matrixMap: state.matrixMap.set(action.resultVariable, new Ndarray(ndarray.numericValues, ndarray.shape))\n        }\n      } else {\n        return { ...state, mostRecentError: action.result.result }\n      }\n    default:\n      return state\n  }\n}\n\nexport default matrices\n","\nimport { combineReducers } from 'redux'\nimport matrices from './matrices'\nimport generatedCode from './generatedCode'\n\nexport default combineReducers({\n    matrices,\n    generatedCode\n})\n","import { OPERATION_BEGIN, OPERATION_SUCCESS, OPERATION_ERROR } from \"actions/actions\"\n\nexport function operationBegin(command, matrixNames, resultVariable) {\n    return {\n        type: OPERATION_BEGIN,\n        command,\n        matrixNames,\n        resultVariable\n    }\n}\n\nexport function operationSuccess(resultVariable, result) {\n    return {\n        type: OPERATION_SUCCESS,\n        resultVariable,\n        result\n    }\n}\n\nexport function operationError(errorMessage) {\n    return {\n        type: OPERATION_ERROR,\n        errorMessage\n    }\n}\n\n\n","import { mergeMap, catchError, map } from 'rxjs/operators';\nimport { ajax } from 'rxjs/ajax'\nimport { of } from 'rxjs';\nimport { ofType } from 'redux-observable'\n\n\nimport { operationError, operationSuccess } from 'actions/operation'\nimport { OPERATION_BEGIN } from 'actions/actions'\n\nexport const operationEpic = (action$, state$) => action$.pipe(\n    ofType(OPERATION_BEGIN),\n    mergeMap(action =>\n        ajax({\n            url: 'https://nzr58np206.execute-api.us-west-2.amazonaws.com/beta-prod/operation',\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: {\n                command: action.command,\n                matrices: createBody(action.matrixNames, state$.value.matrices.matrixMap)\n            }\n        }).pipe(\n            map(response => operationSuccess(action.resultVariable, response.response.body)),\n            catchError(error => of(operationError(error)))\n        )\n    )\n)\n\nfunction createBody(matrixNames, matrices) {\n    let matrixValues = matrixNames.map(name => matrices.get(name).toMap())\n    return Object.assign(...matrixNames.map((k, i) => ({ [k]: matrixValues[i] })))\n}\n","import { combineEpics } from 'redux-observable';\nimport { operationEpic } from 'epics/operationEpic'\n\nexport const rootEpic = combineEpics(\n    operationEpic,\n);","import React from 'react';\nimport PropTypes from 'prop-types'\n\nclass ModalWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalState: false\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n  }\n\n  toggleModal() {\n    this.setState((prev, props) => {\n      const newState = !prev.modalState;\n\n      return { modalState: newState };\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          {React.cloneElement(this.props.children[0], { onClick: this.toggleModal })}\n        </div>\n\n        <Modal\n          closeModal={this.toggleModal}\n          modalState={this.state.modalState}\n          title={this.props.children[1]}\n        >\n          {React.cloneElement(this.props.children[2], { toggle: this.toggleModal })}\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst Modal = ({ children, closeModal, modalState, title }) => {\n  if (!modalState) {\n    return null;\n  }\n\n  return (\n    <div className=\"modal is-active\">\n      <div className=\"modal-background\" onClick={closeModal} />\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <p className=\"modal-card-title\">{title}</p>\n          <button className=\"delete\" onClick={closeModal} />\n        </header>\n        <section className=\"modal-card-body\">\n          <div className=\"content\">\n            {children}\n          </div>\n        </section>\n        <footer className=\"modal-card-foot\">\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nModal.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n  modalState: PropTypes.bool.isRequired,\n  title: PropTypes.string\n}\n\nexport default ModalWrapper;","import { UPSERT_MATRIX, RENAME_MATRIX, DELETE_MATRIX } from \"actions/actions\";\n\n\nexport function upsertMatrix(name, shape, numericValues) {\n    return {\n        type: UPSERT_MATRIX,\n        name,\n        shape,\n        numericValues\n    }\n}\n\nexport function renameMatrix(name, newName) {\n    return {\n        type: RENAME_MATRIX,\n        name,\n        newName\n    }\n}\n\nexport function deleteMatrix(name) {\n    return {\n        type: DELETE_MATRIX,\n        name\n    }\n}\n","import React from 'react';\nimport { bindActionCreators } from 'redux'\nimport { connect } from \"react-redux\"\n\nimport { upsertMatrix } from \"actions/matrices\"\nimport { renameMatrix } from \"actions/matrices\"\n\nclass InputGrid extends React.Component {\n    constructor(props) {\n        super(props)\n        if (props.create) {\n            this.state = {\n                numRows: props.initialRows,\n                numCols: props.initialCols,\n                matrixName: ''\n            }\n            this.finishedPopulating = true\n        }\n\n        else if (props.edit) {\n            console.log(props.ndarray)\n            this.state = {\n                numRows: props.ndarray.rows(),\n                numCols: props.ndarray.cols(),\n                numericValues: props.ndarray.numericValues,\n                matrixName: props.matrixName\n            }\n            this.finishedPopulating = false\n        }\n\n        else if (props.clone) {\n            var today = new Date();\n            var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n            var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n            var timestamp = date + ' ' + time\n            this.state = {\n                numRows: props.ndarray.rows(),\n                numCols: props.ndarray.cols(),\n                numericValues: props.ndarray.numericValues,\n                matrixName: props.matrixName + ' __CLONED_AT__' + timestamp\n            }\n            this.finishedPopulating = false\n        }\n\n        this.addRow = this.addRow.bind(this)\n        this.addCol = this.addCol.bind(this)\n        this.removeRow = this.removeRow.bind(this)\n        this.removeCol = this.removeCol.bind(this)\n        this.submit = this.submit.bind(this)\n        this.updateMatrixName = this.updateMatrixName.bind(this)\n        this.getStartingValue = this.getStartingValue.bind(this)\n        this.setFinishedPopulating = this.setFinishedPopulating.bind(this)\n    }\n\n    addRow() {\n        this.setState((prevState) => ({\n            numRows: Math.min(prevState.numRows + 1, 7)\n        }))\n    }\n\n    addCol() {\n        this.setState((prevState) => ({\n            numCols: Math.min(prevState.numCols + 1, 7)\n        }))\n    }\n\n    removeRow() {\n        this.setState((prevState) => ({\n            numRows: Math.max(prevState.numRows - 1, 1)\n        }))\n    }\n\n    removeCol() {\n        this.setState((prevState) => ({\n            numCols: Math.max(prevState.numCols - 1, 1)\n        }))\n    }\n\n    updateMatrixName(newName) {\n        this.setState(\n            { ...this.state, matrixName: newName }\n        )\n    }\n\n    submit() {\n        let numericValues = []\n        for (let r = 0; r < this.state.numRows; r++) {\n            for (let c = 0; c < this.state.numCols; c++) {\n                numericValues.push(this[`textInput${r},${c}`].value)\n            }\n        }\n        if (this.props.edit) {\n            this.props.upsertMatrix(this.props.matrixName, [this.state.numRows, this.state.numCols], numericValues)\n            this.props.renameMatrix(this.props.matrixName, this.state.matrixName)\n        } else {\n            this.props.upsertMatrix(this.state.matrixName, [this.state.numRows, this.state.numCols], numericValues)\n        }\n        this.props.toggle()\n    }\n\n    getStartingValue(i, j) {\n        if (!this.finishedPopulating) {\n            return this.state.numericValues[i * this.state.numCols + j]\n        }\n        return 0\n    }\n\n    setFinishedPopulating(status) {\n        this.finishedPopulating = status\n    }\n\n    render() {\n        let ret = (\n            <div className=\"columns\">\n                <div className=\"column\">\n                    <input\n                        className=\"input\"\n                        type=\"text\"\n                        value={this.state.matrixName}\n                        placeholder=\"Matrix Name\"\n                        onChange={(e) => this.updateMatrixName(e.target.value)} />\n                    <div className=\"columns is-mobile\" style={{ paddingTop: \"25px\" }}>\n                        <div className=\"column is-narrow\">\n                            {[...Array(this.state.numRows).keys()].map(i =>\n                                <div key={i}>\n                                    {[...Array(this.state.numCols).keys()].map(j =>\n                                        <input\n                                            type=\"text\"\n                                            disabled={this.props.clone}\n                                            size=\"4\"\n                                            style={{ fontSize: \"20px\" }}\n                                            defaultValue={this.getStartingValue(i, j)}\n                                            key={`${i},${j}`}\n                                            ref={element => { this[`textInput${i},${j}`] = element }} />\n                                    )}\n                                    <br />\n                                </div>)}\n                        </div>\n                        <div className=\"column is-one-fifth has-text-left\">\n                            <button className=\"button is-small\" onClick={this.removeRow}>Remove Row</button>\n                            <br />\n                            <button className=\"button is-small\" onClick={this.addRow}>Add Row</button>\n                        </div>\n                    </div>\n\n                    <div className=\"columns\" >\n                        <div className=\"column is-narrow has-text-left\">\n                            <span className=\"button is-small\" onClick={this.removeCol}>Remove Col</span>\n                            <span className=\"button is-small\" onClick={this.addCol}>Add Col</span>\n                            <div style={{ paddingTop: \"20px\" }}>\n                                <button className=\"button\" onClick={this.submit}>Submit</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n        this.setFinishedPopulating(true)\n        return ret\n    }\n}\n\n\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        upsertMatrix,\n        renameMatrix\n    },\n        dispatch)\n}\n\nexport default connect(null, mapDispatchToProps)(InputGrid);\n\n","import React from 'react';\nimport ModalWrapper from 'components/common/ModalWrapper'\nimport InputGrid from 'components/common/InputGrid'\n\nclass CreateMatrix extends React.Component {\n  render() {\n    return (\n      <ModalWrapper>\n        <button className=\"button is-primary\">\n          Create New Matrix\n        </button>\n        Create New Matrix\n        <InputGrid initialRows={2} initialCols={2} create />\n      </ModalWrapper>\n    )\n  }\n}\n\nexport default CreateMatrix;","import React from 'react';\nimport { List } from 'immutable';\nimport katex from 'katex';\nimport Parser from 'html-react-parser';\n\nconst START = \"\\\\begin{pmatrix}\"\nconst END = \"\\\\end{pmatrix}\"\n\nclass Matrix extends React.Component {\n    convertStateToLatex(props) {\n        let fragments = new List()\n        var numericValues = props.ndarray.numericValues\n        var rows, cols\n        [rows, cols] = props.ndarray.shape\n        var count\n        for (count = 0; count < rows; count++) {\n            fragments = fragments\n                .push(numericValues\n                    .slice(count * cols, (count + 1) * cols)\n                    .join(' & '))\n        }\n        return START + fragments.join(' \\\\\\\\ ') + END\n    }\n\n    render() {\n        let math = katex.renderToString(this.convertStateToLatex(this.props));\n        return (\n            <div>{Parser(math)}</div>\n        )\n    }\n}\n\nexport default Matrix;","import React from 'react';\n\nclass ResponsiveIcon extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            hover: false\n        }\n        this.hoverOn = this.hoverOn.bind(this)\n        this.hoverOff = this.hoverOff.bind(this)\n    }\n\n    hoverOn() {\n        this.setState({ hover: true });\n    }\n\n    hoverOff() {\n        this.setState({ hover: false });\n    }\n\n    render() {\n        return (\n            <i className={this.state.hover ? \"fas \" + this.props.icon : \"far \" + this.props.icon}\n                style={{ cursor: \"pointer\" }}\n                onMouseEnter={this.hoverOn}\n                onMouseLeave={this.hoverOff}\n                onClick={this.props.onClick}\n                title={this.props.title}\n            ></i>\n        )\n    }\n}\n\nexport default ResponsiveIcon;\n\n","import React from 'react';\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from 'redux'\nimport { deleteMatrix } from \"actions/matrices\"\nimport Matrix from \"components/common/Matrix\"\nimport ModalWrapper from \"components/common/ModalWrapper\"\nimport InputGrid from \"components/common/InputGrid\"\nimport ResponsiveIcon from \"components/common/ResponsiveIcon\"\n\nclass RichMatrix extends React.Component {\n    render() {\n        return (\n            <div className=\"box has-text-centered\">\n                <Matrix ndarray={this.props.ndarray} />\n                {this.props.matrixName}\n                <br />\n                <span className=\"icon has-text-info\" >\n                    <ModalWrapper>\n                        <ResponsiveIcon icon=\"fa-edit\" title=\"Edit the matrix in place\" />\n                        {`edit ${this.props.matrixName}`}\n                        <InputGrid ndarray={this.props.ndarray} matrixName={this.props.matrixName} edit />\n                    </ModalWrapper>\n                </span>\n                <span className=\"icon has-text-info\" >\n                    <ModalWrapper>\n                        <ResponsiveIcon icon=\"fa-clone\" title=\"Create a duplicate of this matrix\" />\n                        {`clone ${this.props.matrixName}`}\n                        <InputGrid ndarray={this.props.ndarray} matrixName={this.props.matrixName} clone />\n                    </ModalWrapper>\n                </span>\n                <span className=\"icon has-text-info\" >\n                    <ResponsiveIcon icon=\"fa-trash-alt\" onClick={() => this.props.deleteMatrix(this.props.matrixName)} title=\"Delete this matrix\" />\n                </span>\n            </div>\n        )\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        deleteMatrix\n    },\n        dispatch)\n}\n\nexport default connect(null, mapDispatchToProps)(RichMatrix);\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\"\n\nimport CreateMatrix from \"components/createMatrix/CreateMatrix\"\nimport RichMatrix from 'components/matricesBank/RichMatrix';\n\n\nclass MatricesBank extends Component {\n\n  render() {\n    return (\n      <div>\n        <nav className=\"level\">\n          <div className=\"level-left\">\n            <div className=\"level-item\">\n              <h2 className=\"subtitle is-3\">Matrices </h2>\n            </div>\n            <div className=\"level-item\">\n              <CreateMatrix />\n            </div>\n          </div>\n        </nav>\n        <div className=\"box\">\n          <div className=\"columns is-multiline\">\n            {this.props.matrixMap.entrySeq().map(([k, v]) =>\n              <div className=\"column is-narrow is-mobile\" key={k}>\n                <RichMatrix\n                  ndarray={v}\n                  matrixName={k}\n                  key={k}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    matrixMap: state.matrices.matrixMap\n  }\n}\n\nexport default connect(mapStateToProps)(MatricesBank);\n","import React from 'react';\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from 'redux'\n\nimport { operationBegin } from \"actions/operation\"\nimport { Button } from \"react-bulma-components/full\"\n\nconst placeholder = \"--Select Matrix--\"\nclass GenericOperation extends React.Component {\n    constructor(props) {\n        super(props)\n        this.operate = this.operate.bind(this)\n        this.showWarning = this.showWarning.bind(this)\n        this.closeWarning = this.closeWarning.bind(this)\n        this.state = { matrix_1: \"\", matrix_2: \"\", resultVariable: \"\", displayWarning: false }\n    }\n    operate = () => {\n        let argv = [...Array(this.props.numDropdowns).keys()].map(i => this[`dropdown${i}`].value)\n        this.props.operationBegin(this.props.codeCreator(argv), argv, this[\"resultName\"].value)\n        this.showWarning()\n    }\n\n    showWarning = () => {\n        this.setState({ displayWarning: true })\n    }\n\n    closeWarning = () => {\n        this.setState({ displayWarning: false })\n    }\n\n    render() {\n        return (\n            <div className=\"box\">\n                <div className=\"level\">\n                    <div className=\"level-left\">\n                        {[...Array(this.props.numDropdowns).keys()].map(i =>\n                            <div className=\"level-item\" key={i}>\n                                <div className=\"select\">\n                                    <select defaultValue=\"\" ref={element => { this[`dropdown${i}`] = element }}>\n                                        <option value=\"\" disabled>{placeholder}</option>\n                                        {this.props.matrixMap.keySeq().map(k =>\n                                            <option value={k} key={k}>{k}</option>\n                                        )}\n                                    </select>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n\n                    <div className=\"level-right\">\n                        <div className=\"level-item\">\n                            <input\n                                className=\"input\"\n                                type=\"text\"\n                                placeholder=\"Store Result As\"\n                                ref={element => { this[\"resultName\"] = element }}\n                            />\n                        </div>\n                    </div>\n\n                </div>\n                <br />\n                <div className=\"level\">\n                    <div className=\"level-left\">\n                        {this.state.displayWarning && this.props.mostRecentError && <div className=\"notification is-warning\">\n                            <button className=\"delete\" onClick={this.closeWarning}></button>\n                            <p><b>Numpy Error: </b>{this.props.mostRecentError}</p>\n                        </div>}\n                    </div>\n                    <div className=\"level-right\">\n                        <div className=\"level-item\">\n                            <Button onClick={this.operate}>Operate</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        matrixMap: state.matrices.matrixMap,\n        mostRecentError: state.matrices.mostRecentError\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        operationBegin\n    },\n        dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GenericOperation);","export function invert(argv) {\n    return `np.linalg.inv(${argv[0]})`\n}\n\nexport function transpose(argv) {\n    return `np.transpose(${argv[0]})`\n}\n\nexport function add(argv) {\n    return `np.add(${argv[0]}, ${argv[1]})`\n}\n\nexport function subtract(argv) {\n    return `np.subtract(${argv[0]}, ${argv[1]})`\n}\n\nexport function multiply(argv) {\n    return `np.dot(${argv[0]}, ${argv[1]})`\n}","import React, { Component } from 'react';\n\nimport { Dropdown } from \"react-bulma-components/full\"\nimport GenericOperation from \"components/controlPanel/operations/GenericOperation\"\nimport * as Creators from \"components/controlPanel/CodeCreators\"\n\nclass ControlPanel extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { selected: \"\" }\n  }\n\n  onChange = selected => {\n    this.setState({ selected });\n  };\n\n  render() {\n    return (\n      <div className=\"box\">\n        <Dropdown value={this.state.selected} onChange={this.onChange} color=\"info\">\n          <Dropdown.Item value=\"\">Select</Dropdown.Item>\n          <Dropdown.Divider />\n          <Dropdown.Item value=\"invert\">Invert</Dropdown.Item>\n          <Dropdown.Item value=\"transpose\">Transpose</Dropdown.Item>\n          <Dropdown.Item value=\"add\">Add</Dropdown.Item>\n          <Dropdown.Item value=\"subtract\">Subtract</Dropdown.Item>\n          <Dropdown.Item value=\"multiply\">Multiply</Dropdown.Item>\n        </Dropdown>\n        <hr />\n        {this.state.selected === \"invert\" && <GenericOperation numDropdowns={1} codeCreator={Creators.invert} />}\n        {this.state.selected === \"transpose\" && <GenericOperation numDropdowns={1} codeCreator={Creators.transpose} />}\n        {this.state.selected === \"add\" && <GenericOperation numDropdowns={2} codeCreator={Creators.add} />}\n        {this.state.selected === \"subtract\" && <GenericOperation numDropdowns={2} codeCreator={Creators.subtract} />}\n        {this.state.selected === \"multiply\" && <GenericOperation numDropdowns={2} codeCreator={Creators.multiply} />}\n      </div>\n    );\n  }\n}\n\nexport default ControlPanel","import React, { Component } from 'react';\n\nimport MatricesBank from \"components/matricesBank/MatricesBank\"\nimport ControlPanel from \"components/controlPanel/ControlPanel\"\n\nclass MatrixGUI extends Component {\n\n  render() {\n    return (\n      <div className=\"container\">\n        <section className=\"section\">\n          <MatricesBank />\n        </section>\n        <section className=\"section\">\n          <ControlPanel />\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default MatrixGUI;\n","import React, { Component } from 'react';\n\nimport MatrixGUI from \"components/MatrixGUI\"\n// import Navbar from \"components/navbar/Navbar\"\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div>\n        {/* <Navbar /> */}\n        <MatrixGUI />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import 'bulma/css/bulma.css'\n\nimport React from 'react';\nimport { render } from 'react-dom'\n\nimport { applyMiddleware, createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from 'reducers'\n\nimport { createEpicMiddleware } from 'redux-observable';\nimport { rootEpic } from 'epics'\n\nimport { createLogger } from 'redux-logger'\nimport Immutable from 'immutable'\nimport 'rxjs';\n\nimport App from 'App';\n\nconst logger = createLogger({\n  stateTransformer: (state) => {\n    let newState = {};\n\n    for (var i of Object.keys(state)) {\n      if (Immutable.Iterable.isIterable(state[i])) {\n        newState[i] = state[i].toJS();\n      } else {\n        newState[i] = state[i];\n      }\n    };\n\n    return newState;\n  }\n});\n\nconst epicMiddleware = createEpicMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(epicMiddleware, logger)\n)\n\nepicMiddleware.run(rootEpic);\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}