{"version":3,"sources":["actions/actions.js","util/Ndarray.js","util/Tuple.js","util/Scalar.js","reducers/values.js","reducers/error.js","reducers/index.js","actions/operation.js","epics/operationEpic.js","epics/index.js","components/common/ModalWrapper.js","actions/matrices.js","components/common/InputGrid.js","components/createMatrix/CreateMatrix.js","components/bank/BankWrapper.js","components/common/ResponsiveIcon.js","components/common/Matrix.js","components/bank/RichMatrix.js","components/bank/Tuple.js","components/common/Scalar.js","components/bank/RichScalar.js","components/bank/ValueBank.js","components/controlPanel/operations/GenericOperation.js","components/controlPanel/CodeCreators.js","components/controlPanel/ControlPanel.js","components/MatrixGUI.js","App.js","index.js"],"names":["OPERATION_BEGIN","OPERATION_SUCCESS","OPERATION_ERROR","UPSERT_MATRIX","RENAME_MATRIX","DELETE_MATRIX","Ndarray","numericValues","shape","Object","classCallCheck","this","Tuple","namev","ndarrayv","length","_this","map","e","i","Scalar","value","initialState","OrderedMap","exampleNdarray","upsert","state","name","dataTypeObjectPair","contains","updateIn","set","values","arguments","undefined","action","type","mapKeys","k","newName","remove","result","validOperation","dataType","misc","entry","resultVariable","error","combineReducers","generatedCode","operationBegin","command","dataNames","dataTypes","createBody","dataValues","get","serialize","console","log","assign","apply","toConsumableArray","defineProperty","rootEpic","combineEpics","action$","state$","pipe","ofType","mergeMap","ajax","url","method","headers","Content-Type","body","matrices","response","catchError","of","errorMessage","ModalWrapper","props","possibleConstructorReturn","getPrototypeOf","call","modalState","toggleModal","bind","assertThisInitialized","setState","prev","react_default","a","createElement","React","cloneElement","children","onClick","ModalWrapper_Modal","closeModal","title","toggle","Component","Modal","_ref","className","upsertMatrix","renameMatrix","deleteMatrix","variableNameRe","RegExp","InputGrid","create","numRows","initialRows","numCols","initialCols","matrixName","finishedPopulating","edit","ndarray","rows","cols","clone","today","Date","timestamp","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","addRow","addCol","removeRow","removeCol","submit","updateMatrixName","getStartingValue","setFinishedPopulating","validMatrixName","prevState","Math","min","max","objectSpread","r","c","push","concat","j","status","str","match","matchExact","_this2","ret","placeholder","onChange","target","style","paddingTop","Array","keys","key","size","fontSize","defaultValue","ref","element","disabled","connect","dispatch","bindActionCreators","CreateMatrix","common_ModalWrapper","common_InputGrid","BankWrapper","createNew","ResponsiveIcon","hover","hoverOn","hoverOff","icon","cursor","onMouseEnter","onMouseLeave","Matrix","count","fragments","List","numerics","float","round","pow","_props$numerics$shape","slicedToArray","slice","join","math","katex","renderToString","convertStateToLatex","Parser","RichMatrix","common_Matrix","common_ResponsiveIcon","delete","nameMatrixPairs","_ref2","bank_RichMatrix","RichScalar","common_Scalar","MatrixBank","bank_BankWrapper","createMatrix_CreateMatrix","matrixMap","entrySeq","v","renderHelper","bank_RichScalar","bank_Tuple","GenericOperation","operate","argv","numDropdowns","codeCreator","showWarning","displayWarning","closeWarning","matrix_1","matrix_2","workspaceValues","keySeq","mostRecentError","full","invert","invertTypes","transpose","transposeTypes","add","addTypes","subtract","subtractTypes","multiply","multiplyTypes","svd","svdTypes","eigenvectors","eigenvectorsTypes","qr","qrTypes","determinant","determinantTypes","nullspace","nullspaceTypes","ControlPanel","selectTab","selected","operationType","operation","operationSelected","isActive","color","Item","operations_GenericOperation","Creators","MatrixGUI","controlPanel_ControlPanel","ValueBank","App","components_MatrixGUI","logger","createLogger","stateTransformer","newState","_arr","_i","Immutable","Iterable","isIterable","toJS","epicMiddleware","createEpicMiddleware","store","createStore","rootReducer","applyMiddleware","run","render","es","src_App","document","getElementById"],"mappings":"yMAEaA,EAAkB,kBAClBC,EAAoB,oBACpBC,EAAkB,kBAElBC,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAgB,sCCRRC,aACjB,SAAAA,EAAYC,EAAeC,GAAQC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GAC/BK,KAAKJ,cAAgBA,EACrBI,KAAKH,MAAQA,qDAIb,OAAOG,KAAKH,MAAM,kCAIlB,OAAOG,KAAKH,MAAM,uCAIlB,MAAO,CAAED,cAAeI,KAAKJ,cAAeC,MAAOG,KAAKH,gBCf3CI,aACjB,SAAAA,EAAYC,EAAOC,GAAWL,OAAAC,EAAA,EAAAD,CAAAE,KAAAC,GAC1BD,KAAKE,MAAQA,EACbF,KAAKG,SAAWA,mDAIhB,OAAOH,KAAKE,MAAME,+CAGA,IAAAC,EAAAL,KAClB,OAAOA,KAAKE,MAAMI,IAAI,SAACC,EAAGC,GACtB,MAAO,CAACD,EAAGF,EAAKF,SAASK,eCZhBC,aACjB,SAAAA,EAAYC,GAAQZ,OAAAC,EAAA,EAAAD,CAAAE,KAAAS,GAChBT,KAAKU,MAAQA,0DAIb,OAAOV,KAAKU,eCUdC,GATY,IAAIhB,EAAQ,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,IAAK,IAAIA,EAAQ,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,IAAK,IAAIA,EAAQ,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,IASjG,IAAIiB,IAAW,CAClCC,eAAgB,CAAC,UAAW,IAAIlB,EAAQ,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,QA8C5D,SAASmB,EAAOC,EAAOC,EAAMC,GAC3B,OAAIF,EAAMG,SAASF,GACVD,EAAMI,SAAS,CAACH,GAAO,kBAAMC,IAE/BF,EAAMK,IAAIJ,EAAMC,GAGVI,MAlDA,WAAkC,IAC3CJ,EADUF,EAAiCO,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,GAAAA,UAAA,GAAzBX,EAAca,EAAWF,UAAAlB,OAAA,EAAAkB,UAAA,QAAAC,EAE/C,OAAQC,EAAOC,MACb,KAAKjC,EAEH,OADAyB,EAAqB,CAAC,UAAW,IAAItB,EAAQ6B,EAAO5B,cAAe4B,EAAO3B,QACnEiB,EAAOC,EAAOS,EAAOR,KAAMC,GACpC,KAAKxB,EACH,OAAOsB,EAAMW,QAAQ,SAAAC,GACnB,OAAIA,IAAMH,EAAOR,KACRQ,EAAOI,QAETD,IAEX,KAAKjC,EACH,OAAOqB,EAAMc,OAAOL,EAAOR,MAC7B,KAAK1B,EACH,GAAIkC,EAAOM,OAAOC,eAAgB,CAChC,OAAQP,EAAOM,OAAOE,UACpB,IAAK,UACHf,EAAqB,CAAC,UAAW,IAAItB,EAAQ6B,EAAOM,OAAOA,OAAOlC,cAAe4B,EAAOM,OAAOA,OAAOjC,QACtG,MAEF,IAAK,QACHoB,EAAqB,CAAC,QAAS,IAAIhB,EAAMuB,EAAOS,KAAK/B,MAAOsB,EAAOM,OAAOA,OAAOxB,IAAI,SAAA4B,GAAK,OACxF,IAAIvC,EAAQuC,EAAMtC,cAAesC,EAAMrC,WACzC,MAEF,IAAK,SACHoB,EAAqB,CAAC,SAAU,IAAIR,EAAOe,EAAOM,OAAOA,SAM7D,OAAOhB,EAAOC,EAAOS,EAAOW,eAAgBlB,GAE5C,OAAOF,EAEX,QACE,OAAOA,qBCzCEqB,EAdD,WAAkC,IAAjCrB,EAAiCO,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,GAAAA,UAAA,GAF3B,GAEgBE,EAAWF,UAAAlB,OAAA,EAAAkB,UAAA,QAAAC,EAC5C,OAAQC,EAAOC,MACX,KAAKpC,EACD,MAAO,GACX,KAAKC,EACD,OAAKkC,EAAOM,OAAOC,eAGZhB,EAFIS,EAAOM,OAAOA,OAG7B,QACI,OAAOf,ICRJsB,cAAgB,CAC3BhB,SACAiB,kBACAF,0FCPG,SAASG,EAAeC,EAASC,EAAWC,EAAWP,EAAgBF,GAC1E,MAAO,CACHR,KAAMpC,EACNmD,UACAC,YACAC,YACAP,iBACAF,QCoBR,SAASU,EAAWF,EAAW1B,GAC3B,IAAI6B,EAAaH,EAAUnC,IAAI,SAAAU,GAAI,MAAI,CAACD,EAAM8B,IAAI7B,GAAM,GAAID,EAAM8B,IAAI7B,GAAM,GAAG8B,eAE/E,OADAC,QAAQC,IAAIlD,OAAOmD,OAAPC,MAAApD,OAAMA,OAAAqD,EAAA,EAAArD,CAAW2C,EAAUnC,IAAI,SAACqB,EAAGnB,GAAJ,OAAAV,OAAAsD,EAAA,EAAAtD,CAAA,GAAc6B,EAAIiB,EAAWpC,SACjEV,OAAOmD,OAAPC,MAAApD,OAAMA,OAAAqD,EAAA,EAAArD,CAAW2C,EAAUnC,IAAI,SAACqB,EAAGnB,GAAJ,OAAAV,OAAAsD,EAAA,EAAAtD,CAAA,GAAc6B,EAAIiB,EAAWpC,QC7BhE,IAAM6C,EAAWC,YDMK,SAACC,EAASC,GAAV,OAAqBD,EAAQE,KACtDC,YAAOrE,GACPsE,YAAS,SAAAnC,GAAM,OACXoC,YAAK,CACDC,IAAK,6EACLC,OAAQ,MACRC,QAAS,CACLC,eAAgB,oBAEpBC,KAAM,CACFzB,QAAShB,EAAOgB,QAChB0B,SAAUvB,EAAWnB,EAAOiB,UAAWe,EAAO9C,MAAMW,WAEzDoC,KACCnD,YAAI,SAAA6D,GAAQ,ODVShC,ECUYX,EAAOW,eDVHL,ECUmBqC,EAASA,SAASF,KDV7BhC,ECUmCT,EAAOS,KDTxF,CACHR,KAAMnC,EACN6C,iBACAL,SACAG,QALD,IAA0BE,EAAgBL,EAAQG,ICW7CmC,YAAW,SAAAhC,GAAK,OAAIiC,YDDrB,CACH5C,KAAMlC,EACN+E,aCD0ClC,wDErB5CmC,cACJ,SAAAA,EAAYC,GAAO,IAAAnE,EAAA,OAAAP,OAAAC,EAAA,EAAAD,CAAAE,KAAAuE,IACjBlE,EAAAP,OAAA2E,EAAA,EAAA3E,CAAAE,KAAAF,OAAA4E,EAAA,EAAA5E,CAAAyE,GAAAI,KAAA3E,KAAMwE,KACDzD,MAAQ,CACX6D,YAAY,GAEdvE,EAAKwE,YAAcxE,EAAKwE,YAAYC,KAAjBhF,OAAAiF,EAAA,EAAAjF,QAAAiF,EAAA,EAAAjF,CAAAO,KALFA,6EASjBL,KAAKgF,SAAS,SAACC,EAAMT,GAGnB,MAAO,CAAEI,YAFSK,EAAKL,+CAOzB,OACEM,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACGC,IAAMC,aAAatF,KAAKwE,MAAMe,SAAS,GAAI,CAAEC,QAASxF,KAAK6E,eAG9DK,EAAAC,EAAAC,cAACK,EAAD,CACEC,WAAY1F,KAAK6E,YACjBD,WAAY5E,KAAKe,MAAM6D,WACvBe,MAAO3F,KAAKwE,MAAMe,SAAS,IAE1BF,IAAMC,aAAatF,KAAKwE,MAAMe,SAAS,GAAI,CAAEK,OAAQ5F,KAAK6E,uBA7B1CQ,IAAMQ,WAoC3BC,EAAQ,SAAAC,GAAiD,IAA9CR,EAA8CQ,EAA9CR,SAAUG,EAAoCK,EAApCL,WAAYd,EAAwBmB,EAAxBnB,WAAYe,EAAYI,EAAZJ,MACjD,OAAKf,EAKHM,EAAAC,EAAAC,cAAA,OAAKY,UAAU,mBACbd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,mBAAmBR,QAASE,IAC3CR,EAAAC,EAAAC,cAAA,OAAKY,UAAU,cACbd,EAAAC,EAAAC,cAAA,UAAQY,UAAU,mBAChBd,EAAAC,EAAAC,cAAA,KAAGY,UAAU,oBAAoBL,GACjCT,EAAAC,EAAAC,cAAA,UAAQY,UAAU,SAASR,QAASE,KAEtCR,EAAAC,EAAAC,cAAA,WAASY,UAAU,mBACjBd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,WACZT,IAGLL,EAAAC,EAAAC,cAAA,UAAQY,UAAU,sBAhBf,MA6BIzB,YCnER,SAAS0B,EAAajF,EAAMnB,EAAOD,GACtC,MAAO,CACH6B,KAAMjC,EACNwB,OACAnB,QACAD,iBAID,SAASsG,EAAalF,EAAMY,GAC/B,MAAO,CACHH,KAAMhC,EACNuB,OACAY,WAID,SAASuE,EAAanF,GACzB,MAAO,CACHS,KAAM/B,EACNsB,QChBR,IAAMoF,EAAiB,IAAIC,OAAO,+BAO5BC,eACF,SAAAA,EAAY9B,GAAO,IAAAnE,EAEf,GAFeP,OAAAC,EAAA,EAAAD,CAAAE,KAAAsG,GACfjG,EAAAP,OAAA2E,EAAA,EAAA3E,CAAAE,KAAAF,OAAA4E,EAAA,EAAA5E,CAAAwG,GAAA3B,KAAA3E,KAAMwE,IACFA,EAAM+B,OACNlG,EAAKU,MAAQ,CACTyF,QAAShC,EAAMiC,YACfC,QAASlC,EAAMmC,YACfC,WAAY,IAEhBvG,EAAKwG,oBAAqB,OAGzB,GAAIrC,EAAMsC,KACX/D,QAAQC,IAAIwB,EAAMuC,SAClB1G,EAAKU,MAAQ,CACTyF,QAAShC,EAAMuC,QAAQC,OACvBN,QAASlC,EAAMuC,QAAQE,OACvBrH,cAAe4E,EAAMuC,QAAQnH,cAC7BgH,WAAYpC,EAAMoC,YAEtBvG,EAAKwG,oBAAqB,OAGzB,GAAIrC,EAAM0C,MAAO,CAClB,IAAIC,EAAQ,IAAIC,KAGZC,EAFOF,EAAMG,cAAgB,KAAOH,EAAMI,WAAa,GAAK,IAAMJ,EAAMK,UAErD,KADZL,EAAMM,WAAa,IAAMN,EAAMO,aAAe,IAAMP,EAAMQ,cAErEtH,EAAKU,MAAQ,CACTyF,QAAShC,EAAMuC,QAAQC,OACvBN,QAASlC,EAAMuC,QAAQE,OACvBrH,cAAe4E,EAAMuC,QAAQnH,cAC7BgH,WAAYpC,EAAMoC,WAAa,iBAAmBS,GAEtDhH,EAAKwG,oBAAqB,EAjCf,OAoCfxG,EAAKuH,OAASvH,EAAKuH,OAAO9C,KAAZhF,OAAAiF,EAAA,EAAAjF,QAAAiF,EAAA,EAAAjF,CAAAO,KACdA,EAAKwH,OAASxH,EAAKwH,OAAO/C,KAAZhF,OAAAiF,EAAA,EAAAjF,QAAAiF,EAAA,EAAAjF,CAAAO,KACdA,EAAKyH,UAAYzH,EAAKyH,UAAUhD,KAAfhF,OAAAiF,EAAA,EAAAjF,QAAAiF,EAAA,EAAAjF,CAAAO,KACjBA,EAAK0H,UAAY1H,EAAK0H,UAAUjD,KAAfhF,OAAAiF,EAAA,EAAAjF,QAAAiF,EAAA,EAAAjF,CAAAO,KACjBA,EAAK2H,OAAS3H,EAAK2H,OAAOlD,KAAZhF,OAAAiF,EAAA,EAAAjF,QAAAiF,EAAA,EAAAjF,CAAAO,KACdA,EAAK4H,iBAAmB5H,EAAK4H,iBAAiBnD,KAAtBhF,OAAAiF,EAAA,EAAAjF,QAAAiF,EAAA,EAAAjF,CAAAO,KACxBA,EAAK6H,iBAAmB7H,EAAK6H,iBAAiBpD,KAAtBhF,OAAAiF,EAAA,EAAAjF,QAAAiF,EAAA,EAAAjF,CAAAO,KACxBA,EAAK8H,sBAAwB9H,EAAK8H,sBAAsBrD,KAA3BhF,OAAAiF,EAAA,EAAAjF,QAAAiF,EAAA,EAAAjF,CAAAO,KAC7BA,EAAK+H,gBAAkB/H,EAAK+H,gBAAgBtD,KAArBhF,OAAAiF,EAAA,EAAAjF,QAAAiF,EAAA,EAAAjF,CAAAO,KA5CRA,wEAgDfL,KAAKgF,SAAS,SAACqD,GAAD,MAAgB,CAC1B7B,QAAS8B,KAAKC,IAAIF,EAAU7B,QAAU,EAAG,uCAK7CxG,KAAKgF,SAAS,SAACqD,GAAD,MAAgB,CAC1B3B,QAAS4B,KAAKC,IAAIF,EAAU3B,QAAU,EAAG,0CAK7C1G,KAAKgF,SAAS,SAACqD,GAAD,MAAgB,CAC1B7B,QAAS8B,KAAKE,IAAIH,EAAU7B,QAAU,EAAG,0CAK7CxG,KAAKgF,SAAS,SAACqD,GAAD,MAAgB,CAC1B3B,QAAS4B,KAAKE,IAAIH,EAAU3B,QAAU,EAAG,+CAIhC9E,GACb5B,KAAKgF,SAALlF,OAAA2I,EAAA,EAAA3I,CAAA,GACSE,KAAKe,MADd,CACqB6F,WAAYhF,sCAMjC,IADA,IAAIhC,EAAgB,GACX8I,EAAI,EAAGA,EAAI1I,KAAKe,MAAMyF,QAASkC,IACpC,IAAK,IAAIC,EAAI,EAAGA,EAAI3I,KAAKe,MAAM2F,QAASiC,IACpC/I,EAAcgJ,KAAK5I,KAAA,YAAA6I,OAAiBH,EAAjB,KAAAG,OAAsBF,IAAKjI,OAGlDV,KAAKwE,MAAMsC,MACX9G,KAAKwE,MAAMyB,aAAajG,KAAKwE,MAAMoC,WAAY,CAAC5G,KAAKe,MAAMyF,QAASxG,KAAKe,MAAM2F,SAAU9G,GACzFI,KAAKwE,MAAM0B,aAAalG,KAAKwE,MAAMoC,WAAY5G,KAAKe,MAAM6F,aAE1D5G,KAAKwE,MAAMyB,aAAajG,KAAKe,MAAM6F,WAAY,CAAC5G,KAAKe,MAAMyF,QAASxG,KAAKe,MAAM2F,SAAU9G,GAE7FI,KAAKwE,MAAMoB,kDAGEpF,EAAGsI,GAChB,OAAK9I,KAAK6G,mBAGH,EAFI7G,KAAKe,MAAMnB,cAAcY,EAAIR,KAAKe,MAAM2F,QAAUoC,iDAK3CC,GAClB/I,KAAK6G,mBAAqBkC,4CAI1B,OA/GR,SAAoBL,EAAGM,GACnB,IAAIC,EAAQD,EAAIC,MAAMP,GACtB,OAAgB,MAATO,GAAiBD,GAAOC,EAAM,GA6G1BC,CAAW9C,EAAgBpG,KAAKe,MAAM6F,6CAGxC,IAAAuC,EAAAnJ,KACDoJ,EACAlE,EAAAC,EAAAC,cAAA,OAAKY,UAAU,WACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,UACXd,EAAAC,EAAAC,cAAA,SACIY,UAAU,QACVvE,KAAK,OACLf,MAAOV,KAAKe,MAAM6F,WAClByC,YAAY,cACZC,SAAU,SAAC/I,GAAD,OAAO4I,EAAKlB,iBAAiB1H,EAAEgJ,OAAO7I,WAClDV,KAAKoI,mBAAqBlD,EAAAC,EAAAC,cAAA,KAAGY,UAAU,kBAAb,oDAC5Bd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,oBAAoBwD,MAAO,CAAEC,WAAY,SACpDvE,EAAAC,EAAAC,cAAA,OAAKY,UAAU,oBACVlG,OAAAqD,EAAA,EAAArD,CAAI4J,MAAM1J,KAAKe,MAAMyF,SAASmD,QAAQrJ,IAAI,SAAAE,GAAC,OACxC0E,EAAAC,EAAAC,cAAA,OAAKwE,IAAKpJ,GACLV,OAAAqD,EAAA,EAAArD,CAAI4J,MAAMP,EAAKpI,MAAM2F,SAASiD,QAAQrJ,IAAI,SAAAwI,GAAC,OACxC5D,EAAAC,EAAAC,cAAA,SACI3D,KAAK,OACLoI,KAAK,IACLL,MAAO,CAAEM,SAAU,QACnBC,aAAcZ,EAAKjB,iBAAiB1H,EAAGsI,GACvCc,IAAG,GAAAf,OAAKrI,EAAL,KAAAqI,OAAUC,GACbkB,IAAK,SAAAC,GAAad,EAAI,YAAAN,OAAarI,EAAb,KAAAqI,OAAkBC,IAAOmB,OAEvD/E,EAAAC,EAAAC,cAAA,eAGZF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,qCACXd,EAAAC,EAAAC,cAAA,UAAQY,UAAU,kBAAkBR,QAASxF,KAAK8H,WAAlD,cACA5C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQY,UAAU,kBAAkBR,QAASxF,KAAK4H,QAAlD,aAIR1C,EAAAC,EAAAC,cAAA,OAAKY,UAAU,WACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,kCACXd,EAAAC,EAAAC,cAAA,QAAMY,UAAU,kBAAkBR,QAASxF,KAAK+H,WAAhD,cACA7C,EAAAC,EAAAC,cAAA,QAAMY,UAAU,kBAAkBR,QAASxF,KAAK6H,QAAhD,WACA3C,EAAAC,EAAAC,cAAA,OAAKoE,MAAO,CAAEC,WAAY,SACtBvE,EAAAC,EAAAC,cAAA,UAAQY,UAAU,SAASkE,UAAWlK,KAAKoI,kBAAmB5C,QAASxF,KAAKgI,QAA5E,eAQxB,OADAhI,KAAKmI,uBAAsB,GACpBiB,SA5JS/D,IAAMQ,WA0KfsE,mBAAQ,KARvB,SAA4BC,GACxB,OAAOC,YAAmB,CACtBpE,eACAC,gBAEAkE,IAGOD,CAAkC7D,ICnKlCgE,oLAfX,OACEpF,EAAAC,EAAAC,cAACmF,EAAD,KACErF,EAAAC,EAAAC,cAAA,UAAQY,UAAU,qBAAlB,qBADF,oBAKEd,EAAAC,EAAAC,cAACoF,GAAD,CAAW/D,YAAa,EAAGE,YAAa,EAAGJ,QAAM,IACjDrB,EAAAC,EAAAC,cAAA,UAAQY,UAAU,qBAAlB,kBATmBX,IAAMQ,WCuBlB4E,oLAtBP,OACIvF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,SACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,cACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,cACXd,EAAAC,EAAAC,cAAA,MAAIY,UAAU,iBAAiBhG,KAAKwE,MAAMmB,MAA1C,MAEJT,EAAAC,EAAAC,cAAA,OAAKY,UAAU,cACVhG,KAAKwE,MAAMkG,aAIxBxF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,OACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,wBACVhG,KAAKwE,MAAMe,mBAjBVM,aC+BX8E,eA9BX,SAAAA,EAAYnG,GAAO,IAAAnE,EAAA,OAAAP,OAAAC,EAAA,EAAAD,CAAAE,KAAA2K,IACftK,EAAAP,OAAA2E,EAAA,EAAA3E,CAAAE,KAAAF,OAAA4E,EAAA,EAAA5E,CAAA6K,GAAAhG,KAAA3E,KAAMwE,KACDzD,MAAQ,CACT6J,OAAO,GAEXvK,EAAKwK,QAAUxK,EAAKwK,QAAQ/F,KAAbhF,OAAAiF,EAAA,EAAAjF,QAAAiF,EAAA,EAAAjF,CAAAO,KACfA,EAAKyK,SAAWzK,EAAKyK,SAAShG,KAAdhF,OAAAiF,EAAA,EAAAjF,QAAAiF,EAAA,EAAAjF,CAAAO,KANDA,yEAUfL,KAAKgF,SAAS,CAAE4F,OAAO,uCAIvB5K,KAAKgF,SAAS,CAAE4F,OAAO,qCAIvB,OACI1F,EAAAC,EAAAC,cAAA,KAAGY,UAAWhG,KAAKe,MAAM6J,MAAQ,OAAS5K,KAAKwE,MAAMuG,KAAO,OAAS/K,KAAKwE,MAAMuG,KAC5EvB,MAAO,CAAEwB,OAAQ,WACjBC,aAAcjL,KAAK6K,QACnBK,aAAclL,KAAK8K,SACnBtF,QAASxF,KAAKwE,MAAMgB,QACpBG,MAAO3F,KAAKwE,MAAMmB,eAzBLN,IAAMQ,mDC8BpBsF,+LAvBS3G,GAChB,IAEIwC,EAAMC,EAENmE,EAJAC,EAAY,IAAIC,IAChB1L,EAAgB4E,EAAM+G,SAAS3L,cAAcU,IAAI,SAAAkL,GAAK,OAAIlD,KAAKmD,MAAMD,EAAQlD,KAAKoD,IAAI,GAAI,IAAMpD,KAAKoD,IAAI,GAAI,KAF1FC,EAAA7L,OAAA8L,EAAA,EAAA9L,CAIR0E,EAAM+G,SAAS1L,MAJP,GAMvB,IAFCmH,EAJsB2E,EAAA,GAIhB1E,EAJgB0E,EAAA,GAMlBP,EAAQ,EAAGA,EAAQpE,EAAMoE,IAC1BC,EAAYA,EACPzC,KAAKhJ,EACDiM,MAAMT,EAAQnE,GAAOmE,EAAQ,GAAKnE,GAClC6E,KAAK,QAElB,MAhBM,mBAgBST,EAAUS,KAAK,UAf1B,kDAmBJ,IAAIC,EAAOC,KAAMC,eAAejM,KAAKkM,oBAAoBlM,KAAKwE,QAC9D,OACIU,EAAAC,EAAAC,cAAA,WAAM+G,KAAOJ,WAnBJ1G,IAAMQ,WCErBuG,oLACO,IAAA/L,EAAAL,KACL,OACIkF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,yBACXd,EAAAC,EAAAC,cAACiH,GAAD,CAAQd,SAAUvL,KAAKwE,MAAM+G,WAC5BvL,KAAKwE,MAAMxD,KACZkE,EAAAC,EAAAC,cAAA,WACCpF,KAAKwE,MAAMsC,MAAQ5B,EAAAC,EAAAC,cAAA,QAAMY,UAAU,sBAChCd,EAAAC,EAAAC,cAACmF,EAAD,KACIrF,EAAAC,EAAAC,cAACkH,GAAD,CAAgBvB,KAAK,UAAUpF,MAAM,6BADzC,QAAAkD,OAEa7I,KAAKwE,MAAMxD,MACpBkE,EAAAC,EAAAC,cAACoF,GAAD,CAAWzD,QAAS/G,KAAKwE,MAAM+G,SAAU3E,WAAY5G,KAAKwE,MAAMxD,KAAM8F,MAAI,MAGjF9G,KAAKwE,MAAM0C,OAAShC,EAAAC,EAAAC,cAAA,QAAMY,UAAU,sBACjCd,EAAAC,EAAAC,cAACmF,EAAD,KACIrF,EAAAC,EAAAC,cAACkH,GAAD,CAAgBvB,KAAK,WAAWpF,MAAM,sCAD1C,SAAAkD,OAEc7I,KAAKwE,MAAMoC,YACrB1B,EAAAC,EAAAC,cAACoF,GAAD,CAAWzD,QAAS/G,KAAKwE,MAAM+G,SAAU3E,WAAY5G,KAAKwE,MAAMxD,KAAMkG,OAAK,MAGlFlH,KAAKwE,MAAM+H,QAAUrH,EAAAC,EAAAC,cAAA,QAAMY,UAAU,sBAClCd,EAAAC,EAAAC,cAACkH,GAAD,CAAgBvB,KAAK,eAAevF,QAAS,kBAAMnF,EAAKmE,MAAM2B,aAAa9F,EAAKmE,MAAMxD,OAAO2E,MAAM,gCAtB9FN,IAAMQ,WAoChBsE,mBAAQ,KAPvB,SAA4BC,GACxB,OAAOC,YAAmB,CACtBlE,gBAEAiE,IAGOD,CAAkCiC,IC1BlCnM,oLAfP,OACIiF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,yBACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,wBACVhG,KAAKwE,MAAM+G,SAASiB,gBAAgBlM,IAAI,SAAAyF,GAAA,IAAA0G,EAAA3M,OAAA8L,EAAA,EAAA9L,CAAAiG,EAAA,GAAE/E,EAAFyL,EAAA,GAAQ1F,EAAR0F,EAAA,UACrCvH,EAAAC,EAAAC,cAAA,OAAKY,UAAU,SAAS4D,IAAK5I,GACzBkE,EAAAC,EAAAC,cAACsH,GAAD,CAAYnB,SAAUxE,EAAS/F,KAAMA,EAAMkG,OAAK,EAACqF,QAAM,QAInErH,EAAAC,EAAAC,cAAA,SAAIpF,KAAKwE,MAAMxD,cAXXqE,IAAMQ,WCSXpF,oLARP,OACIyE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAIkD,KAAKmD,MAAMzL,KAAKwE,MAAM+G,SAAS7K,MAAQ4H,KAAKoD,IAAI,GAAI,IAAMpD,KAAKoD,IAAI,GAAI,YAJtErG,IAAMQ,WCQrB8G,oLAEE,OACIzH,EAAAC,EAAAC,cAAA,OAAKY,UAAU,yBACXd,EAAAC,EAAAC,cAACwH,GAAD,CAAQrB,SAAUvL,KAAKwE,MAAM+G,WAC5BvL,KAAKwE,MAAMxD,aALHqE,IAAMQ,WAkBhBsE,mBAAQ,KAPvB,SAA4BC,GACxB,OAAOC,YAAmB,CACtBlE,gBAEAiE,IAGOD,CAAkCwC,ICjB3CE,oLAEF,OACE3H,EAAAC,EAAAC,cAAC0H,GAAD,CAAanH,MAAM,YAAY+E,UAAWxF,EAAAC,EAAAC,cAAC2H,GAAD,OACvC/M,KAAKwE,MAAMwI,UAAUC,WAAW3M,IAAI,SAAAyF,GAAA,IAAA0G,EAAA3M,OAAA8L,EAAA,EAAA9L,CAAAiG,EAAA,GAAEpE,EAAF8K,EAAA,GAAKS,EAALT,EAAA,UACnCvH,EAAAC,EAAAC,cAAA,OAAKY,UAAU,6BAA6B4D,IAAKjI,GAC9CwL,GAAYjK,WAAZ,GAAavB,GAAbkH,OAAA/I,OAAAqD,EAAA,EAAArD,CAAmBoN,gBANPrH,aAcnBsH,GAAe,SAACnM,EAAMS,EAAM8J,GAChC,OAAQ9J,GACN,IAAK,SACH,OAAQyD,EAAAC,EAAAC,cAACgI,GAAD,CAAYpM,KAAMA,EAAMuK,SAAUA,IAC5C,IAAK,UACH,OAAQrG,EAAAC,EAAAC,cAACsH,GAAD,CAAY1L,KAAMA,EAAMuK,SAAUA,EAAUzE,MAAI,EAACI,OAAK,EAACqF,QAAM,IACvE,IAAK,QACH,OAAQrH,EAAAC,EAAAC,cAACiI,GAAD,CAAOrM,KAAMA,EAAMuK,SAAUA,IACvC,QACE,OAAO,OAUEpB,mBANf,SAA4BpJ,GAC1B,MAAO,CACLiM,UAAWjM,EAAMM,SAIN8I,CAA4B0C,aCpCrCS,eACF,SAAAA,EAAY9I,GAAO,IAAAnE,EAAA,OAAAP,OAAAC,EAAA,EAAAD,CAAAE,KAAAsN,IACfjN,EAAAP,OAAA2E,EAAA,EAAA3E,CAAAE,KAAAF,OAAA4E,EAAA,EAAA5E,CAAAwN,GAAA3I,KAAA3E,KAAMwE,KAMV+I,QAAU,WACNxK,QAAQC,IAAI3C,EAAKmE,OACjB,IAAIgJ,EAAO1N,OAAAqD,EAAA,EAAArD,CAAI4J,MAAMrJ,EAAKmE,MAAMiJ,cAAc9D,QAAQrJ,IAAI,SAAAE,GAAC,OAAIH,EAAA,WAAAwI,OAAgBrI,IAAKE,QACpFL,EAAKmE,MAAMjC,eACPlC,EAAKmE,MAAMkJ,YAAYF,GACvBA,EACAnN,EAAKmE,MAAM9B,UACXrC,EAAA,WAAmBK,MACnBL,EAAKmE,MAAMvC,MAEf5B,EAAKsN,eAjBUtN,EAoBnBsN,YAAc,WACVtN,EAAK2E,SAAS,CAAE4I,gBAAgB,KArBjBvN,EAwBnBwN,aAAe,WACXxN,EAAK2E,SAAS,CAAE4I,gBAAgB,KAvBhCvN,EAAKkN,QAAUlN,EAAKkN,QAAQzI,KAAbhF,OAAAiF,EAAA,EAAAjF,QAAAiF,EAAA,EAAAjF,CAAAO,KACfA,EAAKsN,YAActN,EAAKsN,YAAY7I,KAAjBhF,OAAAiF,EAAA,EAAAjF,QAAAiF,EAAA,EAAAjF,CAAAO,KACnBA,EAAKwN,aAAexN,EAAKwN,aAAa/I,KAAlBhF,OAAAiF,EAAA,EAAAjF,QAAAiF,EAAA,EAAAjF,CAAAO,KACpBA,EAAKU,MAAQ,CAAE+M,SAAU,GAAIC,SAAU,GAAI5L,eAAgB,GAAIyL,gBAAgB,GALhEvN,wEA4BV,IAAA8I,EAAAnJ,KACL,OACIkF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,OACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,SACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,cACVlG,OAAAqD,EAAA,EAAArD,CAAI4J,MAAM1J,KAAKwE,MAAMiJ,cAAc9D,QAAQrJ,IAAI,SAAAE,GAAC,OAC7C0E,EAAAC,EAAAC,cAAA,OAAKY,UAAU,aAAa4D,IAAKpJ,GAC7B0E,EAAAC,EAAAC,cAAA,OAAKY,UAAU,UACXd,EAAAC,EAAAC,cAAA,UAAQ2E,aAAa,GAAGC,IAAK,SAAAC,GAAad,EAAI,WAAAN,OAAYrI,IAAOyJ,IAC7D/E,EAAAC,EAAAC,cAAA,UAAQ1E,MAAM,GAAGwJ,UAAQ,GAvC7C,qBAwCqBf,EAAK3E,MAAMwJ,gBAAgBC,SAAS3N,IAAI,SAAAqB,GAAC,OACtCuD,EAAAC,EAAAC,cAAA,UAAQ1E,MAAOiB,EAAGiI,IAAKjI,GAAIA,WAQnDuD,EAAAC,EAAAC,cAAA,OAAKY,UAAU,eACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,cACXd,EAAAC,EAAAC,cAAA,SACIY,UAAU,QACVvE,KAAK,OACL4H,YAAY,kBACZW,IAAK,SAAAC,GAAad,EAAI,WAAiBc,QAMvD/E,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,SACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,cACVhG,KAAKe,MAAM6M,gBAAkB5N,KAAKwE,MAAM0J,iBAAmBhJ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,2BACvEd,EAAAC,EAAAC,cAAA,UAAQY,UAAU,SAASR,QAASxF,KAAK6N,eACzC3I,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,0BAAqBpF,KAAKwE,MAAM0J,mBAG3ChJ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,eACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,cACXd,EAAAC,EAAAC,cAAC+I,GAAA,OAAD,CAAQ3I,QAASxF,KAAKuN,SAAtB,sBAtEGlI,IAAMQ,WA6FtBsE,mBAdf,SAAyBpJ,GACrB,MAAO,CACHiN,gBAAiBjN,EAAMM,OACvB6M,gBAAiBnN,EAAMqB,QAI/B,SAA4BgI,GACxB,OAAOC,YAAmB,CACtB9H,kBAEA6H,IAGOD,CAA6CmD,ICrGrD,SAASc,GAAOZ,GACnB,uBAAA3E,OAAwB2E,EAAK,GAA7B,KAEG,IAAMa,GAAc,CAAC,WAErB,SAASC,GAAUd,GACtB,sBAAA3E,OAAuB2E,EAAK,GAA5B,KAEG,IAAMe,GAAiB,CAAC,WAExB,SAASC,GAAIhB,GAChB,gBAAA3E,OAAiB2E,EAAK,GAAtB,MAAA3E,OAA6B2E,EAAK,GAAlC,KAEG,IAAMiB,GAAW,CAAC,UAAW,WAE7B,SAASC,GAASlB,GACrB,qBAAA3E,OAAsB2E,EAAK,GAA3B,MAAA3E,OAAkC2E,EAAK,GAAvC,KAEG,IAAMmB,GAAgB,CAAC,UAAW,WAElC,SAASC,GAASpB,GACrB,gBAAA3E,OAAiB2E,EAAK,GAAtB,MAAA3E,OAA6B2E,EAAK,GAAlC,KAEG,IAAMqB,GAAgB,CAAC,UAAW,WAElC,SAASC,GAAItB,GAChB,uBAAA3E,OAAwB2E,EAAK,GAA7B,0BAEG,IAAMuB,GAAW,CAAC,WAElB,SAASC,GAAaxB,GACzB,uBAAA3E,OAAwB2E,EAAK,GAA7B,KAEG,IAAMyB,GAAoB,CAAC,WAE3B,SAASC,GAAG1B,GACf,sBAAA3E,OAAuB2E,EAAK,GAA5B,KAEG,IAAM2B,GAAU,CAAC,WAEjB,SAASC,GAAY5B,GACxB,uBAAA3E,OAAwB2E,EAAK,GAA7B,KAEG,IAAM6B,GAAmB,CAAC,WAE1B,SAASC,GAAU9B,GACtB,8BAAA3E,OAA+B2E,EAAK,GAApC,KAEG,IAAM+B,GAAiB,CAAC,WCyChBC,eAlFb,SAAAA,EAAYhL,GAAO,IAAAnE,EAAA,OAAAP,OAAAC,EAAA,EAAAD,CAAAE,KAAAwP,IACjBnP,EAAAP,OAAA2E,EAAA,EAAA3E,CAAAE,KAAAF,OAAA4E,EAAA,EAAA5E,CAAA0P,GAAA7K,KAAA3E,KAAMwE,KAORiL,UAAY,SAAAC,GACVrP,EAAK2E,SAAS,CAAE2K,cAAeD,EAAUE,UAAW,MATnCvP,EAYnBwP,kBAAoB,SAAAH,GAClBrP,EAAK2E,SAAS,CAAE4K,UAAWF,KAbVrP,EAgBnByP,SAAW,SAAAH,GACT,OAAItP,EAAKU,MAAM4O,gBAAkBA,EACxB,YAEF,IAlBPtP,EAAKyP,SAAWzP,EAAKyP,SAAShL,KAAdhF,OAAAiF,EAAA,EAAAjF,QAAAiF,EAAA,EAAAjF,CAAAO,KAChBA,EAAKoP,UAAYpP,EAAKoP,UAAU3K,KAAfhF,OAAAiF,EAAA,EAAAjF,QAAAiF,EAAA,EAAAjF,CAAAO,KACjBA,EAAKwP,kBAAoBxP,EAAKwP,kBAAkB/K,KAAvBhF,OAAAiF,EAAA,EAAAjF,QAAAiF,EAAA,EAAAjF,CAAAO,KACzBA,EAAKU,MAAQ,CAAE4O,cAAe,aAAcC,UAAW,IALtCvP,wEAuBV,IAAA8I,EAAAnJ,KACP,OACEkF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,QACbd,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIY,UAAWhG,KAAK8P,SAAS,eAC3B5K,EAAAC,EAAAC,cAAA,KAAGI,QAAS,kBAAM2D,EAAKsG,UAAU,gBAAjC,eAEFvK,EAAAC,EAAAC,cAAA,MAAIY,UAAWhG,KAAK8P,SAAS,mBAC3B5K,EAAAC,EAAAC,cAAA,KAAGI,QAAS,kBAAM2D,EAAKsG,UAAU,oBAAjC,mBAEFvK,EAAAC,EAAAC,cAAA,MAAIY,UAAWhG,KAAK8P,SAAS,SAC3B5K,EAAAC,EAAAC,cAAA,KAAGI,QAAS,kBAAM2D,EAAKsG,UAAU,UAAjC,YAIwB,eAA7BzP,KAAKe,MAAM4O,eAAkCzK,EAAAC,EAAAC,cAAA,OAAKY,UAAU,OAC3Dd,EAAAC,EAAAC,cAAC+I,GAAA,SAAD,CAAUzN,MAAOV,KAAKe,MAAM6O,UAAWtG,SAAUtJ,KAAK6P,kBAAmBE,MAAM,QAC7E7K,EAAAC,EAAAC,cAAC+I,GAAA,SAAS6B,KAAV,CAAetP,MAAM,IAArB,mCACAwE,EAAAC,EAAAC,cAAC+I,GAAA,SAAS6B,KAAV,CAAetP,MAAM,UAArB,UACAwE,EAAAC,EAAAC,cAAC+I,GAAA,SAAS6B,KAAV,CAAetP,MAAM,aAArB,aACAwE,EAAAC,EAAAC,cAAC+I,GAAA,SAAS6B,KAAV,CAAetP,MAAM,OAArB,OACAwE,EAAAC,EAAAC,cAAC+I,GAAA,SAAS6B,KAAV,CAAetP,MAAM,YAArB,YACAwE,EAAAC,EAAAC,cAAC+I,GAAA,SAAS6B,KAAV,CAAetP,MAAM,YAArB,YACAwE,EAAAC,EAAAC,cAAC+I,GAAA,SAAS6B,KAAV,CAAetP,MAAM,eAArB,gBAEFwE,EAAAC,EAAAC,cAAA,WAC0B,WAAzBpF,KAAKe,MAAM6O,WAA0B1K,EAAAC,EAAAC,cAAC6K,GAAD,CAAkBxC,aAAc,EAAGC,YAAawC,GAAiBxN,UAAWwN,KACxF,cAAzBlQ,KAAKe,MAAM6O,WAA6B1K,EAAAC,EAAAC,cAAC6K,GAAD,CAAkBxC,aAAc,EAAGC,YAAawC,GAAoBxN,UAAWwN,KAC9F,QAAzBlQ,KAAKe,MAAM6O,WAAuB1K,EAAAC,EAAAC,cAAC6K,GAAD,CAAkBxC,aAAc,EAAGC,YAAawC,GAAcxN,UAAWwN,KAClF,aAAzBlQ,KAAKe,MAAM6O,WAA4B1K,EAAAC,EAAAC,cAAC6K,GAAD,CAAkBxC,aAAc,EAAGC,YAAawC,GAAmBxN,UAAWwN,KAC5F,aAAzBlQ,KAAKe,MAAM6O,WAA4B1K,EAAAC,EAAAC,cAAC6K,GAAD,CAAkBxC,aAAc,EAAGC,YAAawC,GAAmBxN,UAAWwN,KAC5F,gBAAzBlQ,KAAKe,MAAM6O,WAA+B1K,EAAAC,EAAAC,cAAC6K,GAAD,CAAkBxC,aAAc,EAAGC,YAAawC,GAAsBxN,UAAWwN,MAEhG,mBAA7BlQ,KAAKe,MAAM4O,eAAsCzK,EAAAC,EAAAC,cAAA,OAAKY,UAAU,OAC/Dd,EAAAC,EAAAC,cAAC+I,GAAA,SAAD,CAAUzN,MAAOV,KAAKe,MAAM6O,UAAWtG,SAAUtJ,KAAK6P,kBAAmBE,MAAM,QAC7E7K,EAAAC,EAAAC,cAAC+I,GAAA,SAAS6B,KAAV,CAAetP,MAAM,IAArB,4BACAwE,EAAAC,EAAAC,cAAC+I,GAAA,SAAS6B,KAAV,CAAetP,MAAM,OAArB,OACAwE,EAAAC,EAAAC,cAAC+I,GAAA,SAAS6B,KAAV,CAAetP,MAAM,gBAArB,uBACAwE,EAAAC,EAAAC,cAAC+I,GAAA,SAAS6B,KAAV,CAAetP,MAAM,MAArB,OAEFwE,EAAAC,EAAAC,cAAA,WAC0B,QAAzBpF,KAAKe,MAAM6O,WAAuB1K,EAAAC,EAAAC,cAAC6K,GAAD,CAAkBxC,aAAc,EAAGC,YAAawC,GAAcxN,UAAWwN,GAAmBjO,KAAM,CAAE/B,MAAS,CAAC,IAAK,SAAK,QACjI,iBAAzBF,KAAKe,MAAM6O,WAAgC1K,EAAAC,EAAAC,cAAC6K,GAAD,CAAkBxC,aAAc,EAAGC,YAAawC,GAAuBxN,UAAWwN,GAA4BjO,KAAM,CAAE/B,MAAS,CAAC,cAAe,mBACjK,OAAzBF,KAAKe,MAAM6O,WAAsB1K,EAAAC,EAAAC,cAAC6K,GAAD,CAAkBxC,aAAc,EAAGC,YAAawC,GAAaxN,UAAWwN,GAAkBjO,KAAM,CAAE/B,MAAS,CAAC,IAAK,SAEvH,SAA7BF,KAAKe,MAAM4O,eAA4BzK,EAAAC,EAAAC,cAAA,OAAKY,UAAU,OACrDd,EAAAC,EAAAC,cAAC+I,GAAA,SAAD,CAAUzN,MAAOV,KAAKe,MAAM6O,UAAWtG,SAAUtJ,KAAK6P,kBAAmBE,MAAM,QAC7E7K,EAAAC,EAAAC,cAAC+I,GAAA,SAAS6B,KAAV,CAAetP,MAAM,IAArB,wBACAwE,EAAAC,EAAAC,cAAC+I,GAAA,SAAS6B,KAAV,CAAetP,MAAM,aAArB,cAEFwE,EAAAC,EAAAC,cAAA,WAC0B,cAAzBpF,KAAKe,MAAM6O,WAA6B1K,EAAAC,EAAAC,cAAC6K,GAAD,CAAkBxC,aAAc,EAAGC,YAAawC,GAAoBxN,UAAWwN,GAAyBjO,KAAM,CAAE/B,MAAS,CAAC,IAAK,SAAK,iBA5E5J2F,aCeZsK,oLAbX,OACEjL,EAAAC,EAAAC,cAAA,OAAKY,UAAU,aACbd,EAAAC,EAAAC,cAAA,WAASY,UAAU,WACjBd,EAAAC,EAAAC,cAACgL,GAAD,OAEFlL,EAAAC,EAAAC,cAAA,WAASY,UAAU,WACjBd,EAAAC,EAAAC,cAACiL,GAAD,OALJ,YAJkBxK,aCYTyK,oLATX,OACEpL,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAACmL,GAAD,cANU1K,aCaZ2K,GAASC,uBAAa,CAC1BC,iBAAkB,SAAC3P,GAGjB,IAFA,IAAI4P,EAAW,GADYC,EAGb9Q,OAAO6J,KAAK5I,GAA1B8P,EAAA,EAAAA,EAAAD,EAAAxQ,OAAAyQ,IAAkC,CAA7B,IAAIrQ,EAACoQ,EAAAC,GACJC,IAAUC,SAASC,WAAWjQ,EAAMP,IACtCmQ,EAASnQ,GAAKO,EAAMP,GAAGyQ,OAEvBN,EAASnQ,GAAKO,EAAMP,GAIxB,OAAOmQ,KAILO,GAAiBC,cAEjBC,GAAQC,YACZC,EACAC,YAAgBL,GAAgBV,KAGlCU,GAAeM,IAAInO,GAEnBoO,iBACEvM,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CAAUN,MAAOA,IACflM,EAAAC,EAAAC,cAACuM,GAAD,OAEFC,SAASC,eAAe","file":"static/js/main.dbf5af7f.chunk.js","sourcesContent":["/* Contains definitons of actions */\n\nexport const OPERATION_BEGIN = \"OPERATION_BEGIN\"\nexport const OPERATION_SUCCESS = \"OPERATION_SUCCESS\"\nexport const OPERATION_ERROR = \"OPERATION_ERROR\"\n\nexport const UPSERT_MATRIX = \"UPSERT_MATRIX\"\nexport const RENAME_MATRIX = \"RENAME_MATRIX\"\nexport const DELETE_MATRIX = \"DELETE_MATRIX\"\n\nexport const UPSERT_COMPOSITE = \"UPSERT_COMPOSITE\"\nexport const RENAME_COMPOSITE = \"RENAME_COMPOSITE\"\nexport const DELETE_COMPOSITE = \"DELETE_COMPOSITE\"\n\nexport const UPSERT_SCALAR = \"UPSERT_SCALAR\"\nexport const RENAME_SCALAR = \"RENAME_SCALAR\"\nexport const DELETE_SCALAR = \"DELETE_SCALAR\"","export default class Ndarray {\n    constructor(numericValues, shape) {\n        this.numericValues = numericValues;\n        this.shape = shape;\n    }\n\n    rows() {\n        return this.shape[0]\n    }\n\n    cols() {\n        return this.shape[1]\n    }\n\n    serialize() {\n        return { numericValues: this.numericValues, shape: this.shape }\n    }\n}","export default class Tuple {\n    constructor(namev, ndarrayv) {\n        this.namev = namev\n        this.ndarrayv = ndarrayv\n    }\n\n    get size() {\n        return this.namev.length\n    }\n\n    get nameMatrixPairs() {\n        return this.namev.map((e, i) => {\n            return [e, this.ndarrayv[i]];\n        });\n    }\n}","export default class Scalar {\n    constructor(value) {\n        this.value = value\n    }\n\n    serialize() {\n        return this.value\n    }\n}","import { UPSERT_MATRIX, RENAME_MATRIX, DELETE_MATRIX, OPERATION_SUCCESS } from \"../actions/actions\";\nimport { OrderedMap } from \"immutable\"\n\nimport Ndarray from \"util/Ndarray\"\nimport Tuple from \"util/Tuple\"\nimport Scalar from \"util/Scalar\"\n\nconst ndarrayv = [new Ndarray([1, 1, 1, 0], [2, 2]), new Ndarray([1, 1, 1, 4], [2, 2]), new Ndarray([1, 1, 1, 4], [2, 2])]\nconst namev = [\"charmander\", \"bulbasaur\", \"squirtle\"]\n\n// const initialState = new OrderedMap({\n//   exampleScalar: [\"SCALAR\", new Scalar(5)],\n//   exampleNdarray: [\"NDARRAY\", new Ndarray([1, 2, 3, 4], [2, 2])],\n//   exampleTuple: [\"TUPLE\", new Tuple(namev, ndarrayv)]\n// })\n\nconst initialState = new OrderedMap({\n  exampleNdarray: [\"NDARRAY\", new Ndarray([1, 2, 3, 4], [2, 2])],\n})\n\nconst values = (state = initialState, action) => {\n  var dataTypeObjectPair\n  switch (action.type) {\n    case UPSERT_MATRIX:\n      dataTypeObjectPair = [\"NDARRAY\", new Ndarray(action.numericValues, action.shape)]\n      return upsert(state, action.name, dataTypeObjectPair)\n    case RENAME_MATRIX:\n      return state.mapKeys(k => {\n        if (k === action.name) {\n          return action.newName\n        }\n        return k\n      })\n    case DELETE_MATRIX:\n      return state.remove(action.name)\n    case OPERATION_SUCCESS:\n      if (action.result.validOperation) {\n        switch (action.result.dataType) {\n          case \"NDARRAY\": {\n            dataTypeObjectPair = [\"NDARRAY\", new Ndarray(action.result.result.numericValues, action.result.result.shape)]\n            break\n          }\n          case \"TUPLE\": {\n            dataTypeObjectPair = [\"TUPLE\", new Tuple(action.misc.namev, action.result.result.map(entry =>\n              new Ndarray(entry.numericValues, entry.shape)))]\n            break\n          }\n          case \"SCALAR\": {\n            dataTypeObjectPair = [\"SCALAR\", new Scalar(action.result.result)]\n            break\n          }\n          default:\n            break\n        }\n        return upsert(state, action.resultVariable, dataTypeObjectPair)\n      } else {\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nfunction upsert(state, name, dataTypeObjectPair) {\n  if (state.contains(name)) {\n    return state.updateIn([name], () => dataTypeObjectPair)\n  }\n  return state.set(name, dataTypeObjectPair)\n}\n\nexport default values\n","import { OPERATION_BEGIN, OPERATION_SUCCESS } from \"../actions/actions\";\n\nconst initialState = \"\"\n\nconst error = (state = initialState, action) => {\n    switch (action.type) {\n        case OPERATION_BEGIN:\n            return \"\"\n        case OPERATION_SUCCESS:\n            if (!action.result.validOperation) {\n                return action.result.result\n            }\n            return state\n        default:\n            return state\n    }\n}\n\nexport default error","\nimport { combineReducers } from 'redux'\nimport values from './values'\nimport generatedCode from './generatedCode'\nimport error from './error'\n\nexport default combineReducers({\n    values,\n    generatedCode,\n    error\n})\n","import { OPERATION_BEGIN, OPERATION_SUCCESS, OPERATION_ERROR } from \"actions/actions\"\n\nexport function operationBegin(command, dataNames, dataTypes, resultVariable, misc) {\n    return {\n        type: OPERATION_BEGIN,\n        command,\n        dataNames,\n        dataTypes,\n        resultVariable,\n        misc\n    }\n}\n\nexport function operationSuccess(resultVariable, result, misc) {\n    return {\n        type: OPERATION_SUCCESS,\n        resultVariable,\n        result,\n        misc\n    }\n}\n\nexport function operationError(errorMessage) {\n    return {\n        type: OPERATION_ERROR,\n        errorMessage\n    }\n}\n\n\n","import { mergeMap, catchError, map } from 'rxjs/operators';\nimport { ajax } from 'rxjs/ajax'\nimport { of } from 'rxjs';\nimport { ofType } from 'redux-observable'\n\n\nimport { operationError, operationSuccess } from 'actions/operation'\nimport { OPERATION_BEGIN } from 'actions/actions'\n\nexport const operationEpic = (action$, state$) => action$.pipe(\n    ofType(OPERATION_BEGIN),\n    mergeMap(action =>\n        ajax({\n            url: 'https://nzr58np206.execute-api.us-west-2.amazonaws.com/beta-prod/operation',\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: {\n                command: action.command,\n                matrices: createBody(action.dataNames, state$.value.values)\n            }\n        }).pipe(\n            map(response => operationSuccess(action.resultVariable, response.response.body, action.misc)),\n            catchError(error => of(operationError(error)))\n        )\n    )\n)\n\nfunction createBody(dataNames, state) {\n    let dataValues = dataNames.map(name => [state.get(name)[0], state.get(name)[1].serialize()])\n    console.log(Object.assign(...dataNames.map((k, i) => ({ [k]: dataValues[i] }))))\n    return Object.assign(...dataNames.map((k, i) => ({ [k]: dataValues[i] })))\n}\n","import { combineEpics } from 'redux-observable';\nimport { operationEpic } from 'epics/operationEpic'\n\nexport const rootEpic = combineEpics(\n    operationEpic,\n);","import React from 'react';\nimport PropTypes from 'prop-types'\n\nclass ModalWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalState: false\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n  }\n\n  toggleModal() {\n    this.setState((prev, props) => {\n      const newState = !prev.modalState;\n\n      return { modalState: newState };\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          {React.cloneElement(this.props.children[0], { onClick: this.toggleModal })}\n        </div>\n\n        <Modal\n          closeModal={this.toggleModal}\n          modalState={this.state.modalState}\n          title={this.props.children[1]}\n        >\n          {React.cloneElement(this.props.children[2], { toggle: this.toggleModal })}\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst Modal = ({ children, closeModal, modalState, title }) => {\n  if (!modalState) {\n    return null;\n  }\n\n  return (\n    <div className=\"modal is-active\">\n      <div className=\"modal-background\" onClick={closeModal} />\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <p className=\"modal-card-title\">{title}</p>\n          <button className=\"delete\" onClick={closeModal} />\n        </header>\n        <section className=\"modal-card-body\">\n          <div className=\"content\">\n            {children}\n          </div>\n        </section>\n        <footer className=\"modal-card-foot\">\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nModal.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n  modalState: PropTypes.bool.isRequired,\n  title: PropTypes.string\n}\n\nexport default ModalWrapper;","import { UPSERT_MATRIX, RENAME_MATRIX, DELETE_MATRIX } from \"actions/actions\";\n\n\nexport function upsertMatrix(name, shape, numericValues) {\n    return {\n        type: UPSERT_MATRIX,\n        name,\n        shape,\n        numericValues\n    }\n}\n\nexport function renameMatrix(name, newName) {\n    return {\n        type: RENAME_MATRIX,\n        name,\n        newName\n    }\n}\n\nexport function deleteMatrix(name) {\n    return {\n        type: DELETE_MATRIX,\n        name\n    }\n}\n","import React from 'react';\nimport { bindActionCreators } from 'redux'\nimport { connect } from \"react-redux\"\n\nimport { upsertMatrix } from \"actions/matrices\"\nimport { renameMatrix } from \"actions/matrices\"\n\nconst variableNameRe = new RegExp(\"^[a-zA-Z]+[1-9a-zA-Z]*$\")\n\nfunction matchExact(r, str) {\n    var match = str.match(r);\n    return match != null && str == match[0];\n}\n\nclass InputGrid extends React.Component {\n    constructor(props) {\n        super(props)\n        if (props.create) {\n            this.state = {\n                numRows: props.initialRows,\n                numCols: props.initialCols,\n                matrixName: ''\n            }\n            this.finishedPopulating = true\n        }\n\n        else if (props.edit) {\n            console.log(props.ndarray)\n            this.state = {\n                numRows: props.ndarray.rows(),\n                numCols: props.ndarray.cols(),\n                numericValues: props.ndarray.numericValues,\n                matrixName: props.matrixName\n            }\n            this.finishedPopulating = false\n        }\n\n        else if (props.clone) {\n            var today = new Date();\n            var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n            var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n            var timestamp = date + ' ' + time\n            this.state = {\n                numRows: props.ndarray.rows(),\n                numCols: props.ndarray.cols(),\n                numericValues: props.ndarray.numericValues,\n                matrixName: props.matrixName + ' __CLONED_AT__' + timestamp\n            }\n            this.finishedPopulating = false\n        }\n\n        this.addRow = this.addRow.bind(this)\n        this.addCol = this.addCol.bind(this)\n        this.removeRow = this.removeRow.bind(this)\n        this.removeCol = this.removeCol.bind(this)\n        this.submit = this.submit.bind(this)\n        this.updateMatrixName = this.updateMatrixName.bind(this)\n        this.getStartingValue = this.getStartingValue.bind(this)\n        this.setFinishedPopulating = this.setFinishedPopulating.bind(this)\n        this.validMatrixName = this.validMatrixName.bind(this)\n    }\n\n    addRow() {\n        this.setState((prevState) => ({\n            numRows: Math.min(prevState.numRows + 1, 7)\n        }))\n    }\n\n    addCol() {\n        this.setState((prevState) => ({\n            numCols: Math.min(prevState.numCols + 1, 7)\n        }))\n    }\n\n    removeRow() {\n        this.setState((prevState) => ({\n            numRows: Math.max(prevState.numRows - 1, 1)\n        }))\n    }\n\n    removeCol() {\n        this.setState((prevState) => ({\n            numCols: Math.max(prevState.numCols - 1, 1)\n        }))\n    }\n\n    updateMatrixName(newName) {\n        this.setState(\n            { ...this.state, matrixName: newName }\n        )\n    }\n\n    submit() {\n        let numericValues = []\n        for (let r = 0; r < this.state.numRows; r++) {\n            for (let c = 0; c < this.state.numCols; c++) {\n                numericValues.push(this[`textInput${r},${c}`].value)\n            }\n        }\n        if (this.props.edit) {\n            this.props.upsertMatrix(this.props.matrixName, [this.state.numRows, this.state.numCols], numericValues)\n            this.props.renameMatrix(this.props.matrixName, this.state.matrixName)\n        } else {\n            this.props.upsertMatrix(this.state.matrixName, [this.state.numRows, this.state.numCols], numericValues)\n        }\n        this.props.toggle()\n    }\n\n    getStartingValue(i, j) {\n        if (!this.finishedPopulating) {\n            return this.state.numericValues[i * this.state.numCols + j]\n        }\n        return 0\n    }\n\n    setFinishedPopulating(status) {\n        this.finishedPopulating = status\n    }\n\n    validMatrixName() {\n        return matchExact(variableNameRe, this.state.matrixName)\n    }\n\n    render() {\n        let ret = (\n            <div className=\"columns\">\n                <div className=\"column\">\n                    <input\n                        className=\"input\"\n                        type=\"text\"\n                        value={this.state.matrixName}\n                        placeholder=\"Matrix Name\"\n                        onChange={(e) => this.updateMatrixName(e.target.value)} />\n                    {!this.validMatrixName() && <p className=\"help is-danger\">Matrix name must be a valid Python variable name</p>}\n                    <div className=\"columns is-mobile\" style={{ paddingTop: \"25px\" }}>\n                        <div className=\"column is-narrow\">\n                            {[...Array(this.state.numRows).keys()].map(i =>\n                                <div key={i}>\n                                    {[...Array(this.state.numCols).keys()].map(j =>\n                                        <input\n                                            type=\"text\"\n                                            size=\"4\"\n                                            style={{ fontSize: \"20px\" }}\n                                            defaultValue={this.getStartingValue(i, j)}\n                                            key={`${i},${j}`}\n                                            ref={element => { this[`textInput${i},${j}`] = element }} />\n                                    )}\n                                    <br />\n                                </div>)}\n                        </div>\n                        <div className=\"column is-one-fifth has-text-left\">\n                            <button className=\"button is-small\" onClick={this.removeRow}>Remove Row</button>\n                            <br />\n                            <button className=\"button is-small\" onClick={this.addRow}>Add Row</button>\n                        </div>\n                    </div>\n\n                    <div className=\"columns\" >\n                        <div className=\"column is-narrow has-text-left\">\n                            <span className=\"button is-small\" onClick={this.removeCol}>Remove Col</span>\n                            <span className=\"button is-small\" onClick={this.addCol}>Add Col</span>\n                            <div style={{ paddingTop: \"20px\" }}>\n                                <button className=\"button\" disabled={!this.validMatrixName()} onClick={this.submit}>Submit</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n        this.setFinishedPopulating(true)\n        return ret\n    }\n}\n\n\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        upsertMatrix,\n        renameMatrix\n    },\n        dispatch)\n}\n\nexport default connect(null, mapDispatchToProps)(InputGrid);\n\n","import React from 'react';\nimport ModalWrapper from 'components/common/ModalWrapper'\nimport InputGrid from 'components/common/InputGrid'\n\nclass CreateMatrix extends React.Component {\n  render() {\n    return (\n      <ModalWrapper>\n        <button className=\"button is-primary\">\n          Create New Matrix\n        </button>\n        Create New Matrix\n        <InputGrid initialRows={2} initialCols={2} create />\n        <button className=\"button is-primary\">\n          Submit\n        </button>\n      </ModalWrapper>\n    )\n  }\n}\n\nexport default CreateMatrix;","import React, { Component } from 'react';\n\nclass BankWrapper extends Component {\n\n    render() {\n        return (\n            <div>\n                <nav className=\"level\">\n                    <div className=\"level-left\">\n                        <div className=\"level-item\">\n                            <h2 className=\"subtitle is-3\">{this.props.title} </h2>\n                        </div>\n                        <div className=\"level-item\">\n                            {this.props.createNew}\n                        </div>\n                    </div>\n                </nav>\n                <div className=\"box\">\n                    <div className=\"columns is-multiline\">\n                        {this.props.children}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default BankWrapper\n","import React from 'react';\n\nclass ResponsiveIcon extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            hover: false\n        }\n        this.hoverOn = this.hoverOn.bind(this)\n        this.hoverOff = this.hoverOff.bind(this)\n    }\n\n    hoverOn() {\n        this.setState({ hover: true });\n    }\n\n    hoverOff() {\n        this.setState({ hover: false });\n    }\n\n    render() {\n        return (\n            <i className={this.state.hover ? \"fas \" + this.props.icon : \"far \" + this.props.icon}\n                style={{ cursor: \"pointer\" }}\n                onMouseEnter={this.hoverOn}\n                onMouseLeave={this.hoverOff}\n                onClick={this.props.onClick}\n                title={this.props.title}\n            ></i>\n        )\n    }\n}\n\nexport default ResponsiveIcon;\n\n","import React from 'react';\nimport { List } from 'immutable';\nimport katex from 'katex';\nimport Parser from 'html-react-parser';\n\nconst START = \"\\\\begin{pmatrix}\"\nconst END = \"\\\\end{pmatrix}\"\n\nclass Matrix extends React.Component {\n    convertStateToLatex(props) {\n        let fragments = new List()\n        var numericValues = props.numerics.numericValues.map(float => Math.round(float * Math.pow(10, 4)) / Math.pow(10, 4))\n        var rows, cols\n        [rows, cols] = props.numerics.shape\n        var count\n        for (count = 0; count < rows; count++) {\n            fragments = fragments\n                .push(numericValues\n                    .slice(count * cols, (count + 1) * cols)\n                    .join(' & '))\n        }\n        return START + fragments.join(' \\\\\\\\ ') + END\n    }\n\n    render() {\n        let math = katex.renderToString(this.convertStateToLatex(this.props));\n        return (\n            <div>{Parser(math)}</div>\n        )\n    }\n}\n\nexport default Matrix;","import React from 'react';\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from 'redux'\nimport { deleteMatrix } from \"actions/matrices\"\n\nimport ModalWrapper from \"components/common/ModalWrapper\"\nimport InputGrid from \"components/common/InputGrid\"\nimport ResponsiveIcon from \"components/common/ResponsiveIcon\"\nimport Matrix from \"components/common/Matrix\"\n\nclass RichMatrix extends React.Component {\n    render() {\n        return (\n            <div className=\"box has-text-centered\">\n                <Matrix numerics={this.props.numerics} />\n                {this.props.name}\n                <br />\n                {this.props.edit && <span className=\"icon has-text-info\" >\n                    <ModalWrapper>\n                        <ResponsiveIcon icon=\"fa-edit\" title=\"Edit the matrix in place\" />\n                        {`edit ${this.props.name}`}\n                        <InputGrid ndarray={this.props.numerics} matrixName={this.props.name} edit />\n                    </ModalWrapper>\n                </span>}\n                {this.props.clone && <span className=\"icon has-text-info\" >\n                    <ModalWrapper>\n                        <ResponsiveIcon icon=\"fa-clone\" title=\"Create a duplicate of this matrix\" />\n                        {`clone ${this.props.matrixName}`}\n                        <InputGrid ndarray={this.props.numerics} matrixName={this.props.name} clone />\n                    </ModalWrapper>\n                </span>}\n                {this.props.delete && <span className=\"icon has-text-info\" >\n                    <ResponsiveIcon icon=\"fa-trash-alt\" onClick={() => this.props.deleteMatrix(this.props.name)} title=\"Delete this matrix\" />\n                </span>}\n            </div>\n        )\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        deleteMatrix\n    },\n        dispatch)\n}\n\nexport default connect(null, mapDispatchToProps)(RichMatrix);\n","import React from 'react';\nimport RichMatrix from \"components/bank/RichMatrix\"\n\nclass Tuple extends React.Component {\n    render() {\n        return (\n            <div className=\"box has-text-centered\">\n                <div className=\"columns is-multiline\">\n                    {this.props.numerics.nameMatrixPairs.map(([name, ndarray]) =>\n                        <div className=\"column\" key={name}>\n                            <RichMatrix numerics={ndarray} name={name} clone delete />\n                        </div>\n                    )}\n                </div>\n                <p>{this.props.name}</p>\n            </div>\n        )\n    }\n}\n\nexport default Tuple\n","import React from 'react';\n\nclass Scalar extends React.Component {\n    render() {\n        return (\n            <div>\n                <b>{Math.round(this.props.numerics.value * Math.pow(10, 4)) / Math.pow(10, 4)}</b>\n            </div>\n        )\n    }\n}\n\nexport default Scalar\n\n","import React from 'react';\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from 'redux'\nimport { deleteMatrix } from \"actions/matrices\"\n\nimport ModalWrapper from \"components/common/ModalWrapper\"\nimport InputGrid from \"components/common/InputGrid\"\nimport ResponsiveIcon from \"components/common/ResponsiveIcon\"\nimport Scalar from \"components/common/Scalar\"\n\nclass RichScalar extends React.Component {\n    render() {\n        return (\n            <div className=\"box has-text-centered\">\n                <Scalar numerics={this.props.numerics} />\n                {this.props.name}\n            </div>\n        )\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        deleteMatrix\n    },\n        dispatch)\n}\n\nexport default connect(null, mapDispatchToProps)(RichScalar);\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\"\n\nimport CreateMatrix from \"components/createMatrix/CreateMatrix\"\nimport BankWrapper from \"components/bank/BankWrapper\"\n\nimport RichMatrix from \"components/bank/RichMatrix\"\nimport Tuple from \"components/bank/Tuple\"\nimport RichScalar from \"components/bank/RichScalar\"\n\n\nclass MatrixBank extends Component {\n  render() {\n    return (\n      <BankWrapper title=\"Workspace\" createNew={<CreateMatrix />}>\n        {this.props.matrixMap.entrySeq().map(([k, v]) =>\n          <div className=\"column is-narrow is-mobile\" key={k}>\n            {renderHelper(k, ...v)}\n          </div>\n        )}\n      </BankWrapper>\n    );\n  }\n}\n\nconst renderHelper = (name, type, numerics) => {\n  switch (type) {\n    case \"SCALAR\":\n      return (<RichScalar name={name} numerics={numerics} />)\n    case \"NDARRAY\":\n      return (<RichMatrix name={name} numerics={numerics} edit clone delete />)\n    case \"TUPLE\":\n      return (<Tuple name={name} numerics={numerics} />)\n    default:\n      return null\n  }\n}\n\nfunction mapMatricesToProps(state) {\n  return {\n    matrixMap: state.values\n  }\n}\n\nexport default connect(mapMatricesToProps)(MatrixBank);\n","import React from 'react';\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from 'redux'\n\nimport { operationBegin } from \"actions/operation\"\nimport { Button } from \"react-bulma-components/full\"\n\nconst placeholder = \"--Select Matrix--\"\nclass GenericOperation extends React.Component {\n    constructor(props) {\n        super(props)\n        this.operate = this.operate.bind(this)\n        this.showWarning = this.showWarning.bind(this)\n        this.closeWarning = this.closeWarning.bind(this)\n        this.state = { matrix_1: \"\", matrix_2: \"\", resultVariable: \"\", displayWarning: false }\n    }\n    operate = () => {\n        console.log(this.props)\n        let argv = [...Array(this.props.numDropdowns).keys()].map(i => this[`dropdown${i}`].value)\n        this.props.operationBegin(\n            this.props.codeCreator(argv),\n            argv,\n            this.props.dataTypes,\n            this[\"resultName\"].value,\n            this.props.misc\n        )\n        this.showWarning()\n    }\n\n    showWarning = () => {\n        this.setState({ displayWarning: true })\n    }\n\n    closeWarning = () => {\n        this.setState({ displayWarning: false })\n    }\n\n    render() {\n        return (\n            <div className=\"box\">\n                <div className=\"level\">\n                    <div className=\"level-left\">\n                        {[...Array(this.props.numDropdowns).keys()].map(i =>\n                            <div className=\"level-item\" key={i}>\n                                <div className=\"select\">\n                                    <select defaultValue=\"\" ref={element => { this[`dropdown${i}`] = element }}>\n                                        <option value=\"\" disabled>{placeholder}</option>\n                                        {this.props.workspaceValues.keySeq().map(k =>\n                                            <option value={k} key={k}>{k}</option>\n                                        )}\n                                    </select>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n\n                    <div className=\"level-right\">\n                        <div className=\"level-item\">\n                            <input\n                                className=\"input\"\n                                type=\"text\"\n                                placeholder=\"Store Result As\"\n                                ref={element => { this[\"resultName\"] = element }}\n                            />\n                        </div>\n                    </div>\n\n                </div>\n                <br />\n                <div className=\"level\">\n                    <div className=\"level-left\">\n                        {this.state.displayWarning && this.props.mostRecentError && <div className=\"notification is-warning\">\n                            <button className=\"delete\" onClick={this.closeWarning}></button>\n                            <p><b>Numpy Error: </b>{this.props.mostRecentError}</p>\n                        </div>}\n                    </div>\n                    <div className=\"level-right\">\n                        <div className=\"level-item\">\n                            <Button onClick={this.operate}>Operate</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        workspaceValues: state.values,\n        mostRecentError: state.error\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        operationBegin\n    },\n        dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GenericOperation);","export function invert(argv) {\n    return `np.linalg.inv(${argv[0]})`\n}\nexport const invertTypes = [\"NDARRAY\"]\n\nexport function transpose(argv) {\n    return `np.transpose(${argv[0]})`\n}\nexport const transposeTypes = [\"NDARRAY\"]\n\nexport function add(argv) {\n    return `np.add(${argv[0]}, ${argv[1]})`\n}\nexport const addTypes = [\"NDARRAY\", \"NDARRAY\"]\n\nexport function subtract(argv) {\n    return `np.subtract(${argv[0]}, ${argv[1]})`\n}\nexport const subtractTypes = [\"NDARRAY\", \"NDARRAY\"]\n\nexport function multiply(argv) {\n    return `np.dot(${argv[0]}, ${argv[1]})`\n}\nexport const multiplyTypes = [\"NDARRAY\", \"NDARRAY\"]\n\nexport function svd(argv) {\n    return `np.linalg.svd(${argv[0]}, full_matrices=False)`\n}\nexport const svdTypes = [\"NDARRAY\"]\n\nexport function eigenvectors(argv) {\n    return `np.linalg.eig(${argv[0]})`\n}\nexport const eigenvectorsTypes = [\"NDARRAY\"]\n\nexport function qr(argv) {\n    return `np.linalg.qr(${argv[0]})`\n}\nexport const qrTypes = [\"NDARRAY\"]\n\nexport function determinant(argv) {\n    return `np.linalg.det(${argv[0]})`\n}\nexport const determinantTypes = [\"NDARRAY\"]\n\nexport function nullspace(argv) {\n    return `sp.linalg.null_space(${argv[0]})`\n}\nexport const nullspaceTypes = [\"NDARRAY\"]\n","import React, { Component } from 'react';\n\nimport { Dropdown } from \"react-bulma-components/full\"\nimport GenericOperation from \"components/controlPanel/operations/GenericOperation\"\nimport * as Creators from \"components/controlPanel/CodeCreators\"\n\nclass ControlPanel extends Component {\n  constructor(props) {\n    super(props)\n    this.isActive = this.isActive.bind(this)\n    this.selectTab = this.selectTab.bind(this)\n    this.operationSelected = this.operationSelected.bind(this)\n    this.state = { operationType: \"Arithmetic\", operation: \"\" }\n  }\n\n  selectTab = selected => {\n    this.setState({ operationType: selected, operation: \"\" });\n  };\n\n  operationSelected = selected => {\n    this.setState({ operation: selected })\n  }\n\n  isActive = operationType => {\n    if (this.state.operationType === operationType) {\n      return \"is-active\"\n    }\n    return \"\"\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"tabs\">\n          <ul>\n            <li className={this.isActive(\"Arithmetic\")}>\n              <a onClick={() => this.selectTab(\"Arithmetic\")}>Arithmetic</a>\n            </li>\n            <li className={this.isActive(\"Decompositions\")}>\n              <a onClick={() => this.selectTab(\"Decompositions\")}>Decompositions</a>\n            </li>\n            <li className={this.isActive(\"Misc\")}>\n              <a onClick={() => this.selectTab(\"Misc\")}>Misc.</a>\n            </li>\n          </ul>\n        </div>\n        {this.state.operationType === \"Arithmetic\" && <div className=\"box\">\n          <Dropdown value={this.state.operation} onChange={this.operationSelected} color=\"info\">\n            <Dropdown.Item value=\"\">--Select Arithmetic Operation--</Dropdown.Item>\n            <Dropdown.Item value=\"invert\">Invert</Dropdown.Item>\n            <Dropdown.Item value=\"transpose\">Transpose</Dropdown.Item>\n            <Dropdown.Item value=\"add\">Add</Dropdown.Item>\n            <Dropdown.Item value=\"subtract\">Subtract</Dropdown.Item>\n            <Dropdown.Item value=\"multiply\">Multiply</Dropdown.Item>\n            <Dropdown.Item value=\"determinant\">Determinant</Dropdown.Item>\n          </Dropdown>\n          <hr />\n          {this.state.operation === \"invert\" && <GenericOperation numDropdowns={1} codeCreator={Creators.invert} dataTypes={Creators.invertTypes} />}\n          {this.state.operation === \"transpose\" && <GenericOperation numDropdowns={1} codeCreator={Creators.transpose} dataTypes={Creators.transposeTypes} />}\n          {this.state.operation === \"add\" && <GenericOperation numDropdowns={2} codeCreator={Creators.add} dataTypes={Creators.addTypes} />}\n          {this.state.operation === \"subtract\" && <GenericOperation numDropdowns={2} codeCreator={Creators.subtract} dataTypes={Creators.subtractTypes} />}\n          {this.state.operation === \"multiply\" && <GenericOperation numDropdowns={2} codeCreator={Creators.multiply} dataTypes={Creators.multiplyTypes} />}\n          {this.state.operation === \"determinant\" && <GenericOperation numDropdowns={1} codeCreator={Creators.determinant} dataTypes={Creators.determinantTypes} />}\n        </div>}\n        {this.state.operationType === \"Decompositions\" && <div className=\"box\">\n          <Dropdown value={this.state.operation} onChange={this.operationSelected} color=\"info\">\n            <Dropdown.Item value=\"\">--Select Decomposition--</Dropdown.Item>\n            <Dropdown.Item value=\"svd\">SVD</Dropdown.Item>\n            <Dropdown.Item value=\"eigenvectors\">Eigenvectors/values</Dropdown.Item>\n            <Dropdown.Item value=\"qr\">QR</Dropdown.Item>\n          </Dropdown>\n          <hr />\n          {this.state.operation === \"svd\" && <GenericOperation numDropdowns={1} codeCreator={Creators.svd} dataTypes={Creators.svdTypes} misc={{ \"namev\": [\"U\", \"Σ\", \"V\"] }} />}\n          {this.state.operation === \"eigenvectors\" && <GenericOperation numDropdowns={1} codeCreator={Creators.eigenvectors} dataTypes={Creators.eigenvectorsTypes} misc={{ \"namev\": [\"eigenvalues\", \"eigenvectors\"] }} />}\n          {this.state.operation === \"qr\" && <GenericOperation numDropdowns={1} codeCreator={Creators.qr} dataTypes={Creators.qrTypes} misc={{ \"namev\": [\"Q\", \"R\"] }} />}\n        </div>}\n        {this.state.operationType === \"Misc\" && <div className=\"box\">\n          <Dropdown value={this.state.operation} onChange={this.operationSelected} color=\"info\">\n            <Dropdown.Item value=\"\">--Select Operation--</Dropdown.Item>\n            <Dropdown.Item value=\"nullspace\">NullSpace</Dropdown.Item>\n          </Dropdown>\n          <hr />\n          {this.state.operation === \"nullspace\" && <GenericOperation numDropdowns={1} codeCreator={Creators.nullspace} dataTypes={Creators.nullspaceTypes} misc={{ \"namev\": [\"U\", \"Σ\", \"V\"] }} />}\n        </div>}\n      </div>\n    );\n  }\n}\n\nexport default ControlPanel","import React, { Component } from 'react';\n\nimport ValueBank from \"components/bank/ValueBank\"\nimport ControlPanel from \"components/controlPanel/ControlPanel\"\n\nclass MatrixGUI extends Component {\n\n  render() {\n    return (\n      <div className=\"container\">\n        <section className=\"section\">\n          <ControlPanel />\n        </section>\n        <section className=\"section\">\n          <ValueBank />\n        </section>,\n      </div>\n    );\n  }\n}\n\nexport default MatrixGUI;\n","import React, { Component } from 'react';\n\nimport MatrixGUI from \"components/MatrixGUI\"\n// import Navbar from \"components/navbar/Navbar\"\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div>\n        {/* <Navbar /> */}\n        <MatrixGUI />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import 'bulma/css/bulma.css'\n\nimport React from 'react';\nimport { render } from 'react-dom'\n\nimport { applyMiddleware, createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from 'reducers'\n\nimport { createEpicMiddleware } from 'redux-observable';\nimport { rootEpic } from 'epics'\n\nimport { createLogger } from 'redux-logger'\nimport Immutable from 'immutable'\nimport 'rxjs';\n\nimport App from 'App';\n\nconst logger = createLogger({\n  stateTransformer: (state) => {\n    let newState = {};\n\n    for (var i of Object.keys(state)) {\n      if (Immutable.Iterable.isIterable(state[i])) {\n        newState[i] = state[i].toJS();\n      } else {\n        newState[i] = state[i];\n      }\n    };\n\n    return newState;\n  }\n});\n\nconst epicMiddleware = createEpicMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(epicMiddleware, logger)\n)\n\nepicMiddleware.run(rootEpic);\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}