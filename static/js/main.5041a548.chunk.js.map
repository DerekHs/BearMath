{"version":3,"sources":["actions/actions.js","util/Ndarray.js","reducers/matrices.js","util/Composite.js","reducers/composites.js","reducers/index.js","actions/operation.js","epics/operationEpic.js","epics/index.js","components/common/ModalWrapper.js","actions/matrices.js","components/common/InputGrid.js","components/createMatrix/CreateMatrix.js","components/common/Matrix.js","components/common/ResponsiveIcon.js","components/banks/matricesBank/RichMatrix.js","components/banks/BankWrapper.js","components/banks/matricesBank/MatricesBank.js","components/banks/compositeBank/CompositeMatrix.js","components/banks/compositeBank/CompositeBank.js","components/controlPanel/operations/GenericOperation.js","components/controlPanel/CodeCreators.js","components/controlPanel/ControlPanel.js","components/MatrixGUI.js","App.js","index.js"],"names":["OPERATION_BEGIN","OPERATION_SUCCESS","OPERATION_ERROR","UPSERT_MATRIX","RENAME_MATRIX","DELETE_MATRIX","Ndarray","numericValues","shape","Object","classCallCheck","this","initialState","matrixMap","OrderedMap","foo","fos","mostRecentError","matrices","state","arguments","length","undefined","action","type","objectSpread","contains","name","updateIn","set","mapKeys","k","newName","remove","result","validOperation","ndarray","resultVariable","Composite","compositeName","namev","ndarrayv","_this","map","e","i","ninjas","samurai","combineReducers","generatedCode","composites","operationBegin","command","matrixNames","createBody","matrixValues","get","toMap","assign","apply","toConsumableArray","defineProperty","rootEpic","combineEpics","action$","state$","pipe","ofType","mergeMap","ajax","url","method","headers","Content-Type","body","value","response","catchError","error","of","errorMessage","ModalWrapper","props","possibleConstructorReturn","getPrototypeOf","call","modalState","toggleModal","bind","assertThisInitialized","setState","prev","react_default","a","createElement","React","cloneElement","children","onClick","ModalWrapper_Modal","closeModal","title","toggle","Component","Modal","_ref","className","upsertMatrix","renameMatrix","deleteMatrix","InputGrid","create","numRows","initialRows","numCols","initialCols","matrixName","finishedPopulating","edit","console","log","rows","cols","clone","today","Date","timestamp","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","addRow","addCol","removeRow","removeCol","submit","updateMatrixName","getStartingValue","setFinishedPopulating","prevState","Math","min","max","r","c","push","concat","j","status","_this2","ret","placeholder","onChange","target","style","paddingTop","Array","keys","key","size","fontSize","defaultValue","ref","element","connect","dispatch","bindActionCreators","CreateMatrix","common_ModalWrapper","common_InputGrid","Matrix","count","fragments","List","_props$ndarray$shape","slicedToArray","slice","join","math","katex","renderToString","convertStateToLatex","Parser","ResponsiveIcon","hover","hoverOn","hoverOff","icon","cursor","onMouseEnter","onMouseLeave","RichMatrix","common_Matrix","common_ResponsiveIcon","BankWrapper","createNew","MatricesBank","banks_BankWrapper","createMatrix_CreateMatrix","entrySeq","_ref2","v","matricesBank_RichMatrix","CompositeMatrix","composite","nameMatrixPairs","CompositeBank","compositeMap","compositeBank_CompositeMatrix","GenericOperation","operate","argv","numDropdowns","codeCreator","showWarning","displayWarning","closeWarning","matrix_1","matrix_2","disabled","keySeq","full","invert","transpose","add","subtract","multiply","ControlPanel","selected","color","Item","Divider","operations_GenericOperation","Creators","MatrixGUI","matricesBank_MatricesBank","compositeBank_CompositeBank","controlPanel_ControlPanel","App","components_MatrixGUI","logger","createLogger","stateTransformer","newState","_arr","_i","Immutable","Iterable","isIterable","toJS","epicMiddleware","createEpicMiddleware","store","createStore","rootReducer","applyMiddleware","run","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5041a548.chunk.js","sourcesContent":["/* Contains definitons of actions */\n\nexport const OPERATION_BEGIN = \"OPERATION_BEGIN\"\nexport const OPERATION_SUCCESS = \"OPERATION_SUCCESS\"\nexport const OPERATION_ERROR = \"OPERATION_ERROR\"\n\nexport const UPSERT_MATRIX = \"UPSERT_MATRIX\"\nexport const RENAME_MATRIX = \"RENAME_MATRIX\"\nexport const DELETE_MATRIX = \"DELETE_MATRIX\"\n\nexport const UPSERT_COMPOSITE = \"UPSERT_COMPOSITE\"\nexport const RENAME_COMPOSITE = \"RENAME_COMPOSITE\"\nexport const DELETE_COMPOSITE = \"DELETE_COMPOSITE\"\n","export default class Ndarray {\n    constructor(numericValues, shape) {\n        this.numericValues = numericValues;\n        this.shape = shape;\n    }\n\n    rows() {\n        return this.shape[0]\n    }\n\n    cols() {\n        return this.shape[1]\n    }\n\n    toMap() {\n        return {\n            numericValues: this.numericValues,\n            shape: this.shape\n        }\n    }\n}","import { UPSERT_MATRIX, RENAME_MATRIX, DELETE_MATRIX, OPERATION_BEGIN, OPERATION_SUCCESS } from \"../actions/actions\";\nimport { OrderedMap } from \"immutable\"\n\nimport Ndarray from \"util/Ndarray\"\n\nconst initialState = {\n  \"matrixMap\": new OrderedMap({\n    foo: new Ndarray([1, 1, 1, 0], [2, 2]),\n    fos: new Ndarray([1, 1], [1, 2])\n  }),\n  \"mostRecentError\": \"\"\n}\n\nconst matrices = (state = initialState, action) => {\n  switch (action.type) {\n    case OPERATION_BEGIN:\n      return { ...state, mostRecentError: \"\" }\n    case UPSERT_MATRIX:\n      if (state.matrixMap.contains(action.name)) {\n        return {\n          ...state,\n          matrixMap: state.matrixMap.updateIn([action.name], () => new Ndarray(action.numericValues, action.shape))\n        }\n      }\n      return {\n        ...state,\n        matrixMap: state.matrixMap.set(action.name, new Ndarray(action.numericValues, action.shape))\n      }\n    case RENAME_MATRIX:\n      return {\n        ...state,\n        matrixMap: state.matrixMap.mapKeys(k => {\n          if (k === action.name) {\n            return action.newName\n          }\n          return k\n        })\n      }\n    case DELETE_MATRIX:\n      return {\n        ...state,\n        matrixMap: state.matrixMap.remove(action.name)\n      }\n    case OPERATION_SUCCESS:\n      if (action.result.validOperation) {\n        let ndarray = action.result.result\n        if (state.matrixMap.contains(action.result.resultVariable)) {\n          return {\n            ...state,\n            matrixMap: state.matrixMap.updateIn([action.resultVariable], () => new Ndarray(ndarray.numericValues, ndarray.shape))\n          }\n        }\n        return {\n          ...state,\n          matrixMap: state.matrixMap.set(action.resultVariable, new Ndarray(ndarray.numericValues, ndarray.shape))\n        }\n      } else {\n        return { ...state, mostRecentError: action.result.result }\n      }\n    default:\n      return state\n  }\n}\n\nexport default matrices\n","export default class Composite {\n    constructor(compositeName, namev, ndarrayv) {\n        this.compositeName = compositeName\n        this.namev = namev\n        this.ndarrayv = ndarrayv\n    }\n\n    get size() {\n        return this.namev.length\n    }\n\n    get nameMatrixPairs() {\n        return this.namev.map((e, i) => {\n            return [e, this.ndarrayv[i]];\n        });\n    }\n}","import { OrderedMap } from \"immutable\"\n\nimport Ndarray from \"util/Ndarray\"\nimport Composite from \"util/Composite\"\n\nconst ndarrayv = [new Ndarray([1, 1, 1, 0], [2, 2]), new Ndarray([1, 1, 1, 4], [2, 2]), new Ndarray([1, 1, 1, 4], [2, 2])]\nconst namev = [\"sasuke\", \"sakura\", \"naruto\"]\n\nconst initialState = new OrderedMap({\n    ninjas: new Composite(\"naruto\", namev, ndarrayv),\n    samurai: new Composite(\"naruto\", namev, ndarrayv)\n})\n\nconst matrices = (state = initialState, action) => {\n    switch (action.type) {\n        default:\n            return state\n    }\n}\n\nexport default matrices\n","\nimport { combineReducers } from 'redux'\nimport matrices from './matrices'\nimport generatedCode from './generatedCode'\nimport composites from './composites'\n\nexport default combineReducers({\n    matrices,\n    generatedCode,\n    composites\n})\n","import { OPERATION_BEGIN, OPERATION_SUCCESS, OPERATION_ERROR } from \"actions/actions\"\n\nexport function operationBegin(command, matrixNames, resultVariable) {\n    return {\n        type: OPERATION_BEGIN,\n        command,\n        matrixNames,\n        resultVariable\n    }\n}\n\nexport function operationSuccess(resultVariable, result) {\n    return {\n        type: OPERATION_SUCCESS,\n        resultVariable,\n        result\n    }\n}\n\nexport function operationError(errorMessage) {\n    return {\n        type: OPERATION_ERROR,\n        errorMessage\n    }\n}\n\n\n","import { mergeMap, catchError, map } from 'rxjs/operators';\nimport { ajax } from 'rxjs/ajax'\nimport { of } from 'rxjs';\nimport { ofType } from 'redux-observable'\n\n\nimport { operationError, operationSuccess } from 'actions/operation'\nimport { OPERATION_BEGIN } from 'actions/actions'\n\nexport const operationEpic = (action$, state$) => action$.pipe(\n    ofType(OPERATION_BEGIN),\n    mergeMap(action =>\n        ajax({\n            url: 'https://nzr58np206.execute-api.us-west-2.amazonaws.com/beta-prod/operation',\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: {\n                command: action.command,\n                matrices: createBody(action.matrixNames, state$.value.matrices.matrixMap)\n            }\n        }).pipe(\n            map(response => operationSuccess(action.resultVariable, response.response.body)),\n            catchError(error => of(operationError(error)))\n        )\n    )\n)\n\nfunction createBody(matrixNames, matrices) {\n    let matrixValues = matrixNames.map(name => [\"NDARRAY\", matrices.get(name).toMap()])\n    return Object.assign(...matrixNames.map((k, i) => ({ [k]: matrixValues[i] })))\n}\n","import { combineEpics } from 'redux-observable';\nimport { operationEpic } from 'epics/operationEpic'\n\nexport const rootEpic = combineEpics(\n    operationEpic,\n);","import React from 'react';\nimport PropTypes from 'prop-types'\n\nclass ModalWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalState: false\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n  }\n\n  toggleModal() {\n    this.setState((prev, props) => {\n      const newState = !prev.modalState;\n\n      return { modalState: newState };\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          {React.cloneElement(this.props.children[0], { onClick: this.toggleModal })}\n        </div>\n\n        <Modal\n          closeModal={this.toggleModal}\n          modalState={this.state.modalState}\n          title={this.props.children[1]}\n        >\n          {React.cloneElement(this.props.children[2], { toggle: this.toggleModal })}\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst Modal = ({ children, closeModal, modalState, title }) => {\n  if (!modalState) {\n    return null;\n  }\n\n  return (\n    <div className=\"modal is-active\">\n      <div className=\"modal-background\" onClick={closeModal} />\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <p className=\"modal-card-title\">{title}</p>\n          <button className=\"delete\" onClick={closeModal} />\n        </header>\n        <section className=\"modal-card-body\">\n          <div className=\"content\">\n            {children}\n          </div>\n        </section>\n        <footer className=\"modal-card-foot\">\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nModal.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n  modalState: PropTypes.bool.isRequired,\n  title: PropTypes.string\n}\n\nexport default ModalWrapper;","import { UPSERT_MATRIX, RENAME_MATRIX, DELETE_MATRIX } from \"actions/actions\";\n\n\nexport function upsertMatrix(name, shape, numericValues) {\n    return {\n        type: UPSERT_MATRIX,\n        name,\n        shape,\n        numericValues\n    }\n}\n\nexport function renameMatrix(name, newName) {\n    return {\n        type: RENAME_MATRIX,\n        name,\n        newName\n    }\n}\n\nexport function deleteMatrix(name) {\n    return {\n        type: DELETE_MATRIX,\n        name\n    }\n}\n","import React from 'react';\nimport { bindActionCreators } from 'redux'\nimport { connect } from \"react-redux\"\n\nimport { upsertMatrix } from \"actions/matrices\"\nimport { renameMatrix } from \"actions/matrices\"\n\nclass InputGrid extends React.Component {\n    constructor(props) {\n        super(props)\n        if (props.create) {\n            this.state = {\n                numRows: props.initialRows,\n                numCols: props.initialCols,\n                matrixName: ''\n            }\n            this.finishedPopulating = true\n        }\n\n        else if (props.edit) {\n            console.log(props.ndarray)\n            this.state = {\n                numRows: props.ndarray.rows(),\n                numCols: props.ndarray.cols(),\n                numericValues: props.ndarray.numericValues,\n                matrixName: props.matrixName\n            }\n            this.finishedPopulating = false\n        }\n\n        else if (props.clone) {\n            var today = new Date();\n            var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n            var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n            var timestamp = date + ' ' + time\n            this.state = {\n                numRows: props.ndarray.rows(),\n                numCols: props.ndarray.cols(),\n                numericValues: props.ndarray.numericValues,\n                matrixName: props.matrixName + ' __CLONED_AT__' + timestamp\n            }\n            this.finishedPopulating = false\n        }\n\n        this.addRow = this.addRow.bind(this)\n        this.addCol = this.addCol.bind(this)\n        this.removeRow = this.removeRow.bind(this)\n        this.removeCol = this.removeCol.bind(this)\n        this.submit = this.submit.bind(this)\n        this.updateMatrixName = this.updateMatrixName.bind(this)\n        this.getStartingValue = this.getStartingValue.bind(this)\n        this.setFinishedPopulating = this.setFinishedPopulating.bind(this)\n    }\n\n    addRow() {\n        this.setState((prevState) => ({\n            numRows: Math.min(prevState.numRows + 1, 7)\n        }))\n    }\n\n    addCol() {\n        this.setState((prevState) => ({\n            numCols: Math.min(prevState.numCols + 1, 7)\n        }))\n    }\n\n    removeRow() {\n        this.setState((prevState) => ({\n            numRows: Math.max(prevState.numRows - 1, 1)\n        }))\n    }\n\n    removeCol() {\n        this.setState((prevState) => ({\n            numCols: Math.max(prevState.numCols - 1, 1)\n        }))\n    }\n\n    updateMatrixName(newName) {\n        this.setState(\n            { ...this.state, matrixName: newName }\n        )\n    }\n\n    submit() {\n        let numericValues = []\n        for (let r = 0; r < this.state.numRows; r++) {\n            for (let c = 0; c < this.state.numCols; c++) {\n                numericValues.push(this[`textInput${r},${c}`].value)\n            }\n        }\n        if (this.props.edit) {\n            this.props.upsertMatrix(this.props.matrixName, [this.state.numRows, this.state.numCols], numericValues)\n            this.props.renameMatrix(this.props.matrixName, this.state.matrixName)\n        } else {\n            this.props.upsertMatrix(this.state.matrixName, [this.state.numRows, this.state.numCols], numericValues)\n        }\n        this.props.toggle()\n    }\n\n    getStartingValue(i, j) {\n        if (!this.finishedPopulating) {\n            return this.state.numericValues[i * this.state.numCols + j]\n        }\n        return 0\n    }\n\n    setFinishedPopulating(status) {\n        this.finishedPopulating = status\n    }\n\n    render() {\n        let ret = (\n            <div className=\"columns\">\n                <div className=\"column\">\n                    <input\n                        className=\"input\"\n                        type=\"text\"\n                        value={this.state.matrixName}\n                        placeholder=\"Matrix Name\"\n                        onChange={(e) => this.updateMatrixName(e.target.value)} />\n                    <div className=\"columns is-mobile\" style={{ paddingTop: \"25px\" }}>\n                        <div className=\"column is-narrow\">\n                            {[...Array(this.state.numRows).keys()].map(i =>\n                                <div key={i}>\n                                    {[...Array(this.state.numCols).keys()].map(j =>\n                                        <input\n                                            type=\"text\"\n                                            size=\"4\"\n                                            style={{ fontSize: \"20px\" }}\n                                            defaultValue={this.getStartingValue(i, j)}\n                                            key={`${i},${j}`}\n                                            ref={element => { this[`textInput${i},${j}`] = element }} />\n                                    )}\n                                    <br />\n                                </div>)}\n                        </div>\n                        <div className=\"column is-one-fifth has-text-left\">\n                            <button className=\"button is-small\" onClick={this.removeRow}>Remove Row</button>\n                            <br />\n                            <button className=\"button is-small\" onClick={this.addRow}>Add Row</button>\n                        </div>\n                    </div>\n\n                    <div className=\"columns\" >\n                        <div className=\"column is-narrow has-text-left\">\n                            <span className=\"button is-small\" onClick={this.removeCol}>Remove Col</span>\n                            <span className=\"button is-small\" onClick={this.addCol}>Add Col</span>\n                            <div style={{ paddingTop: \"20px\" }}>\n                                <button className=\"button\" onClick={this.submit}>Submit</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n        this.setFinishedPopulating(true)\n        return ret\n    }\n}\n\n\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        upsertMatrix,\n        renameMatrix\n    },\n        dispatch)\n}\n\nexport default connect(null, mapDispatchToProps)(InputGrid);\n\n","import React from 'react';\nimport ModalWrapper from 'components/common/ModalWrapper'\nimport InputGrid from 'components/common/InputGrid'\n\nclass CreateMatrix extends React.Component {\n  render() {\n    return (\n      <ModalWrapper>\n        <button className=\"button is-primary\">\n          Create New Matrix\n        </button>\n        Create New Matrix\n        <InputGrid initialRows={2} initialCols={2} create />\n      </ModalWrapper>\n    )\n  }\n}\n\nexport default CreateMatrix;","import React from 'react';\nimport { List } from 'immutable';\nimport katex from 'katex';\nimport Parser from 'html-react-parser';\n\nconst START = \"\\\\begin{pmatrix}\"\nconst END = \"\\\\end{pmatrix}\"\n\nclass Matrix extends React.Component {\n    convertStateToLatex(props) {\n        let fragments = new List()\n        var numericValues = props.ndarray.numericValues\n        var rows, cols\n        [rows, cols] = props.ndarray.shape\n        var count\n        for (count = 0; count < rows; count++) {\n            fragments = fragments\n                .push(numericValues\n                    .slice(count * cols, (count + 1) * cols)\n                    .join(' & '))\n        }\n        return START + fragments.join(' \\\\\\\\ ') + END\n    }\n\n    render() {\n        let math = katex.renderToString(this.convertStateToLatex(this.props));\n        return (\n            <div>{Parser(math)}</div>\n        )\n    }\n}\n\nexport default Matrix;","import React from 'react';\n\nclass ResponsiveIcon extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            hover: false\n        }\n        this.hoverOn = this.hoverOn.bind(this)\n        this.hoverOff = this.hoverOff.bind(this)\n    }\n\n    hoverOn() {\n        this.setState({ hover: true });\n    }\n\n    hoverOff() {\n        this.setState({ hover: false });\n    }\n\n    render() {\n        return (\n            <i className={this.state.hover ? \"fas \" + this.props.icon : \"far \" + this.props.icon}\n                style={{ cursor: \"pointer\" }}\n                onMouseEnter={this.hoverOn}\n                onMouseLeave={this.hoverOff}\n                onClick={this.props.onClick}\n                title={this.props.title}\n            ></i>\n        )\n    }\n}\n\nexport default ResponsiveIcon;\n\n","import React from 'react';\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from 'redux'\nimport { deleteMatrix } from \"actions/matrices\"\nimport Matrix from \"components/common/Matrix\"\nimport ModalWrapper from \"components/common/ModalWrapper\"\nimport InputGrid from \"components/common/InputGrid\"\nimport ResponsiveIcon from \"components/common/ResponsiveIcon\"\n\nclass RichMatrix extends React.Component {\n    render() {\n        return (\n            <div className=\"box has-text-centered\">\n                <Matrix ndarray={this.props.ndarray} />\n                {this.props.matrixName}\n                <br />\n                <span className=\"icon has-text-info\" >\n                    <ModalWrapper>\n                        <ResponsiveIcon icon=\"fa-edit\" title=\"Edit the matrix in place\" />\n                        {`edit ${this.props.matrixName}`}\n                        <InputGrid ndarray={this.props.ndarray} matrixName={this.props.matrixName} edit />\n                    </ModalWrapper>\n                </span>\n                <span className=\"icon has-text-info\" >\n                    <ModalWrapper>\n                        <ResponsiveIcon icon=\"fa-clone\" title=\"Create a duplicate of this matrix\" />\n                        {`clone ${this.props.matrixName}`}\n                        <InputGrid ndarray={this.props.ndarray} matrixName={this.props.matrixName} clone />\n                    </ModalWrapper>\n                </span>\n                <span className=\"icon has-text-info\" >\n                    <ResponsiveIcon icon=\"fa-trash-alt\" onClick={() => this.props.deleteMatrix(this.props.matrixName)} title=\"Delete this matrix\" />\n                </span>\n            </div>\n        )\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        deleteMatrix\n    },\n        dispatch)\n}\n\nexport default connect(null, mapDispatchToProps)(RichMatrix);\n","import React, { Component } from 'react';\n\nclass BankWrapper extends Component {\n\n    render() {\n        return (\n            <div>\n                <nav className=\"level\">\n                    <div className=\"level-left\">\n                        <div className=\"level-item\">\n                            <h2 className=\"subtitle is-3\">{this.props.title} </h2>\n                        </div>\n                        <div className=\"level-item\">\n                            {this.props.createNew}\n                        </div>\n                    </div>\n                </nav>\n                <div className=\"box\">\n                    <div className=\"columns is-multiline is-mobile\">\n                        {this.props.children}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default BankWrapper\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\"\n\nimport CreateMatrix from \"components/createMatrix/CreateMatrix\"\nimport RichMatrix from 'components/banks/matricesBank/RichMatrix';\nimport BankWrapper from \"components/banks/BankWrapper\"\n\n\nclass MatricesBank extends Component {\n\n  render() {\n    return (\n      <BankWrapper title=\"Matrices\" createNew={<CreateMatrix />}>\n        {this.props.matrixMap.entrySeq().map(([k, v]) =>\n          <div className=\"column is-narrow is-mobile\" key={k}>\n            <RichMatrix\n              ndarray={v}\n              matrixName={k}\n              key={k}\n            />\n          </div>\n        )}\n      </BankWrapper>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    matrixMap: state.matrices.matrixMap\n  }\n}\n\nexport default connect(mapStateToProps)(MatricesBank);\n","import React from 'react';\nimport Matrix from \"components/common/Matrix\"\n\nclass CompositeMatrix extends React.Component {\n    render() {\n        return (\n            <div className=\"box has-text-centered\">\n                <div className=\"columns is-mobile\">\n                    {this.props.composite.nameMatrixPairs.map(([name, ndarray]) =>\n                        <div className=\"column is-mobile\" key={name}>\n                            <div className=\"box\">\n                                <Matrix ndarray={ndarray} />\n                                <div>{name}</div>\n                            </div>\n                        </div>\n                    )}\n                </div>\n                {this.props.matrixName}\n            </div>\n        )\n    }\n}\n\nexport default CompositeMatrix\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\"\n\nimport BankWrapper from \"components/banks/BankWrapper\"\nimport CompositeMatrix from \"components/banks/compositeBank/CompositeMatrix\"\n\n\nclass CompositeBank extends Component {\n\n    render() {\n        return (\n            <BankWrapper title=\"Composite Matrices\">\n                {\n                    this.props.compositeMap.entrySeq().map(([k, v]) =>\n                        <div className=\"column is-narrow is-mobile\" key={k}>\n                            <CompositeMatrix composite={v} matrixName={k} />\n                        </div>\n                    )\n                }\n            </BankWrapper >\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        compositeMap: state.composites\n    }\n}\n\nexport default connect(mapStateToProps)(CompositeBank);\n","import React from 'react';\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from 'redux'\n\nimport { operationBegin } from \"actions/operation\"\nimport { Button } from \"react-bulma-components/full\"\n\nconst placeholder = \"--Select Matrix--\"\nclass GenericOperation extends React.Component {\n    constructor(props) {\n        super(props)\n        this.operate = this.operate.bind(this)\n        this.showWarning = this.showWarning.bind(this)\n        this.closeWarning = this.closeWarning.bind(this)\n        this.state = { matrix_1: \"\", matrix_2: \"\", resultVariable: \"\", displayWarning: false }\n    }\n    operate = () => {\n        let argv = [...Array(this.props.numDropdowns).keys()].map(i => this[`dropdown${i}`].value)\n        this.props.operationBegin(this.props.codeCreator(argv), argv, this[\"resultName\"].value)\n        this.showWarning()\n    }\n\n    showWarning = () => {\n        this.setState({ displayWarning: true })\n    }\n\n    closeWarning = () => {\n        this.setState({ displayWarning: false })\n    }\n\n    render() {\n        return (\n            <div className=\"box\">\n                <div className=\"level\">\n                    <div className=\"level-left\">\n                        {[...Array(this.props.numDropdowns).keys()].map(i =>\n                            <div className=\"level-item\" key={i}>\n                                <div className=\"select\">\n                                    <select defaultValue=\"\" ref={element => { this[`dropdown${i}`] = element }}>\n                                        <option value=\"\" disabled>{placeholder}</option>\n                                        {this.props.matrixMap.keySeq().map(k =>\n                                            <option value={k} key={k}>{k}</option>\n                                        )}\n                                    </select>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n\n                    <div className=\"level-right\">\n                        <div className=\"level-item\">\n                            <input\n                                className=\"input\"\n                                type=\"text\"\n                                placeholder=\"Store Result As\"\n                                ref={element => { this[\"resultName\"] = element }}\n                            />\n                        </div>\n                    </div>\n\n                </div>\n                <br />\n                <div className=\"level\">\n                    <div className=\"level-left\">\n                        {this.state.displayWarning && this.props.mostRecentError && <div className=\"notification is-warning\">\n                            <button className=\"delete\" onClick={this.closeWarning}></button>\n                            <p><b>Numpy Error: </b>{this.props.mostRecentError}</p>\n                        </div>}\n                    </div>\n                    <div className=\"level-right\">\n                        <div className=\"level-item\">\n                            <Button onClick={this.operate}>Operate</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        matrixMap: state.matrices.matrixMap,\n        mostRecentError: state.matrices.mostRecentError\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        operationBegin\n    },\n        dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GenericOperation);","export function invert(argv) {\n    return `np.linalg.inv(${argv[0]})`\n}\n\nexport function transpose(argv) {\n    return `np.transpose(${argv[0]})`\n}\n\nexport function add(argv) {\n    return `np.add(${argv[0]}, ${argv[1]})`\n}\n\nexport function subtract(argv) {\n    return `np.subtract(${argv[0]}, ${argv[1]})`\n}\n\nexport function multiply(argv) {\n    return `np.dot(${argv[0]}, ${argv[1]})`\n}","import React, { Component } from 'react';\n\nimport { Dropdown } from \"react-bulma-components/full\"\nimport GenericOperation from \"components/controlPanel/operations/GenericOperation\"\nimport * as Creators from \"components/controlPanel/CodeCreators\"\n\nclass ControlPanel extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { selected: \"\" }\n  }\n\n  onChange = selected => {\n    this.setState({ selected });\n  };\n\n  render() {\n    return (\n      <div className=\"box\">\n        <Dropdown value={this.state.selected} onChange={this.onChange} color=\"info\">\n          <Dropdown.Item value=\"\">Select Matrix Operation</Dropdown.Item>\n          <Dropdown.Divider />\n          <Dropdown.Item value=\"invert\">Invert</Dropdown.Item>\n          <Dropdown.Item value=\"transpose\">Transpose</Dropdown.Item>\n          <Dropdown.Item value=\"add\">Add</Dropdown.Item>\n          <Dropdown.Item value=\"subtract\">Subtract</Dropdown.Item>\n          <Dropdown.Item value=\"multiply\">Multiply</Dropdown.Item>\n        </Dropdown>\n        <hr />\n        {this.state.selected === \"invert\" && <GenericOperation numDropdowns={1} codeCreator={Creators.invert} />}\n        {this.state.selected === \"transpose\" && <GenericOperation numDropdowns={1} codeCreator={Creators.transpose} />}\n        {this.state.selected === \"add\" && <GenericOperation numDropdowns={2} codeCreator={Creators.add} />}\n        {this.state.selected === \"subtract\" && <GenericOperation numDropdowns={2} codeCreator={Creators.subtract} />}\n        {this.state.selected === \"multiply\" && <GenericOperation numDropdowns={2} codeCreator={Creators.multiply} />}\n      </div>\n    );\n  }\n}\n\nexport default ControlPanel","import React, { Component } from 'react';\n\nimport MatricesBank from \"components/banks/matricesBank/MatricesBank\"\nimport CompositeBank from \"components/banks/compositeBank/CompositeBank\"\nimport ControlPanel from \"components/controlPanel/ControlPanel\"\n\nclass MatrixGUI extends Component {\n\n  render() {\n    return (\n      <div className=\"container\">\n        <section className=\"section\">\n          <MatricesBank />\n        </section>\n        <section className=\"section\">\n          <CompositeBank />\n        </section>\n        <section className=\"section\">\n          <ControlPanel />\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default MatrixGUI;\n","import React, { Component } from 'react';\n\nimport MatrixGUI from \"components/MatrixGUI\"\n// import Navbar from \"components/navbar/Navbar\"\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div>\n        {/* <Navbar /> */}\n        <MatrixGUI />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import 'bulma/css/bulma.css'\n\nimport React from 'react';\nimport { render } from 'react-dom'\n\nimport { applyMiddleware, createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from 'reducers'\n\nimport { createEpicMiddleware } from 'redux-observable';\nimport { rootEpic } from 'epics'\n\nimport { createLogger } from 'redux-logger'\nimport Immutable from 'immutable'\nimport 'rxjs';\n\nimport App from 'App';\n\nconst logger = createLogger({\n  stateTransformer: (state) => {\n    let newState = {};\n\n    for (var i of Object.keys(state)) {\n      if (Immutable.Iterable.isIterable(state[i])) {\n        newState[i] = state[i].toJS();\n      } else {\n        newState[i] = state[i];\n      }\n    };\n\n    return newState;\n  }\n});\n\nconst epicMiddleware = createEpicMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(epicMiddleware, logger)\n)\n\nepicMiddleware.run(rootEpic);\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}