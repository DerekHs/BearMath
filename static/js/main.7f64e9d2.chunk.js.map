{"version":3,"sources":["actions/actions.js","util/Ndarray.js","util/Tuple.js","util/Scalar.js","reducers/values.js","reducers/temp.js","reducers/error.js","reducers/loading.js","reducers/index.js","actions/operation.js","epics/operationEpic.js","epics/index.js","components/common/ModalWrapper.js","actions/matrices.js","components/common/InputGrid.js","components/createMatrix/CreateMatrix.js","components/bank/BankWrapper.js","components/common/ResponsiveIcon.js","components/common/Matrix.js","components/bank/RichMatrix.js","components/bank/Tuple.js","components/common/Scalar.js","components/bank/RichScalar.js","components/bank/ValueBank.js","actions/temp.js","components/controlPanel/operations/GenericOperation.js","components/controlPanel/CodeCreators.js","components/controlPanel/ControlPanel.js","components/MatrixGUI.js","App.js","index.js"],"names":["OPERATION_BEGIN","OPERATION_SUCCESS","OPERATION_ERROR","UPSERT_MATRIX","RENAME_MATRIX","DELETE_MATRIX","CLEAR_TEMP","Ndarray","numericValues","shape","Object","classCallCheck","this","Tuple","namev","ndarrayv","length","_this","map","e","i","Scalar","value","initialState","OrderedMap","exampleScalar","exampleNDArray","exampleNDArrayTuple","upsert","state","name","dataTypeObjectPair","contains","updateIn","set","values","arguments","undefined","action","type","mapKeys","k","newName","remove","result","validOperation","misc","save","dataType","entry","resultVariable","temp","error","loading","combineReducers","operationBegin","command","dataNames","dataTypes","createBody","dataValues","get","serialize","console","log","assign","apply","toConsumableArray","defineProperty","rootEpic","combineEpics","action$","state$","pipe","ofType","mergeMap","ajax","url","method","headers","Content-Type","body","matrices","response","catchError","of","errorMessage","ModalWrapper","props","possibleConstructorReturn","getPrototypeOf","call","modalState","toggleModal","bind","assertThisInitialized","setState","prev","react_default","a","createElement","React","cloneElement","children","onClick","ModalWrapper_Modal","closeModal","title","toggle","Component","Modal","_ref","className","upsertMatrix","renameMatrix","deleteMatrix","variableNameRe","RegExp","InputGrid","create","numRows","initialRows","numCols","initialCols","matrixName","finishedPopulating","edit","ndarray","rows","cols","clone","addRow","addCol","removeRow","removeCol","submit","updateMatrixName","getStartingValue","setFinishedPopulating","validMatrixName","prevState","Math","min","max","objectSpread","r","c","push","parseFloat","concat","j","status","str","match","matchExact","_this2","ret","placeholder","onChange","target","style","paddingTop","Array","keys","key","size","fontSize","defaultValue","ref","element","disabled","connect","dispatch","bindActionCreators","CreateMatrix","common_ModalWrapper","common_InputGrid","BankWrapper","createNew","ResponsiveIcon","hover","hoverOn","hoverOff","icon","cursor","onMouseEnter","onMouseLeave","Matrix","count","fragments","List","numerics","float","round","pow","_props$numerics$shape","slicedToArray","slice","join","math","katex","renderToString","convertStateToLatex","Parser","RichMatrix","common_Matrix","common_ResponsiveIcon","delete","nameMatrixPairs","_ref2","bank_RichMatrix","RichScalar","common_Scalar","MatrixBank","bank_BankWrapper","createMatrix_CreateMatrix","workspaceValues","entrySeq","v","renderHelper","_ref3","_ref4","bank_RichScalar","bank_Tuple","clearTemp","GenericOperation","operate","argv","dropdownValues","toJS","codeCreator","showWarning","displayWarning","closeWarning","setResult","setDropdownValue","numDropdowns","fill","event","val","workspaceMatrices","keySeq","mostRecentError","helperWrapper","react_spinners","color","full","_ref2$","filter","invert","invertTypes","transpose","transposeTypes","add","addTypes","subtract","subtractTypes","multiply","multiplyTypes","svd","svdTypes","eigenvectors","eigenvectorsTypes","qr","qrTypes","determinant","determinantTypes","nullspace","nullspaceTypes","ControlPanel","selectTab","selected","operationType","operation","operationSelected","isActive","Item","operations_GenericOperation","Creators","MatrixGUI","controlPanel_ControlPanel","ValueBank","App","components_MatrixGUI","logger","createLogger","stateTransformer","newState","_arr","_i","Immutable","Iterable","isIterable","epicMiddleware","createEpicMiddleware","store","createStore","rootReducer","applyMiddleware","run","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7f64e9d2.chunk.js","sourcesContent":["/* Contains definitons of actions */\n\nexport const OPERATION_BEGIN = \"OPERATION_BEGIN\"\nexport const OPERATION_SUCCESS = \"OPERATION_SUCCESS\"\nexport const OPERATION_ERROR = \"OPERATION_ERROR\"\n\nexport const UPSERT_MATRIX = \"UPSERT_MATRIX\"\nexport const RENAME_MATRIX = \"RENAME_MATRIX\"\nexport const DELETE_MATRIX = \"DELETE_MATRIX\"\n\nexport const UPSERT_COMPOSITE = \"UPSERT_COMPOSITE\"\nexport const RENAME_COMPOSITE = \"RENAME_COMPOSITE\"\nexport const DELETE_COMPOSITE = \"DELETE_COMPOSITE\"\n\nexport const UPSERT_SCALAR = \"UPSERT_SCALAR\"\nexport const RENAME_SCALAR = \"RENAME_SCALAR\"\nexport const DELETE_SCALAR = \"DELETE_SCALAR\"\n\nexport const CLEAR_TEMP = \"CLEAR_TEMP\"","export default class Ndarray {\n    constructor(numericValues, shape) {\n        this.numericValues = numericValues;\n        this.shape = shape;\n    }\n\n    rows() {\n        return this.shape[0]\n    }\n\n    cols() {\n        return this.shape[1]\n    }\n\n    serialize() {\n        return { numericValues: this.numericValues, shape: this.shape }\n    }\n}","export default class Tuple {\n    constructor(namev, ndarrayv) {\n        this.namev = namev\n        this.ndarrayv = ndarrayv\n    }\n\n    get size() {\n        return this.namev.length\n    }\n\n    get nameMatrixPairs() {\n        return this.namev.map((e, i) => {\n            return [e, this.ndarrayv[i]];\n        });\n    }\n}","export default class Scalar {\n    constructor(value) {\n        this.value = value\n    }\n\n    serialize() {\n        return this.value\n    }\n}","import { UPSERT_MATRIX, RENAME_MATRIX, DELETE_MATRIX, OPERATION_SUCCESS } from \"../actions/actions\";\nimport { OrderedMap } from \"immutable\"\n\nimport Ndarray from \"util/Ndarray\"\nimport Tuple from \"util/Tuple\"\nimport Scalar from \"util/Scalar\"\n\nconst ndarrayv = [new Ndarray([1, 1, 1, 0], [2, 2]), new Ndarray([1, 1, 1, 4], [2, 2]), new Ndarray([1, 1, 1, 4], [2, 2])]\nconst namev = [\"U\", \"Σ\", \"V\"]\n\nconst initialState = new OrderedMap({\n  exampleScalar: [\"SCALAR\", new Scalar(5)],\n  exampleNDArray: [\"NDARRAY\", new Ndarray([1, 2, 3, 4], [2, 2])],\n  exampleNDArrayTuple: [\"TUPLE\", new Tuple(namev, ndarrayv)]\n})\n\n// const initialState = new OrderedMap({\n//   exampleNdarray: [\"NDARRAY\", new Ndarray([1, 2, 3, 4, 5, 6, 7, 8, 9], [3, 3])],\n// })\n\nconst values = (state = initialState, action) => {\n  var dataTypeObjectPair\n  switch (action.type) {\n    case UPSERT_MATRIX:\n      dataTypeObjectPair = [\"NDARRAY\", new Ndarray(action.numericValues, action.shape)]\n      return upsert(state, action.name, dataTypeObjectPair)\n    case RENAME_MATRIX:\n      return state.mapKeys(k => {\n        if (k === action.name) {\n          return action.newName\n        }\n        return k\n      })\n    case DELETE_MATRIX:\n      return state.remove(action.name)\n    case OPERATION_SUCCESS:\n      if (action.result.validOperation && action.misc.save) {\n        switch (action.result.dataType) {\n          case \"NDARRAY\": {\n            dataTypeObjectPair = [\"NDARRAY\", new Ndarray(action.result.result.numericValues, action.result.result.shape)]\n            break\n          }\n          case \"TUPLE\": {\n            dataTypeObjectPair = [\"TUPLE\", new Tuple(action.misc.namev, action.result.result.map(entry =>\n              new Ndarray(entry.numericValues, entry.shape)))]\n            break\n          }\n          case \"SCALAR\": {\n            dataTypeObjectPair = [\"SCALAR\", new Scalar(action.result.result)]\n            break\n          }\n          default:\n            break\n        }\n        return upsert(state, action.resultVariable, dataTypeObjectPair)\n      } else {\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nfunction upsert(state, name, dataTypeObjectPair) {\n  if (state.contains(name)) {\n    return state.updateIn([name], () => dataTypeObjectPair)\n  }\n  return state.set(name, dataTypeObjectPair)\n}\n\nexport default values\n","import { OPERATION_BEGIN, OPERATION_SUCCESS, CLEAR_TEMP } from \"../actions/actions\";\n\nimport Ndarray from \"util/Ndarray\"\nimport Tuple from \"util/Tuple\"\nimport Scalar from \"util/Scalar\"\n\nconst initialState = null\n\nconst temp = (state = initialState, action) => {\n    switch (action.type) {\n        case OPERATION_BEGIN:\n            return null\n        case OPERATION_SUCCESS:\n            if (action.result.validOperation) {\n                var dataTypeObjectPair\n                switch (action.result.dataType) {\n                    case \"NDARRAY\": {\n                        dataTypeObjectPair = [\"NDARRAY\", new Ndarray(action.result.result.numericValues, action.result.result.shape)]\n                        break\n                    }\n                    case \"TUPLE\": {\n                        dataTypeObjectPair = [\"TUPLE\", new Tuple(action.misc.namev, action.result.result.map(entry =>\n                            new Ndarray(entry.numericValues, entry.shape)))]\n                        break\n                    }\n                    case \"SCALAR\": {\n                        dataTypeObjectPair = [\"SCALAR\", new Scalar(action.result.result)]\n                        break\n                    }\n                    default:\n                        break\n                }\n                return [action.resultVariable, dataTypeObjectPair]\n            } else {\n                return state\n            }\n        case CLEAR_TEMP:\n            return null\n        default:\n            return state\n    }\n}\n\nexport default temp","import { OPERATION_BEGIN, OPERATION_SUCCESS } from \"../actions/actions\";\n\nconst initialState = \"\"\n\nconst error = (state = initialState, action) => {\n    switch (action.type) {\n        case OPERATION_BEGIN:\n            return \"\"\n        case OPERATION_SUCCESS:\n            if (!action.result.validOperation) {\n                return action.result.result\n            }\n            return state\n        default:\n            return state\n    }\n}\n\nexport default error","import { OPERATION_BEGIN, OPERATION_SUCCESS, OPERATION_ERROR } from \"../actions/actions\";\n\nconst initialState = false\n\nconst loading = (state = initialState, action) => {\n    switch (action.type) {\n        case OPERATION_BEGIN:\n            return true\n        case OPERATION_SUCCESS:\n            return false\n        case OPERATION_ERROR:\n            return \"error\"\n        default:\n            return state\n    }\n}\n\nexport default loading","\nimport { combineReducers } from 'redux'\nimport values from './values'\nimport temp from './temp'\nimport error from './error'\nimport loading from './loading'\n\nexport default combineReducers({\n    values,\n    temp,\n    loading,\n    error\n})\n","import { OPERATION_BEGIN, OPERATION_SUCCESS, OPERATION_ERROR } from \"actions/actions\"\n\nexport function operationBegin(command, dataNames, dataTypes, resultVariable, misc) {\n    return {\n        type: OPERATION_BEGIN,\n        command,\n        dataNames,\n        dataTypes,\n        resultVariable,\n        misc\n    }\n}\n\nexport function operationSuccess(resultVariable, result, misc) {\n    return {\n        type: OPERATION_SUCCESS,\n        resultVariable,\n        result,\n        misc\n    }\n}\n\nexport function operationError(errorMessage) {\n    return {\n        type: OPERATION_ERROR,\n        errorMessage\n    }\n}\n\n\n","import { mergeMap, catchError, map } from 'rxjs/operators';\nimport { ajax } from 'rxjs/ajax'\nimport { of } from 'rxjs';\nimport { ofType } from 'redux-observable'\n\n\nimport { operationError, operationSuccess } from 'actions/operation'\nimport { OPERATION_BEGIN } from 'actions/actions'\n\nexport const operationEpic = (action$, state$) => action$.pipe(\n    ofType(OPERATION_BEGIN),\n    mergeMap(action =>\n        ajax({\n            url: 'https://nzr58np206.execute-api.us-west-2.amazonaws.com/beta-prod/operation',\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: {\n                command: action.command,\n                matrices: createBody(action.dataNames, state$.value.values)\n            }\n        }).pipe(\n            map(response => operationSuccess(action.resultVariable, response.response.body, action.misc)),\n            catchError(error => of(operationError(error)))\n        )\n    )\n)\n\nfunction createBody(dataNames, state) {\n    let dataValues = dataNames.map(name => [state.get(name)[0], state.get(name)[1].serialize()])\n    console.log(Object.assign(...dataNames.map((k, i) => ({ [k]: dataValues[i] }))))\n    return Object.assign(...dataNames.map((k, i) => ({ [k]: dataValues[i] })))\n}\n","import { combineEpics } from 'redux-observable';\nimport { operationEpic } from 'epics/operationEpic'\n\nexport const rootEpic = combineEpics(\n    operationEpic,\n);","import React from 'react';\nimport PropTypes from 'prop-types'\n\nclass ModalWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalState: false\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n  }\n\n  toggleModal() {\n    this.setState((prev, props) => {\n      const newState = !prev.modalState;\n\n      return { modalState: newState };\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          {React.cloneElement(this.props.children[0], { onClick: this.toggleModal })}\n        </div>\n\n        <Modal\n          closeModal={this.toggleModal}\n          modalState={this.state.modalState}\n          title={this.props.children[1]}\n        >\n          {React.cloneElement(this.props.children[2], { toggle: this.toggleModal })}\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst Modal = ({ children, closeModal, modalState, title }) => {\n  if (!modalState) {\n    return null;\n  }\n\n  return (\n    <div className=\"modal is-active\">\n      <div className=\"modal-background\" onClick={closeModal} />\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <p className=\"modal-card-title\">{title}</p>\n          <button className=\"delete\" onClick={closeModal} />\n        </header>\n        <section className=\"modal-card-body\">\n          <div className=\"content\">\n            {children}\n          </div>\n        </section>\n        <footer className=\"modal-card-foot\">\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nModal.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n  modalState: PropTypes.bool.isRequired,\n  title: PropTypes.string\n}\n\nexport default ModalWrapper;","import { UPSERT_MATRIX, RENAME_MATRIX, DELETE_MATRIX } from \"actions/actions\";\n\n\nexport function upsertMatrix(name, shape, numericValues) {\n    return {\n        type: UPSERT_MATRIX,\n        name,\n        shape,\n        numericValues\n    }\n}\n\nexport function renameMatrix(name, newName) {\n    return {\n        type: RENAME_MATRIX,\n        name,\n        newName\n    }\n}\n\nexport function deleteMatrix(name) {\n    return {\n        type: DELETE_MATRIX,\n        name\n    }\n}\n","import React from 'react';\nimport { bindActionCreators } from 'redux'\nimport { connect } from \"react-redux\"\n\nimport { upsertMatrix } from \"actions/matrices\"\nimport { renameMatrix } from \"actions/matrices\"\n\nconst variableNameRe = new RegExp(\"^[a-zA-Z]+[1-9a-zA-Z_]*$\")\n\nfunction matchExact(r, str) {\n    var match = str.match(r);\n    return match != null && str === match[0];\n}\n\nclass InputGrid extends React.Component {\n    constructor(props) {\n        super(props)\n        if (props.create) {\n            this.state = {\n                numRows: props.initialRows,\n                numCols: props.initialCols,\n                matrixName: ''\n            }\n            this.finishedPopulating = true\n        }\n\n        else if (props.edit) {\n            console.log(props.ndarray)\n            this.state = {\n                numRows: props.ndarray.rows(),\n                numCols: props.ndarray.cols(),\n                numericValues: props.ndarray.numericValues,\n                matrixName: props.matrixName\n            }\n            this.finishedPopulating = false\n        }\n\n        else if (props.clone) {\n            this.state = {\n                numRows: props.ndarray.rows(),\n                numCols: props.ndarray.cols(),\n                numericValues: props.ndarray.numericValues,\n                matrixName: props.matrixName + \"_CLONE\"\n            }\n            this.finishedPopulating = false\n        }\n\n        this.addRow = this.addRow.bind(this)\n        this.addCol = this.addCol.bind(this)\n        this.removeRow = this.removeRow.bind(this)\n        this.removeCol = this.removeCol.bind(this)\n        this.submit = this.submit.bind(this)\n        this.updateMatrixName = this.updateMatrixName.bind(this)\n        this.getStartingValue = this.getStartingValue.bind(this)\n        this.setFinishedPopulating = this.setFinishedPopulating.bind(this)\n        this.validMatrixName = this.validMatrixName.bind(this)\n    }\n\n    addRow() {\n        this.setState((prevState) => ({\n            numRows: Math.min(prevState.numRows + 1, 7)\n        }))\n    }\n\n    addCol() {\n        this.setState((prevState) => ({\n            numCols: Math.min(prevState.numCols + 1, 7)\n        }))\n    }\n\n    removeRow() {\n        this.setState((prevState) => ({\n            numRows: Math.max(prevState.numRows - 1, 1)\n        }))\n    }\n\n    removeCol() {\n        this.setState((prevState) => ({\n            numCols: Math.max(prevState.numCols - 1, 1)\n        }))\n    }\n\n    updateMatrixName(newName) {\n        this.setState(\n            { ...this.state, matrixName: newName }\n        )\n    }\n\n    submit() {\n        let numericValues = []\n        for (let r = 0; r < this.state.numRows; r++) {\n            for (let c = 0; c < this.state.numCols; c++) {\n                numericValues.push(parseFloat(this[`textInput${r},${c}`].value) || 0)\n            }\n        }\n        if (this.props.edit) {\n            this.props.upsertMatrix(this.props.matrixName, [this.state.numRows, this.state.numCols], numericValues)\n            this.props.renameMatrix(this.props.matrixName, this.state.matrixName)\n        } else {\n            this.props.upsertMatrix(this.state.matrixName, [this.state.numRows, this.state.numCols], numericValues)\n        }\n        this.props.toggle()\n    }\n\n    getStartingValue(i, j) {\n        if (!this.finishedPopulating) {\n            return this.state.numericValues[i * this.state.numCols + j]\n        }\n        return null\n    }\n\n    setFinishedPopulating(status) {\n        this.finishedPopulating = status\n    }\n\n    validMatrixName() {\n        if (this.state.matrixName === \"\") {\n            return true\n        }\n        return matchExact(variableNameRe, this.state.matrixName)\n    }\n\n    render() {\n        let ret = (\n            <div className=\"columns\">\n                <div className=\"column\">\n                    <div className=\"field\">\n                        <input\n                            className=\"input\"\n                            type=\"text\"\n                            value={this.state.matrixName}\n                            placeholder=\"Matrix Name\"\n                            onChange={(e) => this.updateMatrixName(e.target.value)} />\n                        {!this.validMatrixName() && <p className=\"help is-danger\">Matrix name must be a valid Python variable name</p>}\n                    </div>\n                    <div className=\"columns is-mobile\" style={{ paddingTop: \"25px\" }}>\n                        <div className=\"column is-narrow\">\n                            {[...Array(this.state.numRows).keys()].map(i =>\n                                <div key={i}>\n                                    {[...Array(this.state.numCols).keys()].map(j =>\n                                        <input\n                                            type=\"text\"\n                                            size=\"4\"\n                                            style={{ fontSize: \"20px\" }}\n                                            defaultValue={this.getStartingValue(i, j)}\n                                            key={`${i},${j}`}\n                                            ref={element => { this[`textInput${i},${j}`] = element }} />\n                                    )}\n                                    <br />\n                                </div>)}\n                        </div>\n                        <div className=\"column is-one-fifth has-text-left\">\n                            <button className=\"button is-small\" onClick={this.removeRow}>Remove Row</button>\n                            <br />\n                            <button className=\"button is-small\" onClick={this.addRow}>Add Row</button>\n                        </div>\n                    </div>\n\n                    <div className=\"columns\" >\n                        <div className=\"column is-narrow has-text-left\">\n                            <span className=\"button is-small\" onClick={this.removeCol}>Remove Col</span>\n                            <span className=\"button is-small\" onClick={this.addCol}>Add Col</span>\n                            <div style={{ paddingTop: \"20px\" }}>\n                                <button className=\"button\" disabled={this.state.matrixName === \"\" || !this.validMatrixName()} onClick={this.submit}>Submit</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n        this.setFinishedPopulating(true)\n        return ret\n    }\n}\n\n\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        upsertMatrix,\n        renameMatrix\n    },\n        dispatch)\n}\n\nexport default connect(null, mapDispatchToProps)(InputGrid);\n\n","import React from 'react';\nimport ModalWrapper from 'components/common/ModalWrapper'\nimport InputGrid from 'components/common/InputGrid'\n\nclass CreateMatrix extends React.Component {\n  render() {\n    return (\n      <ModalWrapper>\n        <button className=\"button is-primary\">\n          Create New Matrix\n        </button>\n        Create New Matrix\n        <InputGrid initialRows={2} initialCols={2} create />\n        <button className=\"button is-primary\">\n          Submit\n        </button>\n      </ModalWrapper>\n    )\n  }\n}\n\nexport default CreateMatrix;","import React, { Component } from 'react';\n\nclass BankWrapper extends Component {\n\n    render() {\n        return (\n            <div>\n                <nav className=\"level\">\n                    <div className=\"level-left\">\n                        <div className=\"level-item\">\n                            <h2 className=\"subtitle is-3\">{this.props.title} </h2>\n                        </div>\n                        <div className=\"level-item\">\n                            {this.props.createNew}\n                        </div>\n                    </div>\n                </nav>\n                <div className=\"box\">\n                    <div className=\"columns is-multiline\">\n                        {this.props.children}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default BankWrapper\n","import React from 'react';\n\nclass ResponsiveIcon extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            hover: false\n        }\n        this.hoverOn = this.hoverOn.bind(this)\n        this.hoverOff = this.hoverOff.bind(this)\n    }\n\n    hoverOn() {\n        this.setState({ hover: true });\n    }\n\n    hoverOff() {\n        this.setState({ hover: false });\n    }\n\n    render() {\n        return (\n            <i className={this.state.hover ? \"fas \" + this.props.icon : \"far \" + this.props.icon}\n                style={{ cursor: \"pointer\" }}\n                onMouseEnter={this.hoverOn}\n                onMouseLeave={this.hoverOff}\n                onClick={this.props.onClick}\n                title={this.props.title}\n            ></i>\n        )\n    }\n}\n\nexport default ResponsiveIcon;\n\n","import React from 'react';\nimport { List } from 'immutable';\nimport katex from 'katex';\nimport Parser from 'html-react-parser';\n\nconst START = \"\\\\begin{pmatrix}\"\nconst END = \"\\\\end{pmatrix}\"\n\nclass Matrix extends React.Component {\n    convertStateToLatex(props) {\n        let fragments = new List()\n        var numericValues = props.numerics.numericValues.map(float => Math.round(float * Math.pow(10, 4)) / Math.pow(10, 4))\n        var rows, cols\n        [rows, cols] = props.numerics.shape\n        var count\n        for (count = 0; count < rows; count++) {\n            fragments = fragments\n                .push(numericValues\n                    .slice(count * cols, (count + 1) * cols)\n                    .join(' & '))\n        }\n        return START + fragments.join(' \\\\\\\\ ') + END\n    }\n\n    render() {\n        let math = katex.renderToString(this.convertStateToLatex(this.props));\n        return (\n            <div>{Parser(math)}</div>\n        )\n    }\n}\n\nexport default Matrix;","import React from 'react';\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from 'redux'\nimport { deleteMatrix } from \"actions/matrices\"\n\nimport ModalWrapper from \"components/common/ModalWrapper\"\nimport InputGrid from \"components/common/InputGrid\"\nimport ResponsiveIcon from \"components/common/ResponsiveIcon\"\nimport Matrix from \"components/common/Matrix\"\n\nclass RichMatrix extends React.Component {\n    render() {\n        return (\n            <div className=\"box has-text-centered\">\n                <Matrix numerics={this.props.numerics} />\n                {this.props.name}\n                <br />\n                {this.props.edit && <span className=\"icon has-text-info\" >\n                    <ModalWrapper>\n                        <ResponsiveIcon icon=\"fa-edit\" title=\"Edit the matrix in place\" />\n                        {`edit ${this.props.name}`}\n                        <InputGrid ndarray={this.props.numerics} matrixName={this.props.name} edit />\n                    </ModalWrapper>\n                </span>}\n                {this.props.clone && <span className=\"icon has-text-info\" >\n                    <ModalWrapper>\n                        <ResponsiveIcon icon=\"fa-clone\" title=\"Create a duplicate of this matrix\" />\n                        {`clone ${this.props.name}`}\n                        <InputGrid ndarray={this.props.numerics} matrixName={this.props.name} clone />\n                    </ModalWrapper>\n                </span>}\n                {this.props.delete && <span className=\"icon has-text-info\" >\n                    <ResponsiveIcon icon=\"fa-trash-alt\" onClick={() => this.props.deleteMatrix(this.props.name)} title=\"Delete this matrix\" />\n                </span>}\n            </div>\n        )\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        deleteMatrix\n    },\n        dispatch)\n}\n\nexport default connect(null, mapDispatchToProps)(RichMatrix);\n","import React from 'react';\nimport RichMatrix from \"components/bank/RichMatrix\"\nimport ResponsiveIcon from \"components/common/ResponsiveIcon\"\n\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from 'redux'\nimport { deleteMatrix } from \"actions/matrices\"\n\nclass Tuple extends React.Component {\n    render() {\n        return (\n            <div className=\"box has-text-centered\">\n                <div className=\"columns is-multiline\">\n                    {this.props.numerics.nameMatrixPairs.map(([name, ndarray]) =>\n                        <div className=\"column\" key={name}>\n                            <RichMatrix numerics={ndarray} name={name} clone={this.props.clone} />\n                        </div>\n                    )}\n                </div>\n                <p>{this.props.name}</p>\n                {this.props.delete && <span className=\"icon has-text-info\" >\n                    <ResponsiveIcon icon=\"fa-trash-alt\" onClick={() => this.props.deleteMatrix(this.props.name)} title=\"Delete this tuple\" />\n                </span>}\n            </div>\n        )\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        deleteMatrix\n    },\n        dispatch)\n}\n\nexport default connect(null, mapDispatchToProps)(Tuple)\n","import React from 'react';\n\nclass Scalar extends React.Component {\n    render() {\n        return (\n            <h4 className=\"subtitle is-4\">{Math.round(this.props.numerics.value * Math.pow(10, 4)) / Math.pow(10, 4)}</h4>\n        )\n    }\n}\n\nexport default Scalar\n\n","import React from 'react';\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from 'redux'\nimport { deleteMatrix } from \"actions/matrices\"\n\nimport ModalWrapper from \"components/common/ModalWrapper\"\nimport InputGrid from \"components/common/InputGrid\"\nimport ResponsiveIcon from \"components/common/ResponsiveIcon\"\nimport Scalar from \"components/common/Scalar\"\n\nclass RichScalar extends React.Component {\n    render() {\n        return (\n            <div className=\"box has-text-centered\">\n                <Scalar numerics={this.props.numerics} />\n                {this.props.name}\n            </div>\n        )\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        deleteMatrix\n    },\n        dispatch)\n}\n\nexport default connect(null, mapDispatchToProps)(RichScalar);\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\"\n\nimport CreateMatrix from \"components/createMatrix/CreateMatrix\"\nimport BankWrapper from \"components/bank/BankWrapper\"\n\nimport RichMatrix from \"components/bank/RichMatrix\"\nimport Tuple from \"components/bank/Tuple\"\nimport RichScalar from \"components/bank/RichScalar\"\n\n\nclass MatrixBank extends Component {\n  render() {\n    return (\n      <BankWrapper title=\"Workspace\" createNew={<CreateMatrix />}>\n        {this.props.workspaceValues.entrySeq().map(([k, v]) =>\n          <div className=\"column is-narrow is-mobile\" key={k}>\n            {renderHelper(k, v)}\n          </div>\n        )}\n      </BankWrapper>\n    );\n  }\n}\n\nconst renderHelper = (name, [type, numerics]) => {\n  switch (type) {\n    case \"SCALAR\":\n      return (<RichScalar name={name} numerics={numerics} />)\n    case \"NDARRAY\":\n      return (<RichMatrix name={name} numerics={numerics} edit clone delete />)\n    case \"TUPLE\":\n      return (<Tuple name={name} numerics={numerics} clone={true} delete />)\n    default:\n      return null\n  }\n}\n\nfunction mapMatricesToProps(state) {\n  return {\n    workspaceValues: state.values\n  }\n}\n\nexport default connect(mapMatricesToProps)(MatrixBank);\n","import { CLEAR_TEMP } from \"actions/actions\"\n\nexport function clearTemp() {\n    return {\n        type: CLEAR_TEMP\n    }\n}","import React from 'react';\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from 'redux'\n\nimport { operationBegin } from \"actions/operation\"\nimport { Button } from \"react-bulma-components/full\"\nimport { List } from \"immutable\"\nimport { GridLoader } from 'react-spinners';\n\nimport Scalar from \"components/common/Scalar\"\nimport Matrix from \"components/common/Matrix\"\nimport Tuple from \"components/bank/Tuple\"\n\nconst variableNameRe = new RegExp(\"^[a-zA-Z]+[1-9a-zA-Z_]*$\")\n\nconst placeholder = \"--Select Matrix--\"\n\nfunction matchExact(r, str) {\n    var match = str.match(r);\n    return match != null && str === match[0];\n}\n\nclass GenericOperation extends React.Component {\n    constructor(props) {\n        super(props)\n        this.operate = this.operate.bind(this)\n        this.showWarning = this.showWarning.bind(this)\n        this.closeWarning = this.closeWarning.bind(this)\n        this.validMatrixName = this.validMatrixName.bind(this)\n        this.setResult = this.setResult.bind(this)\n        this.setDropdownValue = this.setDropdownValue.bind(this)\n        this.state = {\n            resultVariable: \"\",\n            displayWarning: false,\n            dropdownValues: List(Array(props.numDropdowns).fill().map(() => placeholder))\n        }\n    }\n    operate = () => {\n        let argv = this.state.dropdownValues.toJS()\n        this.props.operationBegin(\n            this.props.codeCreator(argv),\n            argv,\n            this.props.dataTypes,\n            this.state.resultVariable,\n            { ...this.props.misc, save: this.state.resultVariable }\n        )\n        this.showWarning()\n    }\n\n    showWarning = () => {\n        this.setState({ displayWarning: true })\n    }\n\n    closeWarning = () => {\n        this.setState({ displayWarning: false })\n    }\n\n    validMatrixName() {\n        if (this.state.resultVariable === \"\") {\n            return true\n        }\n        return matchExact(variableNameRe, this.state.resultVariable)\n    }\n\n    setResult(resultVariable) {\n        this.setState({ resultVariable: resultVariable })\n    }\n\n    setDropdownValue(event, i) {\n        let val = event.target.value\n        this.setState(state => ({ dropdownValues: state.dropdownValues.set(i, val) }))\n    }\n\n    render() {\n        return (\n            <div className=\"box\">\n                <div className=\"level\">\n                    <div className=\"level-left\">\n                        <div className=\"level-item\">\n                            <div className=\"columns\">\n                                {[...Array(this.props.numDropdowns).keys()].map(i =>\n                                    <div className=\"column has-text-centered\">\n                                        <div className=\"select\">\n                                            <select value={this.state.dropdownValues.get(i)} onChange={event => this.setDropdownValue(event, i)}>\n                                                <option value={placeholder} disabled>{placeholder}</option>\n                                                {this.props.workspaceMatrices.keySeq().map(k =>\n                                                    <option value={k} key={k}>{k}</option>\n                                                )}\n                                            </select>\n                                        </div>\n                                        <br />\n                                        <br />\n                                        {this.state.dropdownValues.get(i) !== placeholder && renderHelper([this.state.dropdownValues.get(i), this.props.workspaceMatrices.get(this.state.dropdownValues.get(i))])}\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"level-right\">\n                        <div className=\"level-item\">\n                            <div>\n                                <input\n                                    className=\"input\"\n                                    type=\"text\"\n                                    placeholder=\"Save Result As\"\n                                    value={this.state.resultVariable}\n                                    onChange={e => this.setResult(e.target.value)}\n                                />\n                                {!this.validMatrixName() && <p className=\"help is-danger\">Result name must be a valid Python variable name</p>}\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n                <br />\n                <div className=\"level\">\n                    <div className=\"level-left\">\n                        {this.state.displayWarning && this.props.mostRecentError && <div className=\"notification is-warning\">\n                            <button className=\"delete\" onClick={this.closeWarning}></button>\n                            <p><b>Numpy Error: </b>{this.props.mostRecentError}</p>\n                        </div>}\n                        {helperWrapper(this.props.temp)}\n                        {this.props.loading && <GridLoader color=\"#00bfff\" />}\n                    </div>\n                    <div className=\"level-right\">\n                        <div className=\"level-item\">\n                            <Button onClick={this.operate}>Operate</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst helperWrapper = (temp) => {\n    if (temp) {\n        return (\n            <div className=\"column has-text-centered\">\n                <h2 className=\"subtitle is-3\">Result:</h2>\n                {temp && renderHelper(temp)}\n            </div>\n        )\n    }\n    return null\n}\n\nconst renderHelper = ([name, [type, numerics]]) => {\n    switch (type) {\n        case \"SCALAR\":\n            return (<Scalar name={name} numerics={numerics} />)\n        case \"NDARRAY\":\n            return (<Matrix name={name} numerics={numerics} edit clone delete />)\n        case \"TUPLE\":\n            return (<Tuple name={name} numerics={numerics} />)\n        default:\n            return null\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        workspaceMatrices: state.values.filter(v => v[0] === \"NDARRAY\"),\n        temp: state.temp,\n        mostRecentError: state.error,\n        loading: state.loading\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        operationBegin\n    },\n        dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GenericOperation);","export function invert(argv) {\n    return `np.linalg.inv(${argv[0]})`\n}\nexport const invertTypes = [\"NDARRAY\"]\n\nexport function transpose(argv) {\n    return `np.transpose(${argv[0]})`\n}\nexport const transposeTypes = [\"NDARRAY\"]\n\nexport function add(argv) {\n    return `np.add(${argv[0]}, ${argv[1]})`\n}\nexport const addTypes = [\"NDARRAY\", \"NDARRAY\"]\n\nexport function subtract(argv) {\n    return `np.subtract(${argv[0]}, ${argv[1]})`\n}\nexport const subtractTypes = [\"NDARRAY\", \"NDARRAY\"]\n\nexport function multiply(argv) {\n    return `np.dot(${argv[0]}, ${argv[1]})`\n}\nexport const multiplyTypes = [\"NDARRAY\", \"NDARRAY\"]\n\nexport function svd(argv) {\n    return `np.linalg.svd(${argv[0]}, full_matrices=False)`\n}\nexport const svdTypes = [\"NDARRAY\"]\n\nexport function eigenvectors(argv) {\n    return `np.linalg.eig(${argv[0]})`\n}\nexport const eigenvectorsTypes = [\"NDARRAY\"]\n\nexport function qr(argv) {\n    return `np.linalg.qr(${argv[0]})`\n}\nexport const qrTypes = [\"NDARRAY\"]\n\nexport function determinant(argv) {\n    return `np.linalg.det(${argv[0]})`\n}\nexport const determinantTypes = [\"NDARRAY\"]\n\nexport function nullspace(argv) {\n    return `sp.linalg.null_space(${argv[0]})`\n}\nexport const nullspaceTypes = [\"NDARRAY\"]\n\nexport function leastSquares(argv) {\n    return `np.linalg.lstsq(${argv[0]}, ${argv[1]})`\n}\nexport const leastSquaresTypes = [\"NDARRAY\", \"NDARRAY\"]","import React, { Component } from 'react';\n\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from 'redux'\nimport { Dropdown } from \"react-bulma-components/full\"\n\nimport { clearTemp } from \"actions/temp\"\nimport GenericOperation from \"components/controlPanel/operations/GenericOperation\"\nimport * as Creators from \"components/controlPanel/CodeCreators\"\n\nclass ControlPanel extends Component {\n  constructor(props) {\n    super(props)\n    this.isActive = this.isActive.bind(this)\n    this.selectTab = this.selectTab.bind(this)\n    this.operationSelected = this.operationSelected.bind(this)\n    this.state = { operationType: \"Arithmetic\", operation: \"\" }\n  }\n\n  selectTab = selected => {\n    this.props.clearTemp()\n    this.setState({ operationType: selected, operation: \"\" });\n\n  };\n\n  operationSelected = selected => {\n    this.props.clearTemp()\n    this.setState({ operation: selected })\n  }\n\n  isActive = operationType => {\n    if (this.state.operationType === operationType) {\n      return \"is-active\"\n    }\n    return \"\"\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"tabs\">\n          <ul>\n            <li className={this.isActive(\"Arithmetic\")}>\n              <a onClick={() => this.selectTab(\"Arithmetic\")}>Arithmetic</a>\n            </li>\n            <li className={this.isActive(\"Decompositions\")}>\n              <a onClick={() => this.selectTab(\"Decompositions\")}>Decompositions</a>\n            </li>\n            {/* <li className={this.isActive(\"Misc\")}>\n              <a onClick={() => this.selectTab(\"Misc\")}>Misc.</a>\n            </li> */}\n          </ul>\n        </div>\n        {this.state.operationType === \"Arithmetic\" && <div className=\"box\">\n          <Dropdown value={this.state.operation} onChange={this.operationSelected} color=\"info\">\n            <Dropdown.Item value=\"\">--Select Arithmetic Operation--</Dropdown.Item>\n            <Dropdown.Item value=\"invert\">Invert</Dropdown.Item>\n            <Dropdown.Item value=\"transpose\">Transpose</Dropdown.Item>\n            <Dropdown.Item value=\"add\">Add</Dropdown.Item>\n            <Dropdown.Item value=\"subtract\">Subtract</Dropdown.Item>\n            <Dropdown.Item value=\"multiply\">Multiply</Dropdown.Item>\n            <Dropdown.Item value=\"determinant\">Determinant</Dropdown.Item>\n          </Dropdown>\n          <hr />\n          {this.state.operation === \"invert\" && <GenericOperation numDropdowns={1} codeCreator={Creators.invert} dataTypes={Creators.invertTypes} />}\n          {this.state.operation === \"transpose\" && <GenericOperation numDropdowns={1} codeCreator={Creators.transpose} dataTypes={Creators.transposeTypes} />}\n          {this.state.operation === \"add\" && <GenericOperation numDropdowns={2} codeCreator={Creators.add} dataTypes={Creators.addTypes} />}\n          {this.state.operation === \"subtract\" && <GenericOperation numDropdowns={2} codeCreator={Creators.subtract} dataTypes={Creators.subtractTypes} />}\n          {this.state.operation === \"multiply\" && <GenericOperation numDropdowns={2} codeCreator={Creators.multiply} dataTypes={Creators.multiplyTypes} />}\n          {this.state.operation === \"determinant\" && <GenericOperation numDropdowns={1} codeCreator={Creators.determinant} dataTypes={Creators.determinantTypes} />}\n        </div>}\n        {this.state.operationType === \"Decompositions\" && <div className=\"box\">\n          <Dropdown value={this.state.operation} onChange={this.operationSelected} color=\"info\">\n            <Dropdown.Item value=\"\">--Select Decomposition--</Dropdown.Item>\n            <Dropdown.Item value=\"svd\">SVD</Dropdown.Item>\n            <Dropdown.Item value=\"eigenvectors\">Eigenvectors/values</Dropdown.Item>\n            <Dropdown.Item value=\"qr\">QR</Dropdown.Item>\n          </Dropdown>\n          <hr />\n          {this.state.operation === \"svd\" && <GenericOperation numDropdowns={1} codeCreator={Creators.svd} dataTypes={Creators.svdTypes} misc={{ \"namev\": [\"U\", \"Σ\", \"V\"] }} />}\n          {this.state.operation === \"eigenvectors\" && <GenericOperation numDropdowns={1} codeCreator={Creators.eigenvectors} dataTypes={Creators.eigenvectorsTypes} misc={{ \"namev\": [\"eigenvalues\", \"eigenvectors\"] }} />}\n          {this.state.operation === \"qr\" && <GenericOperation numDropdowns={1} codeCreator={Creators.qr} dataTypes={Creators.qrTypes} misc={{ \"namev\": [\"Q\", \"R\"] }} />}\n        </div>}\n        {this.state.operationType === \"Misc\" && <div className=\"box\">\n          <Dropdown value={this.state.operation} onChange={this.operationSelected} color=\"info\">\n            <Dropdown.Item value=\"\">--Select Operation--</Dropdown.Item>\n            <Dropdown.Item value=\"nullspace\">NullSpace</Dropdown.Item>\n          </Dropdown>\n          <hr />\n          {this.state.operation === \"nullspace\" && <GenericOperation numDropdowns={1} codeCreator={Creators.nullspace} dataTypes={Creators.nullspaceTypes} misc={{ \"namev\": [\"U\", \"Σ\", \"V\"] }} />}\n        </div>}\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    clearTemp\n  },\n    dispatch)\n}\n\nexport default connect(null, mapDispatchToProps)(ControlPanel)","import React, { Component } from 'react';\n\nimport ValueBank from \"components/bank/ValueBank\"\nimport ControlPanel from \"components/controlPanel/ControlPanel\"\n\nclass MatrixGUI extends Component {\n\n  render() {\n    return (\n      <div className=\"container\">\n        <br/>\n        <section>\n          <h1 className=\"title is-3\">BearMath</h1>\n        </section>\n        <br />\n        <section>\n          <ControlPanel />\n        </section>\n        <br />\n        <section>\n          <ValueBank />\n        </section>,\n      </div>\n    );\n  }\n}\n\nexport default MatrixGUI;\n","import React, { Component } from 'react';\n\nimport MatrixGUI from \"components/MatrixGUI\"\n// import Navbar from \"components/navbar/Navbar\"\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div>\n        {/* <Navbar /> */}\n        <MatrixGUI />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import 'bulma/css/bulma.css'\n\nimport React from 'react';\nimport { render } from 'react-dom'\n\nimport { applyMiddleware, createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from 'reducers'\n\nimport { createEpicMiddleware } from 'redux-observable';\nimport { rootEpic } from 'epics'\n\nimport { createLogger } from 'redux-logger'\nimport Immutable from 'immutable'\nimport 'rxjs';\n\nimport App from 'App';\n\nconst logger = createLogger({\n  stateTransformer: (state) => {\n    let newState = {};\n\n    for (var i of Object.keys(state)) {\n      if (Immutable.Iterable.isIterable(state[i])) {\n        newState[i] = state[i].toJS();\n      } else {\n        newState[i] = state[i];\n      }\n    };\n\n    return newState;\n  }\n});\n\nconst epicMiddleware = createEpicMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(epicMiddleware, logger)\n)\n\nepicMiddleware.run(rootEpic);\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}