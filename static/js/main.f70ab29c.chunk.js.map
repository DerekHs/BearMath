{"version":3,"sources":["actions/actions.js","util/Ndarray.js","util/Tuple.js","util/Scalar.js","reducers/values.js","reducers/temp.js","reducers/error.js","reducers/index.js","actions/operation.js","epics/operationEpic.js","epics/index.js","components/common/ModalWrapper.js","actions/matrices.js","components/common/InputGrid.js","components/createMatrix/CreateMatrix.js","components/bank/BankWrapper.js","components/common/ResponsiveIcon.js","components/common/Matrix.js","components/bank/RichMatrix.js","components/bank/Tuple.js","components/common/Scalar.js","components/bank/RichScalar.js","components/bank/ValueBank.js","actions/temp.js","components/controlPanel/operations/GenericOperation.js","components/controlPanel/CodeCreators.js","components/controlPanel/ControlPanel.js","components/MatrixGUI.js","App.js","index.js"],"names":["OPERATION_BEGIN","OPERATION_SUCCESS","OPERATION_ERROR","UPSERT_MATRIX","RENAME_MATRIX","DELETE_MATRIX","CLEAR_TEMP","Ndarray","numericValues","shape","Object","classCallCheck","this","Tuple","namev","ndarrayv","length","_this","map","e","i","Scalar","value","initialState","OrderedMap","exampleNdarray","upsert","state","name","dataTypeObjectPair","contains","updateIn","set","values","arguments","undefined","action","type","mapKeys","k","newName","remove","result","validOperation","misc","save","dataType","entry","resultVariable","temp","error","combineReducers","operationBegin","command","dataNames","dataTypes","createBody","dataValues","get","serialize","console","log","assign","apply","toConsumableArray","defineProperty","rootEpic","combineEpics","action$","state$","pipe","ofType","mergeMap","ajax","url","method","headers","Content-Type","body","matrices","response","catchError","of","errorMessage","ModalWrapper","props","possibleConstructorReturn","getPrototypeOf","call","modalState","toggleModal","bind","assertThisInitialized","setState","prev","react_default","a","createElement","React","cloneElement","children","onClick","ModalWrapper_Modal","closeModal","title","toggle","Component","Modal","_ref","className","upsertMatrix","renameMatrix","deleteMatrix","variableNameRe","RegExp","InputGrid","create","numRows","initialRows","numCols","initialCols","matrixName","finishedPopulating","edit","ndarray","rows","cols","clone","addRow","addCol","removeRow","removeCol","submit","updateMatrixName","getStartingValue","setFinishedPopulating","validMatrixName","prevState","Math","min","max","objectSpread","r","c","push","concat","j","status","str","match","matchExact","_this2","ret","placeholder","onChange","target","style","paddingTop","Array","keys","key","size","fontSize","defaultValue","ref","element","disabled","connect","dispatch","bindActionCreators","CreateMatrix","common_ModalWrapper","common_InputGrid","BankWrapper","createNew","ResponsiveIcon","hover","hoverOn","hoverOff","icon","cursor","onMouseEnter","onMouseLeave","Matrix","count","fragments","List","numerics","float","round","pow","_props$numerics$shape","slicedToArray","slice","join","math","katex","renderToString","convertStateToLatex","Parser","RichMatrix","common_Matrix","common_ResponsiveIcon","delete","nameMatrixPairs","_ref2","bank_RichMatrix","RichScalar","common_Scalar","MatrixBank","bank_BankWrapper","createMatrix_CreateMatrix","workspaceValues","entrySeq","v","renderHelper","_ref3","_ref4","bank_RichScalar","bank_Tuple","clearTemp","GenericOperation","operate","argv","numDropdowns","codeCreator","showWarning","displayWarning","closeWarning","setResult","keySeq","mostRecentError","helperWrapper","full","_ref2$","invert","invertTypes","transpose","transposeTypes","add","addTypes","subtract","subtractTypes","multiply","multiplyTypes","svd","svdTypes","eigenvectors","eigenvectorsTypes","qr","qrTypes","determinant","determinantTypes","nullspace","nullspaceTypes","ControlPanel","selectTab","selected","operationType","operation","operationSelected","isActive","color","Item","operations_GenericOperation","Creators","MatrixGUI","controlPanel_ControlPanel","ValueBank","App","components_MatrixGUI","logger","createLogger","stateTransformer","newState","_arr","_i","Immutable","Iterable","isIterable","toJS","epicMiddleware","createEpicMiddleware","store","createStore","rootReducer","applyMiddleware","run","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f70ab29c.chunk.js","sourcesContent":["/* Contains definitons of actions */\n\nexport const OPERATION_BEGIN = \"OPERATION_BEGIN\"\nexport const OPERATION_SUCCESS = \"OPERATION_SUCCESS\"\nexport const OPERATION_ERROR = \"OPERATION_ERROR\"\n\nexport const UPSERT_MATRIX = \"UPSERT_MATRIX\"\nexport const RENAME_MATRIX = \"RENAME_MATRIX\"\nexport const DELETE_MATRIX = \"DELETE_MATRIX\"\n\nexport const UPSERT_COMPOSITE = \"UPSERT_COMPOSITE\"\nexport const RENAME_COMPOSITE = \"RENAME_COMPOSITE\"\nexport const DELETE_COMPOSITE = \"DELETE_COMPOSITE\"\n\nexport const UPSERT_SCALAR = \"UPSERT_SCALAR\"\nexport const RENAME_SCALAR = \"RENAME_SCALAR\"\nexport const DELETE_SCALAR = \"DELETE_SCALAR\"\n\nexport const CLEAR_TEMP = \"CLEAR_TEMP\"","export default class Ndarray {\n    constructor(numericValues, shape) {\n        this.numericValues = numericValues;\n        this.shape = shape;\n    }\n\n    rows() {\n        return this.shape[0]\n    }\n\n    cols() {\n        return this.shape[1]\n    }\n\n    serialize() {\n        return { numericValues: this.numericValues, shape: this.shape }\n    }\n}","export default class Tuple {\n    constructor(namev, ndarrayv) {\n        this.namev = namev\n        this.ndarrayv = ndarrayv\n    }\n\n    get size() {\n        return this.namev.length\n    }\n\n    get nameMatrixPairs() {\n        return this.namev.map((e, i) => {\n            return [e, this.ndarrayv[i]];\n        });\n    }\n}","export default class Scalar {\n    constructor(value) {\n        this.value = value\n    }\n\n    serialize() {\n        return this.value\n    }\n}","import { UPSERT_MATRIX, RENAME_MATRIX, DELETE_MATRIX, OPERATION_SUCCESS } from \"../actions/actions\";\nimport { OrderedMap } from \"immutable\"\n\nimport Ndarray from \"util/Ndarray\"\nimport Tuple from \"util/Tuple\"\nimport Scalar from \"util/Scalar\"\n\nconst ndarrayv = [new Ndarray([1, 1, 1, 0], [2, 2]), new Ndarray([1, 1, 1, 4], [2, 2]), new Ndarray([1, 1, 1, 4], [2, 2])]\nconst namev = [\"charmander\", \"bulbasaur\", \"squirtle\"]\n\n// const initialState = new OrderedMap({\n//   exampleScalar: [\"SCALAR\", new Scalar(5)],\n//   exampleNdarray: [\"NDARRAY\", new Ndarray([1, 2, 3, 4], [2, 2])],\n//   exampleTuple: [\"TUPLE\", new Tuple(namev, ndarrayv)]\n// })\n\nconst initialState = new OrderedMap({\n  exampleNdarray: [\"NDARRAY\", new Ndarray([1, 2, 3, 4], [2, 2])],\n})\n\nconst values = (state = initialState, action) => {\n  var dataTypeObjectPair\n  switch (action.type) {\n    case UPSERT_MATRIX:\n      dataTypeObjectPair = [\"NDARRAY\", new Ndarray(action.numericValues, action.shape)]\n      return upsert(state, action.name, dataTypeObjectPair)\n    case RENAME_MATRIX:\n      return state.mapKeys(k => {\n        if (k === action.name) {\n          return action.newName\n        }\n        return k\n      })\n    case DELETE_MATRIX:\n      return state.remove(action.name)\n    case OPERATION_SUCCESS:\n      if (action.result.validOperation && action.misc.save) {\n        switch (action.result.dataType) {\n          case \"NDARRAY\": {\n            dataTypeObjectPair = [\"NDARRAY\", new Ndarray(action.result.result.numericValues, action.result.result.shape)]\n            break\n          }\n          case \"TUPLE\": {\n            dataTypeObjectPair = [\"TUPLE\", new Tuple(action.misc.namev, action.result.result.map(entry =>\n              new Ndarray(entry.numericValues, entry.shape)))]\n            break\n          }\n          case \"SCALAR\": {\n            dataTypeObjectPair = [\"SCALAR\", new Scalar(action.result.result)]\n            break\n          }\n          default:\n            break\n        }\n        return upsert(state, action.resultVariable, dataTypeObjectPair)\n      } else {\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nfunction upsert(state, name, dataTypeObjectPair) {\n  if (state.contains(name)) {\n    return state.updateIn([name], () => dataTypeObjectPair)\n  }\n  return state.set(name, dataTypeObjectPair)\n}\n\nexport default values\n","import { OPERATION_BEGIN, OPERATION_SUCCESS, CLEAR_TEMP } from \"../actions/actions\";\n\nimport Ndarray from \"util/Ndarray\"\nimport Tuple from \"util/Tuple\"\nimport Scalar from \"util/Scalar\"\n\nconst initialState = null\n\nconst temp = (state = initialState, action) => {\n    switch (action.type) {\n        case OPERATION_BEGIN:\n            return null\n        case OPERATION_SUCCESS:\n            if (action.result.validOperation) {\n                var dataTypeObjectPair\n                switch (action.result.dataType) {\n                    case \"NDARRAY\": {\n                        dataTypeObjectPair = [\"NDARRAY\", new Ndarray(action.result.result.numericValues, action.result.result.shape)]\n                        break\n                    }\n                    case \"TUPLE\": {\n                        dataTypeObjectPair = [\"TUPLE\", new Tuple(action.misc.namev, action.result.result.map(entry =>\n                            new Ndarray(entry.numericValues, entry.shape)))]\n                        break\n                    }\n                    case \"SCALAR\": {\n                        dataTypeObjectPair = [\"SCALAR\", new Scalar(action.result.result)]\n                        break\n                    }\n                    default:\n                        break\n                }\n                return [action.resultVariable, dataTypeObjectPair]\n            } else {\n                return state\n            }\n        case CLEAR_TEMP:\n            return null\n        default:\n            return state\n    }\n}\n\nexport default temp","import { OPERATION_BEGIN, OPERATION_SUCCESS } from \"../actions/actions\";\n\nconst initialState = \"\"\n\nconst error = (state = initialState, action) => {\n    switch (action.type) {\n        case OPERATION_BEGIN:\n            return \"\"\n        case OPERATION_SUCCESS:\n            if (!action.result.validOperation) {\n                return action.result.result\n            }\n            return state\n        default:\n            return state\n    }\n}\n\nexport default error","\nimport { combineReducers } from 'redux'\nimport values from './values'\nimport temp from './temp'\nimport error from './error'\n\nexport default combineReducers({\n    values,\n    temp,\n    error\n})\n","import { OPERATION_BEGIN, OPERATION_SUCCESS, OPERATION_ERROR } from \"actions/actions\"\n\nexport function operationBegin(command, dataNames, dataTypes, resultVariable, misc) {\n    return {\n        type: OPERATION_BEGIN,\n        command,\n        dataNames,\n        dataTypes,\n        resultVariable,\n        misc\n    }\n}\n\nexport function operationSuccess(resultVariable, result, misc) {\n    return {\n        type: OPERATION_SUCCESS,\n        resultVariable,\n        result,\n        misc\n    }\n}\n\nexport function operationError(errorMessage) {\n    return {\n        type: OPERATION_ERROR,\n        errorMessage\n    }\n}\n\n\n","import { mergeMap, catchError, map } from 'rxjs/operators';\nimport { ajax } from 'rxjs/ajax'\nimport { of } from 'rxjs';\nimport { ofType } from 'redux-observable'\n\n\nimport { operationError, operationSuccess } from 'actions/operation'\nimport { OPERATION_BEGIN } from 'actions/actions'\n\nexport const operationEpic = (action$, state$) => action$.pipe(\n    ofType(OPERATION_BEGIN),\n    mergeMap(action =>\n        ajax({\n            url: 'https://nzr58np206.execute-api.us-west-2.amazonaws.com/beta-prod/operation',\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: {\n                command: action.command,\n                matrices: createBody(action.dataNames, state$.value.values)\n            }\n        }).pipe(\n            map(response => operationSuccess(action.resultVariable, response.response.body, action.misc)),\n            catchError(error => of(operationError(error)))\n        )\n    )\n)\n\nfunction createBody(dataNames, state) {\n    let dataValues = dataNames.map(name => [state.get(name)[0], state.get(name)[1].serialize()])\n    console.log(Object.assign(...dataNames.map((k, i) => ({ [k]: dataValues[i] }))))\n    return Object.assign(...dataNames.map((k, i) => ({ [k]: dataValues[i] })))\n}\n","import { combineEpics } from 'redux-observable';\nimport { operationEpic } from 'epics/operationEpic'\n\nexport const rootEpic = combineEpics(\n    operationEpic,\n);","import React from 'react';\nimport PropTypes from 'prop-types'\n\nclass ModalWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalState: false\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n  }\n\n  toggleModal() {\n    this.setState((prev, props) => {\n      const newState = !prev.modalState;\n\n      return { modalState: newState };\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          {React.cloneElement(this.props.children[0], { onClick: this.toggleModal })}\n        </div>\n\n        <Modal\n          closeModal={this.toggleModal}\n          modalState={this.state.modalState}\n          title={this.props.children[1]}\n        >\n          {React.cloneElement(this.props.children[2], { toggle: this.toggleModal })}\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst Modal = ({ children, closeModal, modalState, title }) => {\n  if (!modalState) {\n    return null;\n  }\n\n  return (\n    <div className=\"modal is-active\">\n      <div className=\"modal-background\" onClick={closeModal} />\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <p className=\"modal-card-title\">{title}</p>\n          <button className=\"delete\" onClick={closeModal} />\n        </header>\n        <section className=\"modal-card-body\">\n          <div className=\"content\">\n            {children}\n          </div>\n        </section>\n        <footer className=\"modal-card-foot\">\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nModal.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n  modalState: PropTypes.bool.isRequired,\n  title: PropTypes.string\n}\n\nexport default ModalWrapper;","import { UPSERT_MATRIX, RENAME_MATRIX, DELETE_MATRIX } from \"actions/actions\";\n\n\nexport function upsertMatrix(name, shape, numericValues) {\n    return {\n        type: UPSERT_MATRIX,\n        name,\n        shape,\n        numericValues\n    }\n}\n\nexport function renameMatrix(name, newName) {\n    return {\n        type: RENAME_MATRIX,\n        name,\n        newName\n    }\n}\n\nexport function deleteMatrix(name) {\n    return {\n        type: DELETE_MATRIX,\n        name\n    }\n}\n","import React from 'react';\nimport { bindActionCreators } from 'redux'\nimport { connect } from \"react-redux\"\n\nimport { upsertMatrix } from \"actions/matrices\"\nimport { renameMatrix } from \"actions/matrices\"\n\nconst variableNameRe = new RegExp(\"^[a-zA-Z]+[1-9a-zA-Z_]*$\")\n\nfunction matchExact(r, str) {\n    var match = str.match(r);\n    return match != null && str === match[0];\n}\n\nclass InputGrid extends React.Component {\n    constructor(props) {\n        super(props)\n        if (props.create) {\n            this.state = {\n                numRows: props.initialRows,\n                numCols: props.initialCols,\n                matrixName: ''\n            }\n            this.finishedPopulating = true\n        }\n\n        else if (props.edit) {\n            console.log(props.ndarray)\n            this.state = {\n                numRows: props.ndarray.rows(),\n                numCols: props.ndarray.cols(),\n                numericValues: props.ndarray.numericValues,\n                matrixName: props.matrixName\n            }\n            this.finishedPopulating = false\n        }\n\n        else if (props.clone) {\n            this.state = {\n                numRows: props.ndarray.rows(),\n                numCols: props.ndarray.cols(),\n                numericValues: props.ndarray.numericValues,\n                matrixName: props.matrixName + \"_CLONE\"\n            }\n            this.finishedPopulating = false\n        }\n\n        this.addRow = this.addRow.bind(this)\n        this.addCol = this.addCol.bind(this)\n        this.removeRow = this.removeRow.bind(this)\n        this.removeCol = this.removeCol.bind(this)\n        this.submit = this.submit.bind(this)\n        this.updateMatrixName = this.updateMatrixName.bind(this)\n        this.getStartingValue = this.getStartingValue.bind(this)\n        this.setFinishedPopulating = this.setFinishedPopulating.bind(this)\n        this.validMatrixName = this.validMatrixName.bind(this)\n    }\n\n    addRow() {\n        this.setState((prevState) => ({\n            numRows: Math.min(prevState.numRows + 1, 7)\n        }))\n    }\n\n    addCol() {\n        this.setState((prevState) => ({\n            numCols: Math.min(prevState.numCols + 1, 7)\n        }))\n    }\n\n    removeRow() {\n        this.setState((prevState) => ({\n            numRows: Math.max(prevState.numRows - 1, 1)\n        }))\n    }\n\n    removeCol() {\n        this.setState((prevState) => ({\n            numCols: Math.max(prevState.numCols - 1, 1)\n        }))\n    }\n\n    updateMatrixName(newName) {\n        this.setState(\n            { ...this.state, matrixName: newName }\n        )\n    }\n\n    submit() {\n        let numericValues = []\n        for (let r = 0; r < this.state.numRows; r++) {\n            for (let c = 0; c < this.state.numCols; c++) {\n                numericValues.push(this[`textInput${r},${c}`].value)\n            }\n        }\n        if (this.props.edit) {\n            this.props.upsertMatrix(this.props.matrixName, [this.state.numRows, this.state.numCols], numericValues)\n            this.props.renameMatrix(this.props.matrixName, this.state.matrixName)\n        } else {\n            this.props.upsertMatrix(this.state.matrixName, [this.state.numRows, this.state.numCols], numericValues)\n        }\n        this.props.toggle()\n    }\n\n    getStartingValue(i, j) {\n        if (!this.finishedPopulating) {\n            return this.state.numericValues[i * this.state.numCols + j]\n        }\n        return null\n    }\n\n    setFinishedPopulating(status) {\n        this.finishedPopulating = status\n    }\n\n    validMatrixName() {\n        return matchExact(variableNameRe, this.state.matrixName)\n    }\n\n    render() {\n        let ret = (\n            <div className=\"columns\">\n                <div className=\"column\">\n                    <input\n                        className=\"input\"\n                        type=\"text\"\n                        value={this.state.matrixName}\n                        placeholder=\"Matrix Name\"\n                        onChange={(e) => this.updateMatrixName(e.target.value)} />\n                    {!this.validMatrixName() && <p className=\"help is-danger\">Matrix name must be a valid Python variable name</p>}\n                    <div className=\"columns is-mobile\" style={{ paddingTop: \"25px\" }}>\n                        <div className=\"column is-narrow\">\n                            {[...Array(this.state.numRows).keys()].map(i =>\n                                <div key={i}>\n                                    {[...Array(this.state.numCols).keys()].map(j =>\n                                        <input\n                                            type=\"text\"\n                                            size=\"4\"\n                                            style={{ fontSize: \"20px\" }}\n                                            defaultValue={this.getStartingValue(i, j)}\n                                            key={`${i},${j}`}\n                                            ref={element => { this[`textInput${i},${j}`] = element }} />\n                                    )}\n                                    <br />\n                                </div>)}\n                        </div>\n                        <div className=\"column is-one-fifth has-text-left\">\n                            <button className=\"button is-small\" onClick={this.removeRow}>Remove Row</button>\n                            <br />\n                            <button className=\"button is-small\" onClick={this.addRow}>Add Row</button>\n                        </div>\n                    </div>\n\n                    <div className=\"columns\" >\n                        <div className=\"column is-narrow has-text-left\">\n                            <span className=\"button is-small\" onClick={this.removeCol}>Remove Col</span>\n                            <span className=\"button is-small\" onClick={this.addCol}>Add Col</span>\n                            <div style={{ paddingTop: \"20px\" }}>\n                                <button className=\"button\" disabled={!this.validMatrixName()} onClick={this.submit}>Submit</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n        this.setFinishedPopulating(true)\n        return ret\n    }\n}\n\n\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        upsertMatrix,\n        renameMatrix\n    },\n        dispatch)\n}\n\nexport default connect(null, mapDispatchToProps)(InputGrid);\n\n","import React from 'react';\nimport ModalWrapper from 'components/common/ModalWrapper'\nimport InputGrid from 'components/common/InputGrid'\n\nclass CreateMatrix extends React.Component {\n  render() {\n    return (\n      <ModalWrapper>\n        <button className=\"button is-primary\">\n          Create New Matrix\n        </button>\n        Create New Matrix\n        <InputGrid initialRows={2} initialCols={2} create />\n        <button className=\"button is-primary\">\n          Submit\n        </button>\n      </ModalWrapper>\n    )\n  }\n}\n\nexport default CreateMatrix;","import React, { Component } from 'react';\n\nclass BankWrapper extends Component {\n\n    render() {\n        return (\n            <div>\n                <nav className=\"level\">\n                    <div className=\"level-left\">\n                        <div className=\"level-item\">\n                            <h2 className=\"subtitle is-3\">{this.props.title} </h2>\n                        </div>\n                        <div className=\"level-item\">\n                            {this.props.createNew}\n                        </div>\n                    </div>\n                </nav>\n                <div className=\"box\">\n                    <div className=\"columns is-multiline\">\n                        {this.props.children}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default BankWrapper\n","import React from 'react';\n\nclass ResponsiveIcon extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            hover: false\n        }\n        this.hoverOn = this.hoverOn.bind(this)\n        this.hoverOff = this.hoverOff.bind(this)\n    }\n\n    hoverOn() {\n        this.setState({ hover: true });\n    }\n\n    hoverOff() {\n        this.setState({ hover: false });\n    }\n\n    render() {\n        return (\n            <i className={this.state.hover ? \"fas \" + this.props.icon : \"far \" + this.props.icon}\n                style={{ cursor: \"pointer\" }}\n                onMouseEnter={this.hoverOn}\n                onMouseLeave={this.hoverOff}\n                onClick={this.props.onClick}\n                title={this.props.title}\n            ></i>\n        )\n    }\n}\n\nexport default ResponsiveIcon;\n\n","import React from 'react';\nimport { List } from 'immutable';\nimport katex from 'katex';\nimport Parser from 'html-react-parser';\n\nconst START = \"\\\\begin{pmatrix}\"\nconst END = \"\\\\end{pmatrix}\"\n\nclass Matrix extends React.Component {\n    convertStateToLatex(props) {\n        let fragments = new List()\n        var numericValues = props.numerics.numericValues.map(float => Math.round(float * Math.pow(10, 4)) / Math.pow(10, 4))\n        var rows, cols\n        [rows, cols] = props.numerics.shape\n        var count\n        for (count = 0; count < rows; count++) {\n            fragments = fragments\n                .push(numericValues\n                    .slice(count * cols, (count + 1) * cols)\n                    .join(' & '))\n        }\n        return START + fragments.join(' \\\\\\\\ ') + END\n    }\n\n    render() {\n        let math = katex.renderToString(this.convertStateToLatex(this.props));\n        return (\n            <div>{Parser(math)}</div>\n        )\n    }\n}\n\nexport default Matrix;","import React from 'react';\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from 'redux'\nimport { deleteMatrix } from \"actions/matrices\"\n\nimport ModalWrapper from \"components/common/ModalWrapper\"\nimport InputGrid from \"components/common/InputGrid\"\nimport ResponsiveIcon from \"components/common/ResponsiveIcon\"\nimport Matrix from \"components/common/Matrix\"\n\nclass RichMatrix extends React.Component {\n    render() {\n        return (\n            <div className=\"box has-text-centered\">\n                <Matrix numerics={this.props.numerics} />\n                {this.props.name}\n                <br />\n                {this.props.edit && <span className=\"icon has-text-info\" >\n                    <ModalWrapper>\n                        <ResponsiveIcon icon=\"fa-edit\" title=\"Edit the matrix in place\" />\n                        {`edit ${this.props.name}`}\n                        <InputGrid ndarray={this.props.numerics} matrixName={this.props.name} edit />\n                    </ModalWrapper>\n                </span>}\n                {this.props.clone && <span className=\"icon has-text-info\" >\n                    <ModalWrapper>\n                        <ResponsiveIcon icon=\"fa-clone\" title=\"Create a duplicate of this matrix\" />\n                        {`clone ${this.props.matrixName}`}\n                        <InputGrid ndarray={this.props.numerics} matrixName={this.props.name} clone />\n                    </ModalWrapper>\n                </span>}\n                {this.props.delete && <span className=\"icon has-text-info\" >\n                    <ResponsiveIcon icon=\"fa-trash-alt\" onClick={() => this.props.deleteMatrix(this.props.name)} title=\"Delete this matrix\" />\n                </span>}\n            </div>\n        )\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        deleteMatrix\n    },\n        dispatch)\n}\n\nexport default connect(null, mapDispatchToProps)(RichMatrix);\n","import React from 'react';\nimport RichMatrix from \"components/bank/RichMatrix\"\n\nclass Tuple extends React.Component {\n    render() {\n        return (\n            <div className=\"box has-text-centered\">\n                <div className=\"columns is-multiline\">\n                    {this.props.numerics.nameMatrixPairs.map(([name, ndarray]) =>\n                        <div className=\"column\" key={name}>\n                            <RichMatrix numerics={ndarray} name={name} clone />\n                        </div>\n                    )}\n                </div>\n                <p>{this.props.name}</p>\n            </div>\n        )\n    }\n}\n\nexport default Tuple\n","import React from 'react';\n\nclass Scalar extends React.Component {\n    render() {\n        return (\n            <div>\n                <b>{Math.round(this.props.numerics.value * Math.pow(10, 4)) / Math.pow(10, 4)}</b>\n            </div>\n        )\n    }\n}\n\nexport default Scalar\n\n","import React from 'react';\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from 'redux'\nimport { deleteMatrix } from \"actions/matrices\"\n\nimport ModalWrapper from \"components/common/ModalWrapper\"\nimport InputGrid from \"components/common/InputGrid\"\nimport ResponsiveIcon from \"components/common/ResponsiveIcon\"\nimport Scalar from \"components/common/Scalar\"\n\nclass RichScalar extends React.Component {\n    render() {\n        return (\n            <div className=\"box has-text-centered\">\n                <Scalar numerics={this.props.numerics} />\n                {this.props.name}\n            </div>\n        )\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        deleteMatrix\n    },\n        dispatch)\n}\n\nexport default connect(null, mapDispatchToProps)(RichScalar);\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\"\n\nimport CreateMatrix from \"components/createMatrix/CreateMatrix\"\nimport BankWrapper from \"components/bank/BankWrapper\"\n\nimport RichMatrix from \"components/bank/RichMatrix\"\nimport Tuple from \"components/bank/Tuple\"\nimport RichScalar from \"components/bank/RichScalar\"\n\n\nclass MatrixBank extends Component {\n  render() {\n    return (\n      <BankWrapper title=\"Workspace\" createNew={<CreateMatrix />}>\n        {this.props.workspaceValues.entrySeq().map(([k, v]) =>\n          <div className=\"column is-narrow is-mobile\" key={k}>\n            {renderHelper(k, v)}\n          </div>\n        )}\n      </BankWrapper>\n    );\n  }\n}\n\nconst renderHelper = (name, [type, numerics]) => {\n  switch (type) {\n    case \"SCALAR\":\n      return (<RichScalar name={name} numerics={numerics} />)\n    case \"NDARRAY\":\n      return (<RichMatrix name={name} numerics={numerics} edit clone delete />)\n    case \"TUPLE\":\n      return (<Tuple name={name} numerics={numerics} />)\n    default:\n      return null\n  }\n}\n\nfunction mapMatricesToProps(state) {\n  return {\n    workspaceValues: state.values\n  }\n}\n\nexport default connect(mapMatricesToProps)(MatrixBank);\n","import { CLEAR_TEMP } from \"actions/actions\"\n\nexport function clearTemp() {\n    return {\n        type: CLEAR_TEMP\n    }\n}","import React from 'react';\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from 'redux'\n\nimport { operationBegin } from \"actions/operation\"\nimport { Button } from \"react-bulma-components/full\"\n\nimport Scalar from \"components/common/Scalar\"\nimport Matrix from \"components/common/Matrix\"\nimport Tuple from \"components/bank/Tuple\"\n\nconst variableNameRe = new RegExp(\"^[a-zA-Z]+[1-9a-zA-Z_]*$\")\n\nconst placeholder = \"--Select Matrix--\"\n\nfunction matchExact(r, str) {\n    var match = str.match(r);\n    return match != null && str === match[0];\n}\n\nclass GenericOperation extends React.Component {\n    constructor(props) {\n        super(props)\n        this.operate = this.operate.bind(this)\n        this.showWarning = this.showWarning.bind(this)\n        this.closeWarning = this.closeWarning.bind(this)\n        this.validMatrixName = this.validMatrixName.bind(this)\n        this.setResult = this.setResult.bind(this)\n        this.state = { resultVariable: \"\", displayWarning: false }\n    }\n    operate = () => {\n        console.log(this.props)\n        let argv = [...Array(this.props.numDropdowns).keys()].map(i => this[`dropdown${i}`].value)\n        this.props.operationBegin(\n            this.props.codeCreator(argv),\n            argv,\n            this.props.dataTypes,\n            this.resultVariable,\n            { ...this.props.misc, save: this.state.resultVariable }\n        )\n        this.showWarning()\n    }\n\n    showWarning = () => {\n        this.setState({ displayWarning: true })\n    }\n\n    closeWarning = () => {\n        this.setState({ displayWarning: false })\n    }\n\n    validMatrixName() {\n        if (this.state.resultVariable === \"\") {\n            return true\n        }\n        return matchExact(variableNameRe, this.state.resultVariable)\n    }\n\n    setResult(resultVariable) {\n        this.setState({ resultVariable: resultVariable })\n    }\n\n    render() {\n        return (\n            <div className=\"box\">\n                <div className=\"level\">\n                    <div className=\"level-left\">\n                        {[...Array(this.props.numDropdowns).keys()].map(i =>\n                            <div className=\"level-item\" key={i}>\n                                <div className=\"select\">\n                                    <select defaultValue=\"\" ref={element => { this[`dropdown${i}`] = element }}>\n                                        <option value=\"\" disabled>{placeholder}</option>\n                                        {this.props.workspaceValues.keySeq().map(k =>\n                                            <option value={k} key={k}>{k}</option>\n                                        )}\n                                    </select>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n\n                    <div className=\"level-right\">\n                        <div className=\"level-item\">\n                            <div>\n                                <input\n                                    className=\"input\"\n                                    type=\"text\"\n                                    placeholder=\"Save Result As\"\n                                    value={this.state.resultVariable}\n                                    onChange={e => this.setResult(e.target.value)}\n                                />\n                                {!this.validMatrixName() && <p className=\"help is-danger\">Result name must be a valid Python variable name</p>}\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n                <br />\n                <div className=\"level\">\n                    <div className=\"level-left\">\n                        {this.state.displayWarning && this.props.mostRecentError && <div className=\"notification is-warning\">\n                            <button className=\"delete\" onClick={this.closeWarning}></button>\n                            <p><b>Numpy Error: </b>{this.props.mostRecentError}</p>\n                        </div>}\n                        {helperWrapper(this.props.temp)}\n                    </div>\n                    <div className=\"level-right\">\n                        <div className=\"level-item\">\n                            <Button onClick={this.operate}>Operate</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst helperWrapper = (temp) => {\n    if (temp) {\n        return (\n            <div className=\"column has-text-centered\">\n                <h2 className=\"subtitle is-3\">Result:</h2>\n                {temp && renderHelper(temp)}\n            </div>\n        )\n    }\n    return null\n}\n\nconst renderHelper = ([name, [type, numerics]]) => {\n    switch (type) {\n        case \"SCALAR\":\n            return (<Scalar name={name} numerics={numerics} />)\n        case \"NDARRAY\":\n            return (<Matrix name={name} numerics={numerics} edit clone delete />)\n        case \"TUPLE\":\n            return (<Tuple name={name} numerics={numerics} />)\n        default:\n            return null\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        workspaceValues: state.values,\n        temp: state.temp,\n        mostRecentError: state.error\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        operationBegin\n    },\n        dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GenericOperation);","export function invert(argv) {\n    return `np.linalg.inv(${argv[0]})`\n}\nexport const invertTypes = [\"NDARRAY\"]\n\nexport function transpose(argv) {\n    return `np.transpose(${argv[0]})`\n}\nexport const transposeTypes = [\"NDARRAY\"]\n\nexport function add(argv) {\n    return `np.add(${argv[0]}, ${argv[1]})`\n}\nexport const addTypes = [\"NDARRAY\", \"NDARRAY\"]\n\nexport function subtract(argv) {\n    return `np.subtract(${argv[0]}, ${argv[1]})`\n}\nexport const subtractTypes = [\"NDARRAY\", \"NDARRAY\"]\n\nexport function multiply(argv) {\n    return `np.dot(${argv[0]}, ${argv[1]})`\n}\nexport const multiplyTypes = [\"NDARRAY\", \"NDARRAY\"]\n\nexport function svd(argv) {\n    return `np.linalg.svd(${argv[0]}, full_matrices=False)`\n}\nexport const svdTypes = [\"NDARRAY\"]\n\nexport function eigenvectors(argv) {\n    return `np.linalg.eig(${argv[0]})`\n}\nexport const eigenvectorsTypes = [\"NDARRAY\"]\n\nexport function qr(argv) {\n    return `np.linalg.qr(${argv[0]})`\n}\nexport const qrTypes = [\"NDARRAY\"]\n\nexport function determinant(argv) {\n    return `np.linalg.det(${argv[0]})`\n}\nexport const determinantTypes = [\"NDARRAY\"]\n\nexport function nullspace(argv) {\n    return `sp.linalg.null_space(${argv[0]})`\n}\nexport const nullspaceTypes = [\"NDARRAY\"]\n","import React, { Component } from 'react';\n\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from 'redux'\nimport { Dropdown } from \"react-bulma-components/full\"\n\nimport { clearTemp } from \"actions/temp\"\nimport GenericOperation from \"components/controlPanel/operations/GenericOperation\"\nimport * as Creators from \"components/controlPanel/CodeCreators\"\n\nclass ControlPanel extends Component {\n  constructor(props) {\n    super(props)\n    this.isActive = this.isActive.bind(this)\n    this.selectTab = this.selectTab.bind(this)\n    this.operationSelected = this.operationSelected.bind(this)\n    this.state = { operationType: \"Arithmetic\", operation: \"\" }\n  }\n\n  selectTab = selected => {\n    this.props.clearTemp()\n    this.setState({ operationType: selected, operation: \"\" });\n\n  };\n\n  operationSelected = selected => {\n    this.props.clearTemp()\n    this.setState({ operation: selected })\n  }\n\n  isActive = operationType => {\n    if (this.state.operationType === operationType) {\n      return \"is-active\"\n    }\n    return \"\"\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"tabs\">\n          <ul>\n            <li className={this.isActive(\"Arithmetic\")}>\n              <a onClick={() => this.selectTab(\"Arithmetic\")}>Arithmetic</a>\n            </li>\n            <li className={this.isActive(\"Decompositions\")}>\n              <a onClick={() => this.selectTab(\"Decompositions\")}>Decompositions</a>\n            </li>\n            {/* <li className={this.isActive(\"Misc\")}>\n              <a onClick={() => this.selectTab(\"Misc\")}>Misc.</a>\n            </li> */}\n          </ul>\n        </div>\n        {this.state.operationType === \"Arithmetic\" && <div className=\"box\">\n          <Dropdown value={this.state.operation} onChange={this.operationSelected} color=\"info\">\n            <Dropdown.Item value=\"\">--Select Arithmetic Operation--</Dropdown.Item>\n            <Dropdown.Item value=\"invert\">Invert</Dropdown.Item>\n            <Dropdown.Item value=\"transpose\">Transpose</Dropdown.Item>\n            <Dropdown.Item value=\"add\">Add</Dropdown.Item>\n            <Dropdown.Item value=\"subtract\">Subtract</Dropdown.Item>\n            <Dropdown.Item value=\"multiply\">Multiply</Dropdown.Item>\n            <Dropdown.Item value=\"determinant\">Determinant</Dropdown.Item>\n          </Dropdown>\n          <hr />\n          {this.state.operation === \"invert\" && <GenericOperation numDropdowns={1} codeCreator={Creators.invert} dataTypes={Creators.invertTypes} />}\n          {this.state.operation === \"transpose\" && <GenericOperation numDropdowns={1} codeCreator={Creators.transpose} dataTypes={Creators.transposeTypes} />}\n          {this.state.operation === \"add\" && <GenericOperation numDropdowns={2} codeCreator={Creators.add} dataTypes={Creators.addTypes} />}\n          {this.state.operation === \"subtract\" && <GenericOperation numDropdowns={2} codeCreator={Creators.subtract} dataTypes={Creators.subtractTypes} />}\n          {this.state.operation === \"multiply\" && <GenericOperation numDropdowns={2} codeCreator={Creators.multiply} dataTypes={Creators.multiplyTypes} />}\n          {this.state.operation === \"determinant\" && <GenericOperation numDropdowns={1} codeCreator={Creators.determinant} dataTypes={Creators.determinantTypes} />}\n        </div>}\n        {this.state.operationType === \"Decompositions\" && <div className=\"box\">\n          <Dropdown value={this.state.operation} onChange={this.operationSelected} color=\"info\">\n            <Dropdown.Item value=\"\">--Select Decomposition--</Dropdown.Item>\n            <Dropdown.Item value=\"svd\">SVD</Dropdown.Item>\n            <Dropdown.Item value=\"eigenvectors\">Eigenvectors/values</Dropdown.Item>\n            <Dropdown.Item value=\"qr\">QR</Dropdown.Item>\n          </Dropdown>\n          <hr />\n          {this.state.operation === \"svd\" && <GenericOperation numDropdowns={1} codeCreator={Creators.svd} dataTypes={Creators.svdTypes} misc={{ \"namev\": [\"U\", \"Σ\", \"V\"] }} />}\n          {this.state.operation === \"eigenvectors\" && <GenericOperation numDropdowns={1} codeCreator={Creators.eigenvectors} dataTypes={Creators.eigenvectorsTypes} misc={{ \"namev\": [\"eigenvalues\", \"eigenvectors\"] }} />}\n          {this.state.operation === \"qr\" && <GenericOperation numDropdowns={1} codeCreator={Creators.qr} dataTypes={Creators.qrTypes} misc={{ \"namev\": [\"Q\", \"R\"] }} />}\n        </div>}\n        {this.state.operationType === \"Misc\" && <div className=\"box\">\n          <Dropdown value={this.state.operation} onChange={this.operationSelected} color=\"info\">\n            <Dropdown.Item value=\"\">--Select Operation--</Dropdown.Item>\n            <Dropdown.Item value=\"nullspace\">NullSpace</Dropdown.Item>\n          </Dropdown>\n          <hr />\n          {this.state.operation === \"nullspace\" && <GenericOperation numDropdowns={1} codeCreator={Creators.nullspace} dataTypes={Creators.nullspaceTypes} misc={{ \"namev\": [\"U\", \"Σ\", \"V\"] }} />}\n        </div>}\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    clearTemp\n  },\n    dispatch)\n}\n\nexport default connect(null, mapDispatchToProps)(ControlPanel)","import React, { Component } from 'react';\n\nimport ValueBank from \"components/bank/ValueBank\"\nimport ControlPanel from \"components/controlPanel/ControlPanel\"\n\nclass MatrixGUI extends Component {\n\n  render() {\n    return (\n      <div className=\"container\">\n        <section className=\"section\">\n          <ControlPanel />\n        </section>\n        <section className=\"section\">\n          <ValueBank />\n        </section>,\n      </div>\n    );\n  }\n}\n\nexport default MatrixGUI;\n","import React, { Component } from 'react';\n\nimport MatrixGUI from \"components/MatrixGUI\"\n// import Navbar from \"components/navbar/Navbar\"\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div>\n        {/* <Navbar /> */}\n        <MatrixGUI />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import 'bulma/css/bulma.css'\n\nimport React from 'react';\nimport { render } from 'react-dom'\n\nimport { applyMiddleware, createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from 'reducers'\n\nimport { createEpicMiddleware } from 'redux-observable';\nimport { rootEpic } from 'epics'\n\nimport { createLogger } from 'redux-logger'\nimport Immutable from 'immutable'\nimport 'rxjs';\n\nimport App from 'App';\n\nconst logger = createLogger({\n  stateTransformer: (state) => {\n    let newState = {};\n\n    for (var i of Object.keys(state)) {\n      if (Immutable.Iterable.isIterable(state[i])) {\n        newState[i] = state[i].toJS();\n      } else {\n        newState[i] = state[i];\n      }\n    };\n\n    return newState;\n  }\n});\n\nconst epicMiddleware = createEpicMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(epicMiddleware, logger)\n)\n\nepicMiddleware.run(rootEpic);\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}