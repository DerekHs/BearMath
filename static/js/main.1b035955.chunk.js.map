{"version":3,"sources":["actions/actions.js","reducers/matrices.js","reducers/generatedCode.js","reducers/index.js","actions/multiply.js","actions/matrices.js","epics/multiplyEpic.js","epics/index.js","components/common/Matrix.js","components/common/ModalWrapper.js","components/common/InputGrid.js","components/common/ResponsiveIcon.js","components/matricesBank/RichMatrix.js","components/matricesBank/MatricesBank.js","components/createMatrix/CreateMatrix.js","components/controlPanel/operations/Multiply.js","components/controlPanel/operations/Invert.js","components/controlPanel/ControlPanel.js","components/generatedCode/GeneratedCode.js","components/MatrixGUI.js","components/navbar/Navbar.js","App.js","index.js"],"names":["MULTIPLY_BEGIN","MULTIPLY_ERROR","UPSERT_MATRIX","RENAME_MATRIX","DELETE_MATRIX","initialState","OrderedMap","fibonacci_q","Map","shape","List","numericValues","first_fibonacci","matrices","state","arguments","length","undefined","action","type","contains","name","updateIn","set","mapKeys","k","newName","remove","generatedCode","push","concat","toJS","map","x","combineReducers","multiplyBegin","m1","m2","resultVariable","upsertMatrix","renameMatrix","deleteMatrix","rootEpic","combineEpics","action$","state$","pipe","ofType","mergeMap","ajax","url","method","headers","Content-Type","body","matrix_1","value","get","data","matrix_2","response","JSON","parse","catchError","error","of","errorMessage","Matrix","props","rows","cols","count","fragments","_props$data$get","_props$data$get2","Object","slicedToArray","slice","join","math","katex","renderToString","this","convertStateToLatex","react_default","a","createElement","Parser","Component","ModalWrapper","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","modalState","toggleModal","bind","assertThisInitialized","setState","prev","React","cloneElement","children","onClick","ModalWrapper_Modal","closeModal","title","toggle","Modal","_ref","className","InputGrid","finishedPopulating","create","numRows","initialRows","numCols","initialCols","matrixName","edit","clone","today","Date","timestamp","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","addRow","addCol","removeRow","removeCol","submit","updateMatrixName","getStartingValue","setFinishedPopulating","prevState","Math","min","max","objectSpread","r","c","i","j","size","status","_this2","ret","placeholder","onChange","e","target","style","paddingTop","toConsumableArray","Array","keys","key","disabled","fontSize","defaultValue","ref","input","connect","dispatch","bindActionCreators","ResponsiveIcon","hover","hoverOn","hoverOff","icon","cursor","onMouseEnter","onMouseLeave","RichMatrix","common_Matrix","common_ModalWrapper","common_ResponsiveIcon","common_InputGrid","MatricesBank","entrySeq","_ref2","v","matricesBank_RichMatrix","CreateMatrix","Multiply","onChange_1","selected","onChange_2","updateResultVariable","multiply","onChange1","onChange2","full","Side","align","Item","keySeq","Invert","matrixSelected","console","log","matrix","ControlPanel","color","Divider","operations_Multiply","operations_Invert","GeneratedCode","react_textarea_autosize_esm_browser","readOnly","MatrixGUI","createMatrix_CreateMatrix","matricesBank_MatricesBank","controlPanel_ControlPanel","generatedCode_GeneratedCode","Navbar","role","aria-label","id","App","navbar_Navbar","components_MatrixGUI","logger","createLogger","stateTransformer","newState","_arr","_i","Immutable","Iterable","isIterable","epicMiddleware","createEpicMiddleware","store","createStore","rootReducer","applyMiddleware","run","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1b035955.chunk.js","sourcesContent":["/* Contains definitons of actions */\n\nexport const MULTIPLY_BEGIN = \"MULTIPLY_BEGIN\"\nexport const MULTIPLY_SUCCESS = \"MULTIPLY_SUCCESS\"\nexport const MULTIPLY_ERROR = \"MULTIPLY_ERROR\"\n\nexport const UPSERT_MATRIX = \"UPSERT_MATRIX\"\nexport const RENAME_MATRIX = \"RENAME_MATRIX\"\nexport const DELETE_MATRIX = \"DELETE_MATRIX\"\n\nexport const APPEND_LINE = \"APPEND_LINE\"","import { UPSERT_MATRIX, RENAME_MATRIX, DELETE_MATRIX } from \"../actions/actions\";\nimport { OrderedMap, Map, List } from \"immutable\"\n\nconst initialState = new OrderedMap({\n  \"fibonacci_q\": new Map({ shape: new List([2, 2]), numericValues: new List([1, 1, 1, 0]) }),\n  \"first_fibonacci\": new Map({ shape: new List([2, 1]), numericValues: new List([1, 1]) })\n})\n\nconst matrices = (state = initialState, action) => {\n  switch (action.type) {\n    case UPSERT_MATRIX:\n      if (state.contains(action.name)) {\n        return state.updateIn([action.name], () => new Map({ shape: action.shape, numericValues: action.numericValues }))\n      }\n      return state.set(action.name, new Map({ shape: action.shape, numericValues: action.numericValues }))\n    case RENAME_MATRIX:\n      return state.mapKeys(k => {\n        if (k === action.name) {\n          return action.newName\n        }\n        return k\n      })\n    case DELETE_MATRIX:\n      return state.remove(action.name)\n    default:\n      return state\n  }\n}\n\nexport default matrices\n","import { UPSERT_MATRIX, RENAME_MATRIX, DELETE_MATRIX } from \"../actions/actions\";\nimport { List, toJS } from \"immutable\"\n\nconst initialState = new List([\"import numpy as np\"])\n\nconst generatedCode = (state = initialState, action) => {\n    switch (action.type) {\n        case UPSERT_MATRIX:\n            return state.push(`${action.name} = np.ndarray(shape=[${action.shape.toJS()}], buffer=np.array([${action.numericValues.map(x => x + '.').toJS()}]), dtype=float)`)\n        case RENAME_MATRIX:\n            return state.push(\"renamed\")\n        case DELETE_MATRIX:\n            return state.push(\"deleted\")\n        default:\n            return state\n    }\n}\n\nexport default generatedCode\n","\nimport { combineReducers } from 'redux'\nimport matrices from './matrices'\nimport generatedCode from './generatedCode'\n\nexport default combineReducers({\n    matrices,\n    generatedCode\n})\n","import { MULTIPLY_BEGIN, MULTIPLY_SUCCESS, MULTIPLY_ERROR } from \"actions/actions\"\n\nexport function multiplyBegin(m1, m2, resultVariable) {\n    return {\n        type: MULTIPLY_BEGIN,\n        m1,\n        m2,\n        resultVariable\n    }\n}\n\nexport function multiplySuccess(result) {\n    console.log(result + \" yay, request succeeded\")\n    return {\n        type: MULTIPLY_SUCCESS,\n        result\n    }\n}\n\nexport function multiplyError(errorMessage) {\n    return {\n        type: MULTIPLY_ERROR,\n        errorMessage\n    }\n}\n\n\n","import { UPSERT_MATRIX, RENAME_MATRIX, DELETE_MATRIX } from \"actions/actions\";\n\n\nexport function upsertMatrix(name, shape, numericValues) {\n    return {\n        type: UPSERT_MATRIX,\n        name,\n        shape,\n        numericValues\n    }\n}\n\nexport function renameMatrix(name, newName) {\n    return {\n        type: RENAME_MATRIX,\n        name,\n        newName\n    }\n}\n\nexport function deleteMatrix(name) {\n    return {\n        type: DELETE_MATRIX,\n        name\n    }\n}\n","import { mergeMap, catchError, map } from 'rxjs/operators';\nimport { ajax } from 'rxjs/ajax'\nimport { of } from 'rxjs';\nimport { ofType } from 'redux-observable'\n\n\nimport { multiplySuccess, multiplyError } from 'actions/multiply'\nimport { upsertMatrix } from 'actions/matrices'\nimport { MULTIPLY_BEGIN } from 'actions/actions'\n\nimport { List } from 'immutable'\n\nexport const multiplyEpic = (action$, state$) => action$.pipe(\n    ofType(MULTIPLY_BEGIN),\n    mergeMap(action =>\n        ajax({\n            url: 'https://nzr58np206.execute-api.us-west-2.amazonaws.com/beta-prod/operations/multiply',\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: {\n                matrix_1: {\n                    shape: state$.value.matrices.get(action.m1).get(\"shape\").toJS(),\n                    data: state$.value.matrices.get(action.m1).get(\"numericValues\").toJS()\n                },\n                matrix_2: {\n                    shape: state$.value.matrices.get(action.m2).get(\"shape\").toJS(),\n                    data: state$.value.matrices.get(action.m2).get(\"numericValues\").toJS()\n                }\n            }\n        }).pipe(\n            map(response => upsertMatrix(action.resultVariable, new List(JSON.parse(response.response.body).shape), new List(JSON.parse(response.response.body).data))),\n            catchError(error => of(multiplyError(error)))\n        )\n    )\n)\n","import { combineEpics } from 'redux-observable';\nimport { multiplyEpic } from 'epics/multiplyEpic'\n\nexport const rootEpic = combineEpics(\n    multiplyEpic,\n);","import React, { Component } from 'react';\nimport { List } from 'immutable';\nimport katex from 'katex';\nimport Parser from 'html-react-parser';\n\nconst START = \"\\\\begin{pmatrix}\"\nconst END = \"\\\\end{pmatrix}\"\n\nclass Matrix extends Component {\n    convertStateToLatex(props) {\n        let fragments = new List()\n        var numericValues = props.data.get('numericValues')\n        var rows, cols\n        [rows, cols] = props.data.get('shape')\n        var count\n        for (count = 0; count < rows; count++) {\n            fragments = fragments\n                .push(numericValues\n                    .slice(count * cols, (count + 1) * cols)\n                    .join(' & '))\n        }\n        return START + fragments.join(' \\\\\\\\ ') + END\n    }\n\n    render() {\n        let math = katex.renderToString(this.convertStateToLatex(this.props));\n        return (\n            <div>{Parser(math)}</div>\n        )\n    }\n}\n\nexport default Matrix;","import React from 'react';\nimport PropTypes from 'prop-types'\n\nclass ModalWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalState: false\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n  }\n\n  toggleModal() {\n    this.setState((prev, props) => {\n      const newState = !prev.modalState;\n\n      return { modalState: newState };\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          {React.cloneElement(this.props.children[0], { onClick: this.toggleModal })}\n        </div>\n\n        <Modal\n          closeModal={this.toggleModal}\n          modalState={this.state.modalState}\n          title={this.props.children[1]}\n        >\n          {React.cloneElement(this.props.children[2], { toggle: this.toggleModal })}\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst Modal = ({ children, closeModal, modalState, title }) => {\n  if (!modalState) {\n    return null;\n  }\n\n  return (\n    <div className=\"modal is-active\">\n      <div className=\"modal-background\" onClick={closeModal} />\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <p className=\"modal-card-title\">{title}</p>\n          <button className=\"delete\" onClick={closeModal} />\n        </header>\n        <section className=\"modal-card-body\">\n          <div className=\"content\">\n            {children}\n          </div>\n        </section>\n        <footer className=\"modal-card-foot\">\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nModal.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n  modalState: PropTypes.bool.isRequired,\n  title: PropTypes.string\n}\n\nexport default ModalWrapper;","import React from 'react';\nimport { bindActionCreators } from 'redux'\nimport { connect } from \"react-redux\"\nimport { List } from 'immutable';\n\nimport { upsertMatrix } from \"actions/matrices\"\nimport { renameMatrix } from \"actions/matrices\"\n\nclass InputGrid extends React.Component {\n    constructor(props) {\n        super(props)\n        this.finishedPopulating = false\n        if (props.create) {\n            this.state = {\n                numRows: props.initialRows,\n                numCols: props.initialCols,\n                matrixName: ''\n            }\n        }\n\n        else if (props.edit) {\n            this.state = {\n                numRows: props.data.get('shape').get(0),\n                numCols: props.data.get('shape').get(1),\n                numericValues: props.data.get('numericValues'),\n                matrixName: props.matrixName\n            }\n        }\n\n        else if (props.clone) {\n            var today = new Date();\n            var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n            var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n            var timestamp = date + ' ' + time\n            this.state = {\n                numRows: props.data.get('shape').get(0),\n                numCols: props.data.get('shape').get(1),\n                numericValues: props.data.get('numericValues'),\n                matrixName: props.matrixName + ' __CLONED_AT__' + timestamp\n            }\n        }\n\n        this.addRow = this.addRow.bind(this)\n        this.addCol = this.addCol.bind(this)\n        this.removeRow = this.removeRow.bind(this)\n        this.removeCol = this.removeCol.bind(this)\n        this.submit = this.submit.bind(this)\n        this.updateMatrixName = this.updateMatrixName.bind(this)\n        this.getStartingValue = this.getStartingValue.bind(this)\n        this.setFinishedPopulating = this.setFinishedPopulating.bind(this)\n    }\n\n    addRow() {\n        this.setState((prevState) => ({\n            numRows: Math.min(prevState.numRows + 1, 7)\n        }))\n    }\n\n    addCol() {\n        this.setState((prevState) => ({\n            numCols: Math.min(prevState.numCols + 1, 7)\n        }))\n    }\n\n    removeRow() {\n        this.setState((prevState) => ({\n            numRows: Math.max(prevState.numRows - 1, 1)\n        }))\n    }\n\n    removeCol() {\n        this.setState((prevState) => ({\n            numCols: Math.max(prevState.numCols - 1, 1)\n        }))\n    }\n\n    updateMatrixName(newName) {\n        this.setState(\n            { ...this.state, matrixName: newName }\n        )\n    }\n\n    submit() {\n        let numericValues = new List()\n        for (let r = 0; r < this.state.numRows; r++) {\n            for (let c = 0; c < this.state.numCols; c++) {\n                numericValues = numericValues.push(this[`textInput${r},${c}`].value)\n            }\n        }\n        if (this.props.edit) {\n            this.props.upsertMatrix(this.props.matrixName, new List([this.state.numRows, this.state.numCols]), numericValues)\n            this.props.renameMatrix(this.props.matrixName, this.state.matrixName)\n        } else {\n            this.props.upsertMatrix(this.state.matrixName, new List([this.state.numRows, this.state.numCols]), numericValues)\n            this.props.toggle()\n        }\n    }\n\n    getStartingValue(i, j) {\n        if (this.state.numericValues &&\n            i * this.state.numCols + j < this.state.numericValues.size &&\n            !this.finishedPopulating) {\n            return this.state.numericValues.get(i * this.state.numCols + j)\n        }\n        return 0\n    }\n\n    setFinishedPopulating(status) {\n        this.finishedPopulating = status\n    }\n\n    render() {\n        let ret = (\n            <div className=\"columns\">\n                <div className=\"column\">\n                    <input\n                        className=\"input\"\n                        type=\"text\"\n                        value={this.state.matrixName}\n                        placeholder=\"Matrix Name\"\n                        onChange={(e) => this.updateMatrixName(e.target.value)} />\n                    <div className=\"columns\" style={{ paddingTop: \"25px\" }}>\n                        <div className=\"column is-narrow\">\n                            {[...Array(this.state.numRows).keys()].map(i =>\n                                <div key={i}>\n                                    {[...Array(this.state.numCols).keys()].map(j =>\n                                        <input\n                                            type=\"text\"\n                                            disabled={this.props.clone}\n                                            size=\"4\"\n                                            style={{ fontSize: \"20px\" }}\n                                            defaultValue={this.getStartingValue(i, j)}\n                                            key={`${i},${j}`}\n                                            ref={input => { this[`textInput${i},${j}`] = input }} />\n                                    )}\n                                    <br />\n                                </div>)}\n                        </div>\n                        <div className=\"column is-one-fifth has-text-left\">\n                            <button className=\"button is-small\" onClick={this.removeRow}>Rem. Row</button>\n                            <br />\n                            <button className=\"button is-small\" onClick={this.addRow}>Add Row</button>\n                        </div>\n                    </div>\n\n                    <div className=\"columns\" >\n                        <div className=\"column is-narrow has-text-left\">\n                            <span className=\"button is-small\" onClick={this.removeCol}>Rem. Col</span>\n                            <span className=\"button is-small\" onClick={this.addCol}>Add Col</span>\n                            <div style={{ paddingTop: \"20px\" }}>\n                                <button className=\"button\" onClick={this.submit}>Submit</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n        this.setFinishedPopulating(true)\n        return ret\n    }\n}\n\n\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        upsertMatrix,\n        renameMatrix\n    },\n        dispatch)\n}\n\nexport default connect(null, mapDispatchToProps)(InputGrid);\n\n","import React from 'react';\n\nclass ResponsiveIcon extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            hover: false\n        }\n        this.hoverOn = this.hoverOn.bind(this)\n        this.hoverOff = this.hoverOff.bind(this)\n    }\n\n    hoverOn() {\n        this.setState({ hover: true });\n    }\n\n    hoverOff() {\n        this.setState({ hover: false });\n    }\n\n    render() {\n        return (\n            <i className={this.state.hover ? \"fas \" + this.props.icon : \"far \" + this.props.icon}\n                style={{ cursor: \"pointer\" }}\n                onMouseEnter={this.hoverOn}\n                onMouseLeave={this.hoverOff}\n                onClick={this.props.onClick}\n                title={this.props.title}\n            ></i>\n        )\n    }\n}\n\nexport default ResponsiveIcon;\n\n","import React from 'react';\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from 'redux'\nimport { deleteMatrix } from \"actions/matrices\"\nimport Matrix from \"components/common/Matrix\"\nimport ModalWrapper from \"components/common/ModalWrapper\"\nimport InputGrid from \"components/common/InputGrid\"\nimport ResponsiveIcon from \"components/common/ResponsiveIcon\"\n\nclass RichMatrix extends React.Component {\n    render() {\n        return (\n            <div className=\"box has-text-centered\">\n                <Matrix data={this.props.data} />\n                {this.props.matrixName}\n                <br />\n                <span className=\"icon has-text-info\" >\n                    <ModalWrapper>\n                        <ResponsiveIcon icon=\"fa-edit\" title=\"Edit the matrix in place\" />\n                        {this.props.name}\n                        <InputGrid data={this.props.data} matrixName={this.props.matrixName} edit />\n                    </ModalWrapper>\n                </span>\n                <span className=\"icon has-text-info\" >\n                    <ModalWrapper>\n                        <ResponsiveIcon icon=\"fa-clone\" title=\"Create a duplicate of this matrix\" />\n                        {this.props.name}\n                        <InputGrid data={this.props.data} matrixName={this.props.matrixName} clone />\n                    </ModalWrapper>\n                </span>\n                <span className=\"icon has-text-info\" >\n                    <ResponsiveIcon icon=\"fa-trash-alt\" onClick={() => this.props.deleteMatrix(this.props.matrixName)} title=\"Delete this matrix\" />\n                </span>\n            </div>\n        )\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        deleteMatrix\n    },\n        dispatch)\n}\n\nexport default connect(null, mapDispatchToProps)(RichMatrix);\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\"\n\nimport RichMatrix from 'components/matricesBank/RichMatrix';\n\n\nclass MatricesBank extends Component {\n\n  render() {\n    return (\n      <div>\n        <h1>Matrix Bank</h1>\n        <div className=\"box\">\n          <div className=\"columns is-multiline\">\n            {this.props.matrices.entrySeq().map(([k, v]) =>\n              <div className=\"column is-narrow is-mobile\" key={k}>\n                <RichMatrix\n                  data={v}\n                  matrixName={k}\n                  key={k}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    matrices: state.matrices\n  }\n}\n\nexport default connect(mapStateToProps)(MatricesBank);\n","import React from 'react';\nimport ModalWrapper from 'components/common/ModalWrapper'\nimport InputGrid from 'components/common/InputGrid'\n\nclass CreateMatrix extends React.Component {\n  render() {\n    return (\n      <ModalWrapper>\n        <button className=\"button is-primary\">\n          Create New Matrix\n        </button>\n        Create New Matrix\n        <InputGrid initialRows={2} initialCols={2} create />\n      </ModalWrapper>\n    )\n  }\n}\n\nexport default CreateMatrix;","import React, { Component } from 'react';\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from 'redux'\n\nimport { multiplyBegin } from \"actions/multiply\"\nimport { Dropdown, Level, Button, Box } from \"react-bulma-components/full\"\n\nclass Multiply extends Component {\n  constructor(props) {\n    super(props)\n    this.onChange1 = this.onChange_1.bind(this)\n    this.onChange2 = this.onChange_2.bind(this)\n    this.updateResultVariable = this.updateResultVariable.bind(this)\n    this.multiply = this.multiply.bind(this)\n    this.state = { matrix_1: \"\", matrix_2: \"\", resultVariable: \"\" }\n  }\n\n  onChange_1 = selected => {\n    this.setState({ matrix_1: selected });\n  };\n\n  onChange_2 = selected => {\n    this.setState({ matrix_2: selected });\n  };\n\n  updateResultVariable = input => {\n    this.setState({ resultVariable: input.target.value })\n  }\n\n  multiply = () => {\n    this.props.multiplyBegin(this.state.matrix_1, this.state.matrix_2, this.state.resultVariable)\n  }\n\n  render() {\n    return (\n      <Box>\n        <Level>\n          <Level.Side align=\"left\">\n            <Level.Item>\n              <Dropdown value={this.state.matrix_1} onChange={this.onChange1}>\n                <Dropdown.Item value=\"\">Select Matrix</Dropdown.Item>\n                {this.props.matrices.keySeq().map(k =>\n                  <Dropdown.Item key={k} value={k}>{k}</Dropdown.Item>\n                )}\n              </Dropdown>\n            </Level.Item>\n            <Level.Item>\n              <Dropdown value={this.state.matrix_2} onChange={this.onChange2}>\n                <Dropdown.Item value=\"\">Select Matrix</Dropdown.Item>\n                {this.props.matrices.keySeq().map(k =>\n                  <Dropdown.Item key={k} value={k}>{k}</Dropdown.Item>\n                )}\n              </Dropdown>\n            </Level.Item>\n          </Level.Side>\n\n          <Level.Side align=\"right\">\n            <Level.Item>\n              <input\n                className=\"input\"\n                type=\"text\"\n                value={this.state.resultVariable}\n                placeholder=\"Store Result As\"\n                onChange={this.updateResultVariable} />\n            </Level.Item>\n          </Level.Side>\n\n        </Level>\n        <br />\n        <Level>\n          <Level.Side align=\"left\">\n          </Level.Side>\n          <Level.Side align=\"right\">\n            <Level.Item>\n              <Button onClick={this.multiply}>Multiply</Button>\n            </Level.Item>\n          </Level.Side>\n        </Level>\n      </Box>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    matrices: state.matrices\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    multiplyBegin\n  },\n    dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Multiply);","import React, { Component } from 'react';\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from 'redux'\n\nimport { multiplyBegin } from \"actions/multiply\"\nimport { Dropdown, Level, Button, Box } from \"react-bulma-components/full\"\n\nclass Invert extends Component {\n    constructor(props) {\n        super(props)\n        this.matrixSelected = this.matrixSelected.bind(this)\n        this.updateResultVariable = this.updateResultVariable.bind(this)\n        this.multiply = this.multiply.bind(this)\n        this.state = { matrix: \"\", resultVariable: \"\" }\n    }\n\n    matrixSelected = function (selected) {\n        console.log(selected)\n        this.setState({ matrix: selected });\n        if (selected !== \"\") {\n            this.setState({ resultVariable: `${selected}_INV` })\n        } else {\n            this.setState({ resultVariable: \"\" })\n        }\n    };\n\n    updateResultVariable = input => {\n        this.setState({ resultVariable: input.target.value })\n    }\n\n    multiply = () => {\n        this.props.multiplyBegin(this.state.matrix_1, this.state.matrix_2, this.state.resultVariable)\n    }\n\n    render() {\n        return (\n            <Box>\n                <Level>\n                    <Level.Side align=\"left\">\n                        <Level.Item>\n                            <Dropdown value={this.state.matrix} onChange={this.matrixSelected}>\n                                <Dropdown.Item value=\"\">Select Matrix</Dropdown.Item>\n                                {this.props.matrices.keySeq().map(k =>\n                                    <Dropdown.Item key={k} value={k}>{k}</Dropdown.Item>\n                                )}\n                            </Dropdown>\n                        </Level.Item>\n                    </Level.Side>\n\n                    <Level.Side align=\"right\">\n                        <Level.Item>\n                            <input\n                                className=\"input\"\n                                type=\"text\"\n                                value={this.state.resultVariable}\n                                placeholder=\"Store Result As\"\n                                onChange={this.updateResultVariable} />\n                        </Level.Item>\n                    </Level.Side>\n\n                </Level>\n                <br />\n                <Level>\n                    <Level.Side align=\"left\">\n                    </Level.Side>\n                    <Level.Side align=\"right\">\n                        <Level.Item>\n                            <Button onClick={this.multiply}>Multiply</Button>\n                        </Level.Item>\n                    </Level.Side>\n                </Level>\n            </Box>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        matrices: state.matrices\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        multiplyBegin\n    },\n        dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Invert);","import React, { Component } from 'react';\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from 'redux'\n\nimport { upsertMatrix } from \"actions/matrices\"\nimport { Dropdown } from \"react-bulma-components/full\"\nimport Multiply from \"components/controlPanel/operations/Multiply\"\nimport Invert from \"components/controlPanel/operations/Invert\"\n\nclass ControlPanel extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { selected: \"\" }\n  }\n\n  onChange = selected => {\n    this.setState({ selected });\n  };\n\n  render() {\n    return (\n      <div className=\"box\">\n        <Dropdown value={this.state.selected} onChange={this.onChange} color=\"info\">\n          <Dropdown.Item value=\"\">Select</Dropdown.Item>\n          <Dropdown.Divider />\n          <Dropdown.Item value=\"multiply\">Multiply</Dropdown.Item>\n        </Dropdown>\n        <hr />\n        {this.state.selected === \"multiply\" && <Multiply />}\n        {this.state.selected === \"invert\" && <Invert />}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    matrices: state.matrices\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    upsertMatrix\n  },\n    dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ControlPanel);","import React from 'react';\nimport { connect } from \"react-redux\"\nimport Textarea from \"react-textarea-autosize\"\n\nclass GeneratedCode extends React.Component {\n    render() {\n        return (\n            <div>\n                < Textarea className=\"textarea\" value={this.props.generatedCode.join('\\n')} readOnly>\n                </Textarea >\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        generatedCode: state.generatedCode\n    }\n}\n\nexport default connect(mapStateToProps)(GeneratedCode);\n","import React, { Component } from 'react';\n\nimport MatricesBank from \"components/matricesBank/MatricesBank\"\nimport CreateMatrix from \"components/createMatrix/CreateMatrix\"\nimport ControlPanel from \"components/controlPanel/ControlPanel\"\nimport GeneratedCode from \"components/generatedCode/GeneratedCode\"\n\nclass MatrixGUI extends Component {\n\n  render() {\n    return (\n      <div className=\"columns\">\n        <div className=\"column is-two-thirds\">\n          <section className=\"section\">\n            <CreateMatrix />\n          </section>\n          <section className=\"section\">\n            <MatricesBank />\n          </section>\n          <section className=\"section\">\n            <ControlPanel />\n          </section>\n        </div>\n        <div className=\"column\">\n          <GeneratedCode />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MatrixGUI;\n","import React from 'react';\n\nclass Navbar extends React.Component {\n\n    render() {\n        return (\n            <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n                <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n                    <div className=\"navbar-start\">\n                        <a className=\"navbar-item\">\n                            Home\n                        </a>\n                    </div>\n\n                    <div className=\"navbar-end\">\n                        <div className=\"navbar-item\">\n                            <div className=\"buttons\">\n                                <a className=\"button is-primary\">\n                                    <strong>Sign up</strong>\n                                </a>\n                                <a className=\"button is-light\">\n                                    Log in\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </nav>\n        )\n    }\n}\n\n\n\nexport default Navbar;\n","import React, { Component } from 'react';\n\nimport MatrixGUI from \"components/MatrixGUI\"\nimport Navbar from \"components/navbar/Navbar\"\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div>\n        <Navbar />\n        <MatrixGUI />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import 'bulma/css/bulma.css'\n\nimport React from 'react';\nimport { render } from 'react-dom'\n\nimport { applyMiddleware, createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from 'reducers'\n\nimport { createEpicMiddleware } from 'redux-observable';\nimport { rootEpic } from 'epics'\n\nimport { createLogger } from 'redux-logger'\nimport Immutable from 'immutable'\nimport 'rxjs';\n\nimport App from 'App';\n\nconst logger = createLogger({\n  stateTransformer: (state) => {\n    let newState = {};\n\n    for (var i of Object.keys(state)) {\n      if (Immutable.Iterable.isIterable(state[i])) {\n        newState[i] = state[i].toJS();\n      } else {\n        newState[i] = state[i];\n      }\n    };\n\n    return newState;\n  }\n});\n\nconst epicMiddleware = createEpicMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(epicMiddleware, logger)\n)\n\nepicMiddleware.run(rootEpic);\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}