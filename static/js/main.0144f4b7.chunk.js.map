{"version":3,"sources":["actions/actions.js","reducers/matrices.js","reducers/index.js","actions/multiply.js","actions/matrices.js","epics/multiplyEpic.js","epics/index.js","components/matrices/Matrix.js","components/matrices/MatricesBank.js","components/modal/ModalWrapper.js","components/modal/InputGrid.js","components/modal/CreateMatrix.js","components/controlPanel/operations/Multiply.js","components/controlPanel/operations/Invert.js","components/controlPanel/ControlPanel.js","components/MatrixGUI.js","App.js","index.js"],"names":["MULTIPLY_BEGIN","MULTIPLY_ERROR","CREATE_MATRIX","initialState","OrderedMap","fibonacci_q","Map","shape","List","numericValues","first_fibonacci","matrices","state","arguments","length","undefined","action","type","console","log","set","name","combineReducers","multiplyBegin","m1","m2","resultVariable","createMatrix","rootEpic","combineEpics","action$","state$","pipe","ofType","mergeMap","ajax","url","method","headers","Content-Type","body","matrix_1","value","get","toJS","data","matrix_2","map","response","JSON","parse","catchError","error","of","errorMessage","Matrix","props","rows","cols","count","fragments","_props$data$get","_props$data$get2","Object","slicedToArray","push","slice","join","math","katex","renderToString","this","convertStateToLatex","react_default","a","createElement","className","Parser","style","display","marginTop","Component","MatricesBank","entrySeq","_ref","_ref2","k","v","key","matrices_Matrix","connect","ModalWrapper","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","modalState","toggleModal","bind","assertThisInitialized","setState","prev","React","cloneElement","children","onClick","ModalWrapper_Modal","closeModal","title","toggle","Modal","InputGrid","numRows","initialRows","numCols","initialCols","matrixName","addRow","addCol","removeRow","removeCol","updateMatrixName","prevState","Math","min","max","newName","objectSpread","r","c","concat","_this2","placeholder","onChange","e","target","paddingTop","toConsumableArray","Array","keys","i","j","size","fontSize","defaultValue","ref","input","dispatch","bindActionCreators","CreateMatrix","modal_ModalWrapper","modal_InputGrid","Multiply","onChange_1","selected","onChange_2","updateResultVariable","multiply","onChange1","onChange2","full","Side","align","Item","keySeq","Invert","matrixSelected","matrix","ControlPanel","color","Divider","operations_Multiply","operations_Invert","MatrixGUI","modal_CreateMatrix","matrices_MatricesBank","controlPanel_ControlPanel","App","components_MatrixGUI","logger","createLogger","stateTransformer","newState","_arr","_i","Immutable","Iterable","isIterable","epicMiddleware","createEpicMiddleware","store","createStore","rootReducer","applyMiddleware","run","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0144f4b7.chunk.js","sourcesContent":["/* Contains definitons of actions */\n\nexport const MULTIPLY_BEGIN = \"MULTIPLY_BEGIN\"\nexport const MULTIPLY_SUCCESS = \"MULTIPLY_SUCCESS\"\nexport const MULTIPLY_ERROR = \"MULTIPLY_ERROR\"\n\nexport const CREATE_MATRIX = \"CREATE_MATRIX\"\nexport const DELETE_MATRIX = \"DELETE_MATRIX\"\n\nexport const APPEND_LINE = \"APPEND_LINE\"","import { CREATE_MATRIX } from \"../actions/actions\";\nimport { OrderedMap, Map, List } from \"immutable\"\n\nconst initialState = new OrderedMap({\n  \"fibonacci_q\": new Map({ shape: new List([2, 2]), numericValues: new List([1, 1, 1, 0]) }),\n  \"first_fibonacci\": new Map({ shape: new List([2, 1]), numericValues: new List([1, 1]) })\n})\n\nconst matrices = (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_MATRIX:\n      console.log(\"create matrix\")\n      return state.set(action.name, new Map({ shape: action.shape, numericValues: action.numericValues }))\n    default:\n      return state\n  }\n}\n\nexport default matrices\n","\nimport { combineReducers } from 'redux'\nimport matrices from './matrices'\n\nexport default combineReducers({\n    matrices,\n})\n","import { MULTIPLY_BEGIN, MULTIPLY_SUCCESS, MULTIPLY_ERROR } from \"actions/actions\"\n\nexport function multiplyBegin(m1, m2, resultVariable) {\n    return {\n        type: MULTIPLY_BEGIN,\n        m1,\n        m2,\n        resultVariable\n    }\n}\n\nexport function multiplySuccess(result) {\n    console.log(result + \" yay, request succeeded\")\n    return {\n        type: MULTIPLY_SUCCESS,\n        result\n    }\n}\n\nexport function multiplyError(errorMessage) {\n    return {\n        type: MULTIPLY_ERROR,\n        errorMessage\n    }\n}\n\n\n","import { CREATE_MATRIX, DELETE_MATRIX } from \"actions/actions\";\n\nexport function createMatrix(name, shape, numericValues) {\n    console.log(name, shape, numericValues)\n    return {\n        type: CREATE_MATRIX,\n        name,\n        shape,\n        numericValues\n    }\n}\n\nexport function deleteMatrix(name) {\n    return {\n        type: DELETE_MATRIX,\n        name\n    }\n}\n","import { mergeMap, catchError, map } from 'rxjs/operators';\nimport { ajax } from 'rxjs/ajax'\nimport { of } from 'rxjs';\nimport { ofType } from 'redux-observable'\n\n\nimport { multiplySuccess, multiplyError } from 'actions/multiply'\nimport { createMatrix } from 'actions/matrices'\nimport { MULTIPLY_BEGIN } from 'actions/actions'\n\nimport { List } from 'immutable'\n\nexport const multiplyEpic = (action$, state$) => action$.pipe(\n    ofType(MULTIPLY_BEGIN),\n    mergeMap(action =>\n        ajax({\n            url: 'https://nzr58np206.execute-api.us-west-2.amazonaws.com/beta-prod/operations/multiply',\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: {\n                matrix_1: {\n                    shape: state$.value.matrices.get(action.m1).get(\"shape\").toJS(),\n                    data: state$.value.matrices.get(action.m1).get(\"numericValues\").toJS()\n                },\n                matrix_2: {\n                    shape: state$.value.matrices.get(action.m2).get(\"shape\").toJS(),\n                    data: state$.value.matrices.get(action.m2).get(\"numericValues\").toJS()\n                }\n            }\n        }).pipe(\n            map(response => createMatrix(action.resultVariable, new List(JSON.parse(response.response.body).shape), new List(JSON.parse(response.response.body).data))),\n            catchError(error => of(multiplyError(error)))\n        )\n    )\n)\n","import { combineEpics } from 'redux-observable';\nimport { multiplyEpic } from 'epics/multiplyEpic'\n\nexport const rootEpic = combineEpics(\n    multiplyEpic,\n);","import React, { Component } from 'react';\nimport { List } from 'immutable';\nimport katex from 'katex';\nimport Parser from 'html-react-parser';\n\nconst START = \"\\\\begin{pmatrix}\"\nconst END = \"\\\\end{pmatrix}\"\n\nclass Matrix extends Component {\n    convertStateToLatex(props) {\n        let fragments = new List()\n        var numericValues = props.data.get('numericValues')\n        var rows, cols\n        [rows, cols] = props.data.get('shape')\n        var count\n        for (count = 0; count < rows; count++) {\n            fragments = fragments\n                .push(numericValues\n                    .slice(count * cols, (count + 1) * cols)\n                    .join(' & '))\n        }\n        return START + fragments.join(' \\\\\\\\ ') + END\n    }\n\n    render() {\n        let math = katex.renderToString(this.convertStateToLatex(this.props));\n        return (\n            <div className=\"box has-text-centered\">\n                <div>{Parser(math)}</div>\n                <div style={{ display: \"flex\", marginTop: \"auto\" }}>{this.props.name}</div>\n            </div>\n        )\n    }\n}\n\nexport default Matrix;","import React, { Component } from 'react';\nimport { connect } from \"react-redux\"\n\nimport Matrix from 'components/matrices/Matrix';\n\n\nclass MatricesBank extends Component {\n\n  render() {\n    return (\n      <div>\n        <h1>Matrix Bank</h1>\n        <div className=\"box\">\n          <div className=\"columns is-multiline\">\n            {this.props.matrices.entrySeq().map(([k, v]) =>\n              <div className=\"column is-narrow\" key={k}>\n                <Matrix \n                  data={v}\n                  name={k}\n                  key={k}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    matrices: state.matrices\n  }\n}\n\nexport default connect(mapStateToProps)(MatricesBank);\n","import React from 'react';\nimport PropTypes from 'prop-types'\n\nclass ModalWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalState: false\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n  }\n  \n  toggleModal() {    \n    this.setState((prev, props) => {\n      const newState = !prev.modalState;\n      \n      return { modalState: newState };\n    });\n  }\n  \n  render() {\n    return(\n        <div className=\"container\">\n          <div className=\"has-text-centered content\">\n            {React.cloneElement(this.props.children[0], {onClick: this.toggleModal})}\n          </div>\n          \n          <Modal \n            closeModal={this.toggleModal} \n            modalState={this.state.modalState} \n            title={this.props.children[1]}\n          >\n            {React.cloneElement(this.props.children[2], {toggle: this.toggleModal})}\n          </Modal>\n        </div>\n    );\n  }\n}\n\nconst Modal = ({ children, closeModal, modalState, title }) => {\n  if(!modalState) {\n    return null;\n  }\n  \n  return(\n    <div className=\"modal is-active\">\n      <div className=\"modal-background\" onClick={closeModal} />\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <p className=\"modal-card-title\">{title}</p>\n          <button className=\"delete\" onClick={closeModal} />\n        </header>\n        <section className=\"modal-card-body\">\n          <div className=\"content\">\n            {children}\n          </div>\n        </section>\n        <footer className=\"modal-card-foot\">\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nModal.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n  modalState: PropTypes.bool.isRequired,\n  title: PropTypes.string\n}\n\nexport default ModalWrapper;","import React from 'react';\nimport { bindActionCreators } from 'redux'\nimport { connect } from \"react-redux\"\nimport { List } from 'immutable';\n\nimport { createMatrix } from \"actions/matrices\"\n\nclass InputGrid extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = { numRows: props.initialRows, numCols: props.initialCols, matrixName: '' }\n        this.addRow = this.addRow.bind(this)\n        this.addCol = this.addCol.bind(this)\n        this.removeRow = this.removeRow.bind(this)\n        this.removeCol = this.removeCol.bind(this)\n        this.createMatrix = this.createMatrix.bind(this)\n        this.updateMatrixName = this.updateMatrixName.bind(this)\n    }\n\n    addRow() {\n        this.setState((prevState) => ({\n            numRows: Math.min(prevState.numRows + 1, 7)\n        }))\n    }\n\n    addCol() {\n        this.setState((prevState) => ({\n            numCols: Math.min(prevState.numCols + 1, 7)\n        }))\n    }\n\n    removeRow() {\n        this.setState((prevState) => ({\n            numRows: Math.max(prevState.numRows - 1, 1)\n        }))\n    }\n\n    removeCol() {\n        this.setState((prevState) => ({\n            numCols: Math.max(prevState.numCols - 1, 1)\n        }))\n    }\n\n    updateMatrixName(newName) {\n        this.setState(\n            { ...this.state, matrixName: newName }\n        )\n    }\n\n    createMatrix() {\n        let numericValues = new List()\n        for (let r = 0; r < this.state.numRows; r++) {\n            for (let c = 0; c < this.state.numCols; c++) {\n                numericValues = numericValues.push(this[`textInput${r},${c}`].value)\n            }\n        }\n        console.log(numericValues)\n        this.props.createMatrix(this.state.matrixName, new List([this.state.numRows, this.state.numCols]), numericValues)\n        this.props.toggle()\n    }\n\n    render() {\n        return (\n            <div className=\"columns\">\n                <div className=\"column\">\n                    <input\n                        className=\"input\"\n                        type=\"text\"\n                        value={this.state.matrixName}\n                        placeholder=\"Matrix Name\"\n                        onChange={(e) => this.updateMatrixName(e.target.value)} />\n                    <div className=\"columns\" style={{ paddingTop: \"25px\" }}>\n                        <div className=\"column is-narrow\">\n                            {[...Array(this.state.numRows).keys()].map(i =>\n                                <div key={i}>\n                                    {[...Array(this.state.numCols).keys()].map(j =>\n                                        <input\n                                            type=\"text\"\n                                            size=\"4\"\n                                            style={{ fontSize: \"20px\" }}\n                                            defaultValue=\"0\"\n                                            key={`${i},${j}`}\n                                            ref={input => { this[`textInput${i},${j}`] = input }} />\n                                    )}\n                                    <br />\n                                </div>)}\n                        </div>\n                        <div className=\"column is-one-fifth\">\n                            <button className=\"button is-small\" onClick={this.removeRow}>Rem. Row</button>\n                            <br />\n                            <button className=\"button is-small\" onClick={this.addRow}>Add Row</button>\n                        </div>\n                    </div>\n\n                    <span className=\"button is-small\" onClick={this.removeCol}>Rem. Col</span>\n                    <span className=\"button is-small\" onClick={this.addCol}>Add Col</span>\n                    <div style={{ paddingTop: \"40px\" }}>\n                        <button onClick={this.createMatrix}>Create Matrix</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        createMatrix\n    },\n        dispatch)\n}\n\nexport default connect(null, mapDispatchToProps)(InputGrid);\n\n","import React from 'react';\nimport ModalWrapper from 'components/modal/ModalWrapper'\nimport InputGrid from 'components/modal/InputGrid'\n\nclass CreateMatrix extends React.Component {\n  render() {\n    return (\n      <ModalWrapper>\n        <button className=\"button is-primary\">\n          Create New Matrix\n        </button>\n        Create New Matrix\n        <InputGrid initialRows={2} initialCols={2} />\n      </ModalWrapper>\n    )\n  }\n}\n\nexport default CreateMatrix;","import React, { Component } from 'react';\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from 'redux'\n\nimport { multiplyBegin } from \"actions/multiply\"\nimport { Dropdown, Level, Button, Box } from \"react-bulma-components/full\"\n\nclass Multiply extends Component {\n  constructor(props) {\n    super(props)\n    this.onChange1 = this.onChange_1.bind(this)\n    this.onChange2 = this.onChange_2.bind(this)\n    this.updateResultVariable = this.updateResultVariable.bind(this)\n    this.multiply = this.multiply.bind(this)\n    this.state = { matrix_1: \"\", matrix_2: \"\", resultVariable: \"\" }\n  }\n\n  onChange_1 = selected => {\n    this.setState({ matrix_1: selected });\n  };\n\n  onChange_2 = selected => {\n    this.setState({ matrix_2: selected });\n  };\n\n  updateResultVariable = input => {\n    this.setState({ resultVariable: input.target.value })\n  }\n\n  multiply = () => {\n    this.props.multiplyBegin(this.state.matrix_1, this.state.matrix_2, this.state.resultVariable)\n  }\n\n  render() {\n    return (\n      <Box>\n        <Level>\n          <Level.Side align=\"left\">\n            <Level.Item>\n              <Dropdown value={this.state.matrix_1} onChange={this.onChange1}>\n                <Dropdown.Item value=\"\">Select Matrix</Dropdown.Item>\n                {this.props.matrices.keySeq().map(k =>\n                  <Dropdown.Item key={k} value={k}>{k}</Dropdown.Item>\n                )}\n              </Dropdown>\n            </Level.Item>\n            <Level.Item>\n              <Dropdown value={this.state.matrix_2} onChange={this.onChange2}>\n                <Dropdown.Item value=\"\">Select Matrix</Dropdown.Item>\n                {this.props.matrices.keySeq().map(k =>\n                  <Dropdown.Item key={k} value={k}>{k}</Dropdown.Item>\n                )}\n              </Dropdown>\n            </Level.Item>\n          </Level.Side>\n\n          <Level.Side align=\"right\">\n            <Level.Item>\n              <input\n                className=\"input\"\n                type=\"text\"\n                value={this.state.resultVariable}\n                placeholder=\"Store Result As\"\n                onChange={this.updateResultVariable} />\n            </Level.Item>\n          </Level.Side>\n\n        </Level>\n        <br />\n        <Level>\n          <Level.Side align=\"left\">\n          </Level.Side>\n          <Level.Side align=\"right\">\n            <Level.Item>\n              <Button onClick={this.multiply}>Multiply</Button>\n            </Level.Item>\n          </Level.Side>\n        </Level>\n      </Box>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    matrices: state.matrices\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    multiplyBegin\n  },\n    dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Multiply);","import React, { Component } from 'react';\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from 'redux'\n\nimport { multiplyBegin } from \"actions/multiply\"\nimport { Dropdown, Level, Button, Box } from \"react-bulma-components/full\"\n\nclass Invert extends Component {\n    constructor(props) {\n        super(props)\n        this.matrixSelected = this.matrixSelected.bind(this)\n        this.updateResultVariable = this.updateResultVariable.bind(this)\n        this.multiply = this.multiply.bind(this)\n        this.state = { matrix: \"\", resultVariable: \"\" }\n    }\n\n    matrixSelected = function (selected) {\n        console.log(selected)\n        this.setState({ matrix: selected });\n        if (selected !== \"\") {\n            this.setState({ resultVariable: `${selected}_INV` })\n        } else {\n            this.setState({ resultVariable: \"\" })\n        }\n    };\n\n    updateResultVariable = input => {\n        this.setState({ resultVariable: input.target.value })\n    }\n\n    multiply = () => {\n        this.props.multiplyBegin(this.state.matrix_1, this.state.matrix_2, this.state.resultVariable)\n    }\n\n    render() {\n        return (\n            <Box>\n                <Level>\n                    <Level.Side align=\"left\">\n                        <Level.Item>\n                            <Dropdown value={this.state.matrix} onChange={this.matrixSelected}>\n                                <Dropdown.Item value=\"\">Select Matrix</Dropdown.Item>\n                                {this.props.matrices.keySeq().map(k =>\n                                    <Dropdown.Item key={k} value={k}>{k}</Dropdown.Item>\n                                )}\n                            </Dropdown>\n                        </Level.Item>\n                    </Level.Side>\n\n                    <Level.Side align=\"right\">\n                        <Level.Item>\n                            <input\n                                className=\"input\"\n                                type=\"text\"\n                                value={this.state.resultVariable}\n                                placeholder=\"Store Result As\"\n                                onChange={this.updateResultVariable} />\n                        </Level.Item>\n                    </Level.Side>\n\n                </Level>\n                <br />\n                <Level>\n                    <Level.Side align=\"left\">\n                    </Level.Side>\n                    <Level.Side align=\"right\">\n                        <Level.Item>\n                            <Button onClick={this.multiply}>Multiply</Button>\n                        </Level.Item>\n                    </Level.Side>\n                </Level>\n            </Box>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        matrices: state.matrices\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        multiplyBegin\n    },\n        dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Invert);","import React, { Component } from 'react';\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from 'redux'\n\nimport { createMatrix } from \"actions/matrices\"\nimport { Dropdown } from \"react-bulma-components/full\"\nimport Multiply from \"components/controlPanel/operations/Multiply\"\nimport Invert from \"components/controlPanel/operations/Invert\"\n\nclass ControlPanel extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { selected: \"\" }\n  }\n\n  onChange = selected => {\n    this.setState({ selected });\n  };\n\n  render() {\n    return (\n      <div className=\"box\">\n        <Dropdown value={this.state.selected} onChange={this.onChange} color=\"info\">\n          <Dropdown.Item value=\"\">Select</Dropdown.Item>\n          <Dropdown.Divider />\n          <Dropdown.Item value=\"multiply\">Multiply</Dropdown.Item>\n          <Dropdown.Item value=\"invert\">Invert</Dropdown.Item>\n        </Dropdown>\n        <hr />\n        {this.state.selected === \"multiply\" && <Multiply />}\n        {this.state.selected === \"invert\" && <Invert />}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    matrices: state.matrices\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    createMatrix\n  },\n    dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ControlPanel);","import React, { Component } from 'react';\n\nimport MatricesBank from \"components/matrices/MatricesBank\"\nimport CreateMatrix from \"components/modal/CreateMatrix\"\nimport ControlPanel from \"components/controlPanel/ControlPanel\"\n\nclass MatrixGUI extends Component {\n\n  render() {\n    return (\n      <div>\n        <section className=\"section\">\n            <CreateMatrix/>\n        </section>\n        <section className=\"section\">\n          <MatricesBank/>\n        </section>\n        <section className=\"section\">\n          <ControlPanel/>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default MatrixGUI;\n","import React, { Component } from 'react';\n\nimport MatrixGUI from \"components/MatrixGUI\"\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div>\n        <MatrixGUI/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import 'bulma/css/bulma.css'\n\nimport React from 'react';\nimport { render } from 'react-dom'\n\nimport { applyMiddleware, createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from 'reducers'\n\nimport { createEpicMiddleware } from 'redux-observable';\nimport { rootEpic } from 'epics'\n\nimport { createLogger } from 'redux-logger'\nimport Immutable from 'immutable'\nimport 'rxjs';\n\nimport App from 'App';\n\nconst logger = createLogger({\n  stateTransformer: (state) => {\n    let newState = {};\n\n    for (var i of Object.keys(state)) {\n      if (Immutable.Iterable.isIterable(state[i])) {\n        newState[i] = state[i].toJS();\n      } else {\n        newState[i] = state[i];\n      }\n    };\n\n    return newState;\n  }\n});\n\nconst epicMiddleware = createEpicMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(epicMiddleware, logger)\n)\n\nepicMiddleware.run(rootEpic);\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}