{"version":3,"sources":["actions/actions.js","util/Ndarray.js","util/Tuple.js","reducers/values.js","reducers/error.js","reducers/index.js","actions/operation.js","epics/operationEpic.js","epics/index.js","components/common/ModalWrapper.js","actions/matrices.js","components/common/InputGrid.js","components/createMatrix/CreateMatrix.js","components/bank/BankWrapper.js","components/common/Matrix.js","components/common/ResponsiveIcon.js","components/bank/mathematicalObjects/RichMatrix.js","components/bank/mathematicalObjects/Tuple.js","components/bank/mathematicalObjects/Scalar.js","components/bank/ValueBank.js","components/controlPanel/operations/GenericOperation.js","components/controlPanel/CodeCreators.js","components/controlPanel/ControlPanel.js","components/MatrixGUI.js","App.js","index.js"],"names":["OPERATION_BEGIN","OPERATION_SUCCESS","OPERATION_ERROR","UPSERT_MATRIX","RENAME_MATRIX","DELETE_MATRIX","Ndarray","numericValues","shape","Object","classCallCheck","this","Tuple","namev","ndarrayv","length","_this","map","e","i","initialState","OrderedMap","exampleScalar","exampleNdarray","exampleTuple","values","state","arguments","undefined","action","type","contains","name","updateIn","set","mapKeys","k","newName","remove","result","validOperation","dataType","ndarray","resultVariable","error","combineReducers","generatedCode","operationBegin","command","dataNames","dataTypes","misc","createBody","lookupMatrix","matrixType","matrixName","databank","matrices","composites","scalars","get","typeDataTuples","index","assign","apply","toConsumableArray","defineProperty","rootEpic","combineEpics","action$","state$","pipe","ofType","mergeMap","ajax","url","method","headers","Content-Type","body","value","response","catchError","of","errorMessage","ModalWrapper","props","possibleConstructorReturn","getPrototypeOf","call","modalState","toggleModal","bind","assertThisInitialized","setState","prev","react_default","a","createElement","React","cloneElement","children","onClick","ModalWrapper_Modal","closeModal","title","toggle","Component","Modal","_ref","className","upsertMatrix","renameMatrix","deleteMatrix","InputGrid","create","numRows","initialRows","numCols","initialCols","finishedPopulating","edit","console","log","rows","cols","clone","today","Date","timestamp","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","addRow","addCol","removeRow","removeCol","submit","updateMatrixName","getStartingValue","setFinishedPopulating","prevState","Math","min","max","objectSpread","r","c","push","concat","j","status","_this2","ret","placeholder","onChange","target","style","paddingTop","Array","keys","key","size","fontSize","defaultValue","ref","element","connect","dispatch","bindActionCreators","CreateMatrix","common_ModalWrapper","common_InputGrid","BankWrapper","createNew","Matrix","count","fragments","List","float","round","pow","_props$ndarray$shape","slicedToArray","slice","join","math","katex","renderToString","convertStateToLatex","Parser","ResponsiveIcon","hover","hoverOn","hoverOff","icon","cursor","onMouseEnter","onMouseLeave","RichMatrix","common_Matrix","numerics","common_ResponsiveIcon","nameMatrixPairs","_ref2","Scalar","MatrixBank","bank_BankWrapper","createMatrix_CreateMatrix","matrixMap","entrySeq","v","renderHelper","mathematicalObjects_Scalar","mathematicalObjects_RichMatrix","mathematicalObjects_Tuple","GenericOperation","operate","argv","numDropdowns","codeCreator","showWarning","displayWarning","closeWarning","matrix_1","matrix_2","disabled","keySeq","mostRecentError","full","ControlPanel","selectTab","selected","operationType","isActive","operation","MatrixGUI","controlPanel_ControlPanel","ValueBank","App","components_MatrixGUI","logger","createLogger","stateTransformer","newState","_arr","_i","Immutable","Iterable","isIterable","toJS","epicMiddleware","createEpicMiddleware","store","createStore","rootReducer","applyMiddleware","run","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e0b46649.chunk.js","sourcesContent":["/* Contains definitons of actions */\n\nexport const OPERATION_BEGIN = \"OPERATION_BEGIN\"\nexport const OPERATION_SUCCESS = \"OPERATION_SUCCESS\"\nexport const OPERATION_ERROR = \"OPERATION_ERROR\"\n\nexport const UPSERT_MATRIX = \"UPSERT_MATRIX\"\nexport const RENAME_MATRIX = \"RENAME_MATRIX\"\nexport const DELETE_MATRIX = \"DELETE_MATRIX\"\n\nexport const UPSERT_COMPOSITE = \"UPSERT_COMPOSITE\"\nexport const RENAME_COMPOSITE = \"RENAME_COMPOSITE\"\nexport const DELETE_COMPOSITE = \"DELETE_COMPOSITE\"\n\nexport const UPSERT_SCALAR = \"UPSERT_SCALAR\"\nexport const RENAME_SCALAR = \"RENAME_SCALAR\"\nexport const DELETE_SCALAR = \"DELETE_SCALAR\"","export default class Ndarray {\n    constructor(numericValues, shape) {\n        this.numericValues = numericValues;\n        this.shape = shape;\n    }\n\n    rows() {\n        return this.shape[0]\n    }\n\n    cols() {\n        return this.shape[1]\n    }\n}","export default class Tuple {\n    constructor(namev, ndarrayv) {\n        this.namev = namev\n        this.ndarrayv = ndarrayv\n    }\n\n    get size() {\n        return this.namev.length\n    }\n\n    get nameMatrixPairs() {\n        return this.namev.map((e, i) => {\n            return [e, this.ndarrayv[i]];\n        });\n    }\n}","import { UPSERT_MATRIX, RENAME_MATRIX, DELETE_MATRIX, OPERATION_SUCCESS } from \"../actions/actions\";\nimport { OrderedMap } from \"immutable\"\n\nimport Ndarray from \"util/Ndarray\"\nimport Tuple from \"util/Tuple\"\n\nconst ndarrayv = [new Ndarray([1, 1, 1, 0], [2, 2]), new Ndarray([1, 1, 1, 4], [2, 2]), new Ndarray([1, 1, 1, 4], [2, 2])]\nconst namev = [\"charmander\", \"bulbasaur\", \"squirtle\"]\n\nconst initialState = new OrderedMap({\n  exampleScalar: [\"SCALAR\", 5],\n  exampleNdarray: [\"NDARRAY\", new Ndarray([1, 2, 3, 4], [2, 2])],\n  exampleTuple: [\"TUPLE\", new Tuple(namev, ndarrayv)]\n})\n\nconst values = (state = initialState, action) => {\n  switch (action.type) {\n    case UPSERT_MATRIX:\n      if (state.contains(action.name)) {\n        return state.updateIn([action.name], () => new Ndarray(action.numericValues, action.shape))\n      }\n      return state.set(action.name, new Ndarray(action.numericValues, action.shape))\n    case RENAME_MATRIX:\n      return state.mapKeys(k => {\n        if (k === action.name) {\n          return action.newName\n        }\n        return k\n      })\n    case DELETE_MATRIX:\n      return state.remove(action.name)\n    case OPERATION_SUCCESS:\n      if (action.result.validOperation && action.result.dataType === 'NDARRAY') {\n        let ndarray = action.result.result\n        if (state.contains(action.result.resultVariable)) {\n          return state.updateIn([action.resultVariable], () => new Ndarray(ndarray.numericValues, ndarray.shape))\n        }\n        return state.set(action.resultVariable, new Ndarray(ndarray.numericValues, ndarray.shape))\n      } else {\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nexport default values\n","import { OPERATION_BEGIN, OPERATION_SUCCESS } from \"../actions/actions\";\n\nconst initialState = \"\"\n\nconst error = (state = initialState, action) => {\n    switch (action.type) {\n        case OPERATION_BEGIN:\n            return \"\"\n        case OPERATION_SUCCESS:\n            if (!action.result.validOperation) {\n                return action.result.result\n            }\n            return state\n        default:\n            return state\n    }\n}\n\nexport default error","\nimport { combineReducers } from 'redux'\nimport values from './values'\nimport generatedCode from './generatedCode'\nimport error from './error'\n\nexport default combineReducers({\n    values,\n    generatedCode,\n    error\n})\n","import { OPERATION_BEGIN, OPERATION_SUCCESS, OPERATION_ERROR } from \"actions/actions\"\n\nexport function operationBegin(command, dataNames, dataTypes, resultVariable, misc) {\n    return {\n        type: OPERATION_BEGIN,\n        command,\n        dataNames,\n        dataTypes,\n        resultVariable,\n        misc\n    }\n}\n\nexport function operationSuccess(resultVariable, result, misc) {\n    return {\n        type: OPERATION_SUCCESS,\n        resultVariable,\n        result,\n        misc\n    }\n}\n\nexport function operationError(errorMessage) {\n    return {\n        type: OPERATION_ERROR,\n        errorMessage\n    }\n}\n\n\n","import { mergeMap, catchError, map } from 'rxjs/operators';\nimport { ajax } from 'rxjs/ajax'\nimport { of } from 'rxjs';\nimport { ofType } from 'redux-observable'\n\n\nimport { operationError, operationSuccess } from 'actions/operation'\nimport { OPERATION_BEGIN } from 'actions/actions'\n\nexport const operationEpic = (action$, state$) => action$.pipe(\n    ofType(OPERATION_BEGIN),\n    mergeMap(action =>\n        ajax({\n            url: 'https://nzr58np206.execute-api.us-west-2.amazonaws.com/beta-prod/operation',\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: {\n                command: action.command,\n                matrices: createBody(action.dataNames, action.dataTypes, state$.value)\n            }\n        }).pipe(\n            map(response => operationSuccess(action.resultVariable, response.response.body, action.misc)),\n            catchError(error => of(operationError(error)))\n        )\n    )\n)\n\nfunction createBody(dataNames, dataTypes, state) {\n    function lookupMatrix(matrixType, matrixName) {\n        var databank = null\n        switch (matrixType) {\n            case \"NDARRAY\":\n                databank = state.matrices\n                break\n            case \"TUPLE\":\n                databank = state.composites\n                break\n            case \"SCALAR\":\n                databank = state.scalars\n                break\n            default:\n                return null\n        }\n        return databank.get(matrixName)\n    }\n\n    let typeDataTuples = dataTypes.map((dataType, index) => [dataType, lookupMatrix(dataType, dataNames[index])])\n    return Object.assign(...dataNames.map((k, i) => ({ [k]: typeDataTuples[i] })))\n}\n","import { combineEpics } from 'redux-observable';\nimport { operationEpic } from 'epics/operationEpic'\n\nexport const rootEpic = combineEpics(\n    operationEpic,\n);","import React from 'react';\nimport PropTypes from 'prop-types'\n\nclass ModalWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalState: false\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n  }\n\n  toggleModal() {\n    this.setState((prev, props) => {\n      const newState = !prev.modalState;\n\n      return { modalState: newState };\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          {React.cloneElement(this.props.children[0], { onClick: this.toggleModal })}\n        </div>\n\n        <Modal\n          closeModal={this.toggleModal}\n          modalState={this.state.modalState}\n          title={this.props.children[1]}\n        >\n          {React.cloneElement(this.props.children[2], { toggle: this.toggleModal })}\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst Modal = ({ children, closeModal, modalState, title }) => {\n  if (!modalState) {\n    return null;\n  }\n\n  return (\n    <div className=\"modal is-active\">\n      <div className=\"modal-background\" onClick={closeModal} />\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <p className=\"modal-card-title\">{title}</p>\n          <button className=\"delete\" onClick={closeModal} />\n        </header>\n        <section className=\"modal-card-body\">\n          <div className=\"content\">\n            {children}\n          </div>\n        </section>\n        <footer className=\"modal-card-foot\">\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nModal.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n  modalState: PropTypes.bool.isRequired,\n  title: PropTypes.string\n}\n\nexport default ModalWrapper;","import { UPSERT_MATRIX, RENAME_MATRIX, DELETE_MATRIX } from \"actions/actions\";\n\n\nexport function upsertMatrix(name, shape, numericValues) {\n    return {\n        type: UPSERT_MATRIX,\n        name,\n        shape,\n        numericValues\n    }\n}\n\nexport function renameMatrix(name, newName) {\n    return {\n        type: RENAME_MATRIX,\n        name,\n        newName\n    }\n}\n\nexport function deleteMatrix(name) {\n    return {\n        type: DELETE_MATRIX,\n        name\n    }\n}\n","import React from 'react';\nimport { bindActionCreators } from 'redux'\nimport { connect } from \"react-redux\"\n\nimport { upsertMatrix } from \"actions/matrices\"\nimport { renameMatrix } from \"actions/matrices\"\n\nclass InputGrid extends React.Component {\n    constructor(props) {\n        super(props)\n        if (props.create) {\n            this.state = {\n                numRows: props.initialRows,\n                numCols: props.initialCols,\n                matrixName: ''\n            }\n            this.finishedPopulating = true\n        }\n\n        else if (props.edit) {\n            console.log(props.ndarray)\n            this.state = {\n                numRows: props.ndarray.rows(),\n                numCols: props.ndarray.cols(),\n                numericValues: props.ndarray.numericValues,\n                matrixName: props.matrixName\n            }\n            this.finishedPopulating = false\n        }\n\n        else if (props.clone) {\n            var today = new Date();\n            var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n            var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n            var timestamp = date + ' ' + time\n            this.state = {\n                numRows: props.ndarray.rows(),\n                numCols: props.ndarray.cols(),\n                numericValues: props.ndarray.numericValues,\n                matrixName: props.matrixName + ' __CLONED_AT__' + timestamp\n            }\n            this.finishedPopulating = false\n        }\n\n        this.addRow = this.addRow.bind(this)\n        this.addCol = this.addCol.bind(this)\n        this.removeRow = this.removeRow.bind(this)\n        this.removeCol = this.removeCol.bind(this)\n        this.submit = this.submit.bind(this)\n        this.updateMatrixName = this.updateMatrixName.bind(this)\n        this.getStartingValue = this.getStartingValue.bind(this)\n        this.setFinishedPopulating = this.setFinishedPopulating.bind(this)\n    }\n\n    addRow() {\n        this.setState((prevState) => ({\n            numRows: Math.min(prevState.numRows + 1, 7)\n        }))\n    }\n\n    addCol() {\n        this.setState((prevState) => ({\n            numCols: Math.min(prevState.numCols + 1, 7)\n        }))\n    }\n\n    removeRow() {\n        this.setState((prevState) => ({\n            numRows: Math.max(prevState.numRows - 1, 1)\n        }))\n    }\n\n    removeCol() {\n        this.setState((prevState) => ({\n            numCols: Math.max(prevState.numCols - 1, 1)\n        }))\n    }\n\n    updateMatrixName(newName) {\n        this.setState(\n            { ...this.state, matrixName: newName }\n        )\n    }\n\n    submit() {\n        let numericValues = []\n        for (let r = 0; r < this.state.numRows; r++) {\n            for (let c = 0; c < this.state.numCols; c++) {\n                numericValues.push(this[`textInput${r},${c}`].value)\n            }\n        }\n        if (this.props.edit) {\n            this.props.upsertMatrix(this.props.matrixName, [this.state.numRows, this.state.numCols], numericValues)\n            this.props.renameMatrix(this.props.matrixName, this.state.matrixName)\n        } else {\n            this.props.upsertMatrix(this.state.matrixName, [this.state.numRows, this.state.numCols], numericValues)\n        }\n        this.props.toggle()\n    }\n\n    getStartingValue(i, j) {\n        if (!this.finishedPopulating) {\n            return this.state.numericValues[i * this.state.numCols + j]\n        }\n        return 0\n    }\n\n    setFinishedPopulating(status) {\n        this.finishedPopulating = status\n    }\n\n    render() {\n        let ret = (\n            <div className=\"columns\">\n                <div className=\"column\">\n                    <input\n                        className=\"input\"\n                        type=\"text\"\n                        value={this.state.matrixName}\n                        placeholder=\"Matrix Name\"\n                        onChange={(e) => this.updateMatrixName(e.target.value)} />\n                    <p className=\"help is-danger\">Matrix name must be a valid python variable name</p>\n                    <div className=\"columns is-mobile\" style={{ paddingTop: \"25px\" }}>\n                        <div className=\"column is-narrow\">\n                            {[...Array(this.state.numRows).keys()].map(i =>\n                                <div key={i}>\n                                    {[...Array(this.state.numCols).keys()].map(j =>\n                                        <input\n                                            type=\"text\"\n                                            size=\"4\"\n                                            style={{ fontSize: \"20px\" }}\n                                            defaultValue={this.getStartingValue(i, j)}\n                                            key={`${i},${j}`}\n                                            ref={element => { this[`textInput${i},${j}`] = element }} />\n                                    )}\n                                    <br />\n                                </div>)}\n                        </div>\n                        <div className=\"column is-one-fifth has-text-left\">\n                            <button className=\"button is-small\" onClick={this.removeRow}>Remove Row</button>\n                            <br />\n                            <button className=\"button is-small\" onClick={this.addRow}>Add Row</button>\n                        </div>\n                    </div>\n\n                    <div className=\"columns\" >\n                        <div className=\"column is-narrow has-text-left\">\n                            <span className=\"button is-small\" onClick={this.removeCol}>Remove Col</span>\n                            <span className=\"button is-small\" onClick={this.addCol}>Add Col</span>\n                            <div style={{ paddingTop: \"20px\" }}>\n                                <button className=\"button\" onClick={this.submit}>Submit</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n        this.setFinishedPopulating(true)\n        return ret\n    }\n}\n\n\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        upsertMatrix,\n        renameMatrix\n    },\n        dispatch)\n}\n\nexport default connect(null, mapDispatchToProps)(InputGrid);\n\n","import React from 'react';\nimport ModalWrapper from 'components/common/ModalWrapper'\nimport InputGrid from 'components/common/InputGrid'\n\nclass CreateMatrix extends React.Component {\n  render() {\n    return (\n      <ModalWrapper>\n        <button className=\"button is-primary\">\n          Create New Matrix\n        </button>\n        Create New Matrix\n        <InputGrid initialRows={2} initialCols={2} create />\n        <button className=\"button is-primary\">\n          Submit\n        </button>\n      </ModalWrapper>\n    )\n  }\n}\n\nexport default CreateMatrix;","import React, { Component } from 'react';\n\nclass BankWrapper extends Component {\n\n    render() {\n        return (\n            <div>\n                <nav className=\"level\">\n                    <div className=\"level-left\">\n                        <div className=\"level-item\">\n                            <h2 className=\"subtitle is-3\">{this.props.title} </h2>\n                        </div>\n                        <div className=\"level-item\">\n                            {this.props.createNew}\n                        </div>\n                    </div>\n                </nav>\n                <div className=\"box\">\n                    <div className=\"columns is-multiline\">\n                        {this.props.children}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default BankWrapper\n","import React from 'react';\nimport { List } from 'immutable';\nimport katex from 'katex';\nimport Parser from 'html-react-parser';\n\nconst START = \"\\\\begin{pmatrix}\"\nconst END = \"\\\\end{pmatrix}\"\n\nclass Matrix extends React.Component {\n    convertStateToLatex(props) {\n        let fragments = new List()\n        var numericValues = props.ndarray.numericValues.map(float => Math.round(float * Math.pow(10, 4)) / Math.pow(10, 4))\n        var rows, cols\n        [rows, cols] = props.ndarray.shape\n        var count\n        for (count = 0; count < rows; count++) {\n            fragments = fragments\n                .push(numericValues\n                    .slice(count * cols, (count + 1) * cols)\n                    .join(' & '))\n        }\n        return START + fragments.join(' \\\\\\\\ ') + END\n    }\n\n    render() {\n        let math = katex.renderToString(this.convertStateToLatex(this.props));\n        return (\n            <div>{Parser(math)}</div>\n        )\n    }\n}\n\nexport default Matrix;","import React from 'react';\n\nclass ResponsiveIcon extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            hover: false\n        }\n        this.hoverOn = this.hoverOn.bind(this)\n        this.hoverOff = this.hoverOff.bind(this)\n    }\n\n    hoverOn() {\n        this.setState({ hover: true });\n    }\n\n    hoverOff() {\n        this.setState({ hover: false });\n    }\n\n    render() {\n        return (\n            <i className={this.state.hover ? \"fas \" + this.props.icon : \"far \" + this.props.icon}\n                style={{ cursor: \"pointer\" }}\n                onMouseEnter={this.hoverOn}\n                onMouseLeave={this.hoverOff}\n                onClick={this.props.onClick}\n                title={this.props.title}\n            ></i>\n        )\n    }\n}\n\nexport default ResponsiveIcon;\n\n","import React from 'react';\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from 'redux'\nimport { deleteMatrix } from \"actions/matrices\"\nimport Matrix from \"components/common/Matrix\"\nimport ModalWrapper from \"components/common/ModalWrapper\"\nimport InputGrid from \"components/common/InputGrid\"\nimport ResponsiveIcon from \"components/common/ResponsiveIcon\"\n\nclass RichMatrix extends React.Component {\n    render() {\n        return (\n            <div className=\"box has-text-centered\">\n                <Matrix ndarray={this.props.numerics} />\n                {this.props.name}\n                <br />\n                <span className=\"icon has-text-info\" >\n                    <ModalWrapper>\n                        <ResponsiveIcon icon=\"fa-edit\" title=\"Edit the matrix in place\" />\n                        {`edit ${this.props.name}`}\n                        <InputGrid ndarray={this.props.numerics} matrixName={this.props.name} edit />\n                    </ModalWrapper>\n                </span>\n                <span className=\"icon has-text-info\" >\n                    <ModalWrapper>\n                        <ResponsiveIcon icon=\"fa-clone\" title=\"Create a duplicate of this matrix\" />\n                        {`clone ${this.props.matrixName}`}\n                        <InputGrid ndarray={this.props.numerics} matrixName={this.props.name} clone />\n                    </ModalWrapper>\n                </span>\n                <span className=\"icon has-text-info\" >\n                    <ResponsiveIcon icon=\"fa-trash-alt\" onClick={() => this.props.deleteMatrix(this.props.name)} title=\"Delete this matrix\" />\n                </span>\n            </div>\n        )\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        deleteMatrix\n    },\n        dispatch)\n}\n\nexport default connect(null, mapDispatchToProps)(RichMatrix);\n","import React from 'react';\nimport Matrix from \"components/common/Matrix\"\n\nclass Tuple extends React.Component {\n    render() {\n        return (\n            <div className=\"box has-text-centered\">\n                <div className=\"columns is-multiline\">\n                    {this.props.numerics.nameMatrixPairs.map(([name, ndarray]) =>\n                        <div className=\"column\" key={name}>\n                            <div className=\"box\">\n                                <Matrix ndarray={ndarray} />\n                                <div>{name}</div>\n                            </div>\n                        </div>\n                    )}\n                </div>\n                <p>{this.props.name}</p>\n            </div>\n        )\n    }\n}\n\nexport default Tuple\n","import React from 'react';\n// import { connect } from \"react-redux\"\n// import { bindActionCreators } from 'redux'\n\nclass Scalar extends React.Component {\n    render() {\n        return (\n            <div className=\"box has-text-centered\">\n                <b>{this.props.numerics}</b>\n                <p>{this.props.name}</p>\n            </div>\n        )\n    }\n}\n\n// function mapStateToProps(state) {\n//     return {\n//         ...\n//   }\n// }\n\n// function mapDispatchToProps(dispatch) {\n//     return bindActionCreators({\n//         ...\n//   },\n//         dispatch)\n// }\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Scalar);\n\nexport default Scalar\n\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\"\n\nimport CreateMatrix from \"components/createMatrix/CreateMatrix\"\nimport BankWrapper from \"components/bank/BankWrapper\"\n\nimport RichMatrix from \"components/bank/mathematicalObjects/RichMatrix\"\nimport Tuple from \"components/bank/mathematicalObjects/Tuple\"\nimport Scalar from \"components/bank/mathematicalObjects/Scalar\"\n\n\nclass MatrixBank extends Component {\n  render() {\n    return (\n      <BankWrapper title=\"Workspace\" createNew={<CreateMatrix />}>\n        {this.props.matrixMap.entrySeq().map(([k, v]) =>\n          <div className=\"column is-narrow is-mobile\" key={k}>\n            {renderHelper(k, ...v)}\n          </div>\n        )}\n      </BankWrapper>\n    );\n  }\n}\n\nconst renderHelper = (name, type, numerics) => {\n  switch (type) {\n    case \"SCALAR\":\n      return (<Scalar name={name} numerics={numerics} />)\n    case \"NDARRAY\":\n      return (<RichMatrix name={name} numerics={numerics} />)\n    case \"TUPLE\":\n      return (<Tuple name={name} numerics={numerics} />)\n    default:\n      return null\n  }\n}\n\nfunction mapMatricesToProps(state) {\n  return {\n    matrixMap: state.values\n  }\n}\n\nexport default connect(mapMatricesToProps)(MatrixBank);\n","import React from 'react';\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from 'redux'\n\nimport { operationBegin } from \"actions/operation\"\nimport { Button } from \"react-bulma-components/full\"\n\nconst placeholder = \"--Select Matrix--\"\nclass GenericOperation extends React.Component {\n    constructor(props) {\n        super(props)\n        this.operate = this.operate.bind(this)\n        this.showWarning = this.showWarning.bind(this)\n        this.closeWarning = this.closeWarning.bind(this)\n        this.state = { matrix_1: \"\", matrix_2: \"\", resultVariable: \"\", displayWarning: false }\n    }\n    operate = () => {\n        console.log(this.props)\n        let argv = [...Array(this.props.numDropdowns).keys()].map(i => this[`dropdown${i}`].value)\n        this.props.operationBegin(\n            this.props.codeCreator(argv),\n            argv,\n            this.props.dataTypes,\n            this[\"resultName\"].value,\n            this.props.misc\n        )\n        this.showWarning()\n    }\n\n    showWarning = () => {\n        this.setState({ displayWarning: true })\n    }\n\n    closeWarning = () => {\n        this.setState({ displayWarning: false })\n    }\n\n    render() {\n        return (\n            <div className=\"box\">\n                <div className=\"level\">\n                    <div className=\"level-left\">\n                        {[...Array(this.props.numDropdowns).keys()].map(i =>\n                            <div className=\"level-item\" key={i}>\n                                <div className=\"select\">\n                                    <select defaultValue=\"\" ref={element => { this[`dropdown${i}`] = element }}>\n                                        <option value=\"\" disabled>{placeholder}</option>\n                                        {this.props.matrixMap.keySeq().map(k =>\n                                            <option value={k} key={k}>{k}</option>\n                                        )}\n                                    </select>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n\n                    <div className=\"level-right\">\n                        <div className=\"level-item\">\n                            <input\n                                className=\"input\"\n                                type=\"text\"\n                                placeholder=\"Store Result As\"\n                                ref={element => { this[\"resultName\"] = element }}\n                            />\n                        </div>\n                    </div>\n\n                </div>\n                <br />\n                <div className=\"level\">\n                    <div className=\"level-left\">\n                        {this.state.displayWarning && this.props.mostRecentError && <div className=\"notification is-warning\">\n                            <button className=\"delete\" onClick={this.closeWarning}></button>\n                            <p><b>Numpy Error: </b>{this.props.mostRecentError}</p>\n                        </div>}\n                    </div>\n                    <div className=\"level-right\">\n                        <div className=\"level-item\">\n                            <Button onClick={this.operate}>Operate</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        matrixMap: state.matrices,\n        mostRecentError: state.error\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        operationBegin\n    },\n        dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GenericOperation);","export function invert(argv) {\n    return `np.linalg.inv(${argv[0]})`\n}\nexport const invertTypes = [\"NDARRAY\"]\n\nexport function transpose(argv) {\n    return `np.transpose(${argv[0]})`\n}\nexport const transposeTypes = [\"NDARRAY\"]\n\nexport function add(argv) {\n    return `np.add(${argv[0]}, ${argv[1]})`\n}\nexport const addTypes = [\"NDARRAY\", \"NDARRAY\"]\n\nexport function subtract(argv) {\n    return `np.subtract(${argv[0]}, ${argv[1]})`\n}\nexport const subtractTypes = [\"NDARRAY\", \"NDARRAY\"]\n\nexport function multiply(argv) {\n    return `np.dot(${argv[0]}, ${argv[1]})`\n}\nexport const multiplyTypes = [\"NDARRAY\", \"NDARRAY\"]\n\nexport function svd(argv) {\n    return `np.linalg.svd(${argv[0]}, full_matrices=False)`\n}\nexport const svdTypes = [\"NDARRAY\"]\n\nexport function eigenvectors(argv) {\n    return `np.linalg.eig(${argv[0]})`\n}\nexport const eigenvectorsTypes = [\"NDARRAY\"]\n\nexport function qr(argv) {\n    return `np.linalg.qr(${argv[0]})`\n}\nexport const qrTypes = [\"NDARRAY\"]","import React, { Component } from 'react';\n\nimport { Dropdown } from \"react-bulma-components/full\"\nimport GenericOperation from \"components/controlPanel/operations/GenericOperation\"\nimport * as Creators from \"components/controlPanel/CodeCreators\"\n\nclass ControlPanel extends Component {\n  constructor(props) {\n    super(props)\n    this.isActive = this.isActive.bind(this)\n    this.selectTab = this.selectTab.bind(this)\n    this.state = { operationType: \"Decompositions\", operation: \"\" }\n  }\n\n  selectTab = selected => {\n    this.setState({ operationType: selected });\n  };\n\n  isActive = operationType => {\n    if (this.state.operationType === operationType) {\n      return \"is-active\"\n    }\n    return \"\"\n  }\n\n  render() {\n    return (\n      <div className=\"tabs\">\n        <ul>\n          <li className={this.isActive(\"Arithmetic\")}>\n            <a onClick={() => this.selectTab(\"Arithmetic\")}>Arithmetic</a>\n          </li>\n          <li className={this.isActive(\"Decompositions\")}>\n            <a onClick={() => this.selectTab(\"Decompositions\")}>Decompositions</a>\n          </li>\n        </ul>\n      </div>\n      // <div className=\"box\">\n      //   <h2 className=\"subtitle is-3\">Operations</h2>\n      //   <Dropdown value={this.state.selected} onChange={this.onChange} color=\"info\">\n      //     <Dropdown.Item value=\"\">--Select Operation--</Dropdown.Item>\n      //     <Dropdown.Item value=\"invert\">Invert</Dropdown.Item>\n      //     <Dropdown.Item value=\"transpose\">Transpose</Dropdown.Item>\n      //     <Dropdown.Item value=\"add\">Add</Dropdown.Item>\n      //     <Dropdown.Item value=\"subtract\">Subtract</Dropdown.Item>\n      //     <Dropdown.Item value=\"multiply\">Multiply</Dropdown.Item>\n      //     <Dropdown.Item value=\"svd\">SVD</Dropdown.Item>\n      //     <Dropdown.Item value=\"eigenvectors\">Eigenvectors/values</Dropdown.Item>\n      //     <Dropdown.Item value=\"qr\">QR</Dropdown.Item>\n      //   </Dropdown>\n      //   <hr />\n      //   {this.state.selected === \"invert\" && <GenericOperation numDropdowns={1} codeCreator={Creators.invert} dataTypes={Creators.invertTypes} />}\n      //   {this.state.selected === \"transpose\" && <GenericOperation numDropdowns={1} codeCreator={Creators.transpose} dataTypes={Creators.transposeTypes} />}\n      //   {this.state.selected === \"add\" && <GenericOperation numDropdowns={2} codeCreator={Creators.add} dataTypes={Creators.addTypes} />}\n      //   {this.state.selected === \"subtract\" && <GenericOperation numDropdowns={2} codeCreator={Creators.subtract} dataTypes={Creators.subtractTypes} />}\n      //   {this.state.selected === \"multiply\" && <GenericOperation numDropdowns={2} codeCreator={Creators.multiply} dataTypes={Creators.multiplyTypes} />}\n      //   {this.state.selected === \"svd\" && <GenericOperation numDropdowns={1} codeCreator={Creators.svd} dataTypes={Creators.svdTypes} misc={{ \"namev\": [\"U\", \"Σ\", \"V\"] }} />}\n      //   {this.state.selected === \"eigenvectors\" && <GenericOperation numDropdowns={1} codeCreator={Creators.eigenvectors} dataTypes={Creators.eigenvectorsTypes} misc={{ \"namev\": [\"eigenvalues\", \"eigenvectors\"] }} />}\n      //   {this.state.selected === \"qr\" && <GenericOperation numDropdowns={1} codeCreator={Creators.qr} dataTypes={Creators.qrTypes} misc={{ \"namev\": [\"Q\", \"R\"] }} />}\n      // </div>\n    );\n  }\n}\n\nexport default ControlPanel","import React, { Component } from 'react';\n\nimport ValueBank from \"components/bank/ValueBank\"\nimport ControlPanel from \"components/controlPanel/ControlPanel\"\n\nclass MatrixGUI extends Component {\n\n  render() {\n    return (\n      <div className=\"container\">\n        <section className=\"section\">\n          <ControlPanel />\n        </section>\n        <section className=\"section\">\n          <ValueBank />\n        </section>,\n      </div>\n    );\n  }\n}\n\nexport default MatrixGUI;\n","import React, { Component } from 'react';\n\nimport MatrixGUI from \"components/MatrixGUI\"\n// import Navbar from \"components/navbar/Navbar\"\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div>\n        {/* <Navbar /> */}\n        <MatrixGUI />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import 'bulma/css/bulma.css'\n\nimport React from 'react';\nimport { render } from 'react-dom'\n\nimport { applyMiddleware, createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from 'reducers'\n\nimport { createEpicMiddleware } from 'redux-observable';\nimport { rootEpic } from 'epics'\n\nimport { createLogger } from 'redux-logger'\nimport Immutable from 'immutable'\nimport 'rxjs';\n\nimport App from 'App';\n\nconst logger = createLogger({\n  stateTransformer: (state) => {\n    let newState = {};\n\n    for (var i of Object.keys(state)) {\n      if (Immutable.Iterable.isIterable(state[i])) {\n        newState[i] = state[i].toJS();\n      } else {\n        newState[i] = state[i];\n      }\n    };\n\n    return newState;\n  }\n});\n\nconst epicMiddleware = createEpicMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(epicMiddleware, logger)\n)\n\nepicMiddleware.run(rootEpic);\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}