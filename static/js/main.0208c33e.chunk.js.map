{"version":3,"sources":["actions/actions.js","util/Ndarray.js","reducers/matrices.js","util/Composite.js","reducers/composites.js","reducers/scalars.js","reducers/error.js","reducers/index.js","actions/operation.js","epics/operationEpic.js","epics/index.js","components/common/ModalWrapper.js","actions/matrices.js","components/common/InputGrid.js","components/createMatrix/CreateMatrix.js","components/common/Matrix.js","components/common/ResponsiveIcon.js","components/banks/matricesBank/RichMatrix.js","components/banks/BankWrapper.js","components/banks/matricesBank/MatricesBank.js","components/banks/scalarBank/Scalar.js","components/banks/scalarBank/ScalarBank.js","components/banks/compositeBank/CompositeMatrix.js","components/banks/compositeBank/CompositeBank.js","components/controlPanel/operations/GenericOperation.js","components/controlPanel/CodeCreators.js","components/controlPanel/ControlPanel.js","components/MatrixGUI.js","App.js","index.js"],"names":["OPERATION_BEGIN","OPERATION_SUCCESS","OPERATION_ERROR","UPSERT_MATRIX","RENAME_MATRIX","DELETE_MATRIX","Ndarray","numericValues","shape","Object","classCallCheck","this","initialState","OrderedMap","findMyEigenvalues","findMySVD","matrices","state","arguments","length","undefined","action","type","contains","name","updateIn","set","mapKeys","k","newName","remove","result","validOperation","dataType","ndarray","resultVariable","Composite","namev","ndarrayv","_this","map","e","i","ninjas","console","log","misc","LegendresConstant","scalars","error","combineReducers","generatedCode","composites","operationBegin","command","dataNames","dataTypes","createBody","lookupMatrix","matrixType","matrixName","databank","get","typeDataTuples","index","assign","apply","toConsumableArray","defineProperty","rootEpic","combineEpics","action$","state$","pipe","ofType","mergeMap","ajax","url","method","headers","Content-Type","body","value","response","catchError","of","errorMessage","ModalWrapper","props","possibleConstructorReturn","getPrototypeOf","call","modalState","toggleModal","bind","assertThisInitialized","setState","prev","react_default","a","createElement","React","cloneElement","children","onClick","ModalWrapper_Modal","closeModal","title","toggle","Component","Modal","_ref","className","upsertMatrix","renameMatrix","deleteMatrix","InputGrid","create","numRows","initialRows","numCols","initialCols","finishedPopulating","edit","rows","cols","clone","today","Date","timestamp","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","addRow","addCol","removeRow","removeCol","submit","updateMatrixName","getStartingValue","setFinishedPopulating","prevState","Math","min","max","objectSpread","r","c","push","concat","j","status","_this2","ret","placeholder","onChange","target","style","paddingTop","Array","keys","key","size","fontSize","defaultValue","ref","element","connect","dispatch","bindActionCreators","CreateMatrix","common_ModalWrapper","common_InputGrid","Matrix","count","fragments","List","float","round","pow","_props$ndarray$shape","slicedToArray","slice","join","math","katex","renderToString","convertStateToLatex","Parser","ResponsiveIcon","hover","hoverOn","hoverOff","icon","cursor","onMouseEnter","onMouseLeave","RichMatrix","common_Matrix","common_ResponsiveIcon","BankWrapper","createNew","MatrixBank","banks_BankWrapper","createMatrix_CreateMatrix","matrixMap","entrySeq","_ref2","v","matricesBank_RichMatrix","Scalar","scalarName","ScalarBank","scalarBank_Scalar","CompositeMatrix","composite","nameMatrixPairs","CompositeBank","compositeMap","compositeBank_CompositeMatrix","GenericOperation","operate","argv","numDropdowns","codeCreator","showWarning","displayWarning","closeWarning","matrix_1","matrix_2","disabled","keySeq","mostRecentError","full","ControlPanel","selectTab","selected","operationType","isActive","operation","MatrixGUI","controlPanel_ControlPanel","MatricesBank","scalarBank_ScalarBank","compositeBank_CompositeBank","App","components_MatrixGUI","logger","createLogger","stateTransformer","newState","_arr","_i","Immutable","Iterable","isIterable","toJS","epicMiddleware","createEpicMiddleware","store","createStore","rootReducer","applyMiddleware","run","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0208c33e.chunk.js","sourcesContent":["/* Contains definitons of actions */\n\nexport const OPERATION_BEGIN = \"OPERATION_BEGIN\"\nexport const OPERATION_SUCCESS = \"OPERATION_SUCCESS\"\nexport const OPERATION_ERROR = \"OPERATION_ERROR\"\n\nexport const UPSERT_MATRIX = \"UPSERT_MATRIX\"\nexport const RENAME_MATRIX = \"RENAME_MATRIX\"\nexport const DELETE_MATRIX = \"DELETE_MATRIX\"\n\nexport const UPSERT_COMPOSITE = \"UPSERT_COMPOSITE\"\nexport const RENAME_COMPOSITE = \"RENAME_COMPOSITE\"\nexport const DELETE_COMPOSITE = \"DELETE_COMPOSITE\"\n\nexport const UPSERT_SCALAR = \"UPSERT_SCALAR\"\nexport const RENAME_SCALAR = \"RENAME_SCALAR\"\nexport const DELETE_SCALAR = \"DELETE_SCALAR\"","export default class Ndarray {\n    constructor(numericValues, shape) {\n        this.numericValues = numericValues;\n        this.shape = shape;\n    }\n\n    rows() {\n        return this.shape[0]\n    }\n\n    cols() {\n        return this.shape[1]\n    }\n\n    toMap() {\n        return {\n            numericValues: this.numericValues,\n            shape: this.shape\n        }\n    }\n}","import { UPSERT_MATRIX, RENAME_MATRIX, DELETE_MATRIX, OPERATION_SUCCESS } from \"../actions/actions\";\nimport { OrderedMap } from \"immutable\"\n\nimport Ndarray from \"util/Ndarray\"\n\nconst initialState = new OrderedMap({\n  findMyEigenvalues: new Ndarray([1, 2, 3, 4], [2, 2]),\n  findMySVD: new Ndarray([3, 2, 2, 2, 3, -2], [2, 3])\n})\n\nconst matrices = (state = initialState, action) => {\n  switch (action.type) {\n    case UPSERT_MATRIX:\n      if (state.contains(action.name)) {\n        return state.updateIn([action.name], () => new Ndarray(action.numericValues, action.shape))\n      }\n      return state.set(action.name, new Ndarray(action.numericValues, action.shape))\n    case RENAME_MATRIX:\n      return state.mapKeys(k => {\n        if (k === action.name) {\n          return action.newName\n        }\n        return k\n      })\n    case DELETE_MATRIX:\n      return state.remove(action.name)\n    case OPERATION_SUCCESS:\n      if (action.result.validOperation && action.result.dataType === 'NDARRAY') {\n        let ndarray = action.result.result\n        if (state.contains(action.result.resultVariable)) {\n          return state.updateIn([action.resultVariable], () => new Ndarray(ndarray.numericValues, ndarray.shape))\n        }\n        return state.set(action.resultVariable, new Ndarray(ndarray.numericValues, ndarray.shape))\n      } else {\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nexport default matrices\n","export default class Composite {\n    constructor(namev, ndarrayv) {\n        this.namev = namev\n        this.ndarrayv = ndarrayv\n    }\n\n    get size() {\n        return this.namev.length\n    }\n\n    get nameMatrixPairs() {\n        return this.namev.map((e, i) => {\n            return [e, this.ndarrayv[i]];\n        });\n    }\n}","import { OPERATION_SUCCESS } from \"../actions/actions\";\nimport { OrderedMap } from \"immutable\"\n\nimport Ndarray from \"util/Ndarray\"\nimport Composite from \"util/Composite\"\n\nconst ndarrayv = [new Ndarray([1, 1, 1, 0], [2, 2]), new Ndarray([1, 1, 1, 4], [2, 2]), new Ndarray([1, 1, 1, 4], [2, 2])]\nconst namev = [\"sasuke\", \"sakura\", \"naruto\"]\n\nconst initialState = new OrderedMap({\n    ninjas: new Composite(namev, ndarrayv)\n})\n\nconst matrices = (state = initialState, action) => {\n    switch (action.type) {\n        case OPERATION_SUCCESS:\n            if (action.result.validOperation && action.result.dataType === 'TUPLE') {\n                console.log(action)\n                let namev = action.misc.namev\n                let ndarrayv = action.result.result\n                if (state.contains(action.result.resultVariable)) {\n                    return state.updateIn([action.resultVariable], () => new Composite(namev, ndarrayv))\n                }\n                return state.set(action.resultVariable, new Composite(namev, ndarrayv))\n            }\n            return state\n        default:\n            return state\n    }\n}\n\nexport default matrices\n","import { UPSERT_SCALAR, RENAME_SCALAR, DELETE_SCALAR, OPERATION_SUCCESS } from \"../actions/actions\";\nimport { OrderedMap } from \"immutable\"\n\nconst initialState = new OrderedMap({\n    LegendresConstant: 1.\n})\n\nconst scalars = (state = initialState, action) => {\n    switch (action.type) {\n        default:\n            return state\n    }\n}\n\nexport default scalars","import { OPERATION_BEGIN, OPERATION_SUCCESS } from \"../actions/actions\";\n\nconst initialState = \"\"\n\nconst error = (state = initialState, action) => {\n    switch (action.type) {\n        case OPERATION_BEGIN:\n            return \"\"\n        case OPERATION_SUCCESS:\n            if (!action.result.validOperation) {\n                return action.result.result\n            }\n            return state\n        default:\n            return state\n    }\n}\n\nexport default error","\nimport { combineReducers } from 'redux'\nimport matrices from './matrices'\nimport generatedCode from './generatedCode'\nimport composites from './composites'\nimport scalars from './scalars'\nimport error from './error'\n\nexport default combineReducers({\n    matrices,\n    generatedCode,\n    composites,\n    scalars,\n    error\n})\n","import { OPERATION_BEGIN, OPERATION_SUCCESS, OPERATION_ERROR } from \"actions/actions\"\n\nexport function operationBegin(command, dataNames, dataTypes, resultVariable, misc) {\n    return {\n        type: OPERATION_BEGIN,\n        command,\n        dataNames,\n        dataTypes,\n        resultVariable,\n        misc\n    }\n}\n\nexport function operationSuccess(resultVariable, result, misc) {\n    return {\n        type: OPERATION_SUCCESS,\n        resultVariable,\n        result,\n        misc\n    }\n}\n\nexport function operationError(errorMessage) {\n    return {\n        type: OPERATION_ERROR,\n        errorMessage\n    }\n}\n\n\n","import { mergeMap, catchError, map } from 'rxjs/operators';\nimport { ajax } from 'rxjs/ajax'\nimport { of } from 'rxjs';\nimport { ofType } from 'redux-observable'\n\n\nimport { operationError, operationSuccess } from 'actions/operation'\nimport { OPERATION_BEGIN } from 'actions/actions'\n\nexport const operationEpic = (action$, state$) => action$.pipe(\n    ofType(OPERATION_BEGIN),\n    mergeMap(action =>\n        ajax({\n            url: 'https://nzr58np206.execute-api.us-west-2.amazonaws.com/beta-prod/operation',\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: {\n                command: action.command,\n                matrices: createBody(action.dataNames, action.dataTypes, state$.value)\n            }\n        }).pipe(\n            map(response => operationSuccess(action.resultVariable, response.response.body, action.misc)),\n            catchError(error => of(operationError(error)))\n        )\n    )\n)\n\nfunction createBody(dataNames, dataTypes, state) {\n    function lookupMatrix(matrixType, matrixName) {\n        var databank = null\n        switch (matrixType) {\n            case \"NDARRAY\":\n                databank = state.matrices\n                break\n            case \"TUPLE\":\n                databank = state.composites\n                break\n            case \"SCALAR\":\n                databank = state.scalars\n                break\n            default:\n                return null\n        }\n        return databank.get(matrixName)\n    }\n\n    let typeDataTuples = dataTypes.map((dataType, index) => [dataType, lookupMatrix(dataType, dataNames[index])])\n    return Object.assign(...dataNames.map((k, i) => ({ [k]: typeDataTuples[i] })))\n}\n","import { combineEpics } from 'redux-observable';\nimport { operationEpic } from 'epics/operationEpic'\n\nexport const rootEpic = combineEpics(\n    operationEpic,\n);","import React from 'react';\nimport PropTypes from 'prop-types'\n\nclass ModalWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalState: false\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n  }\n\n  toggleModal() {\n    this.setState((prev, props) => {\n      const newState = !prev.modalState;\n\n      return { modalState: newState };\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          {React.cloneElement(this.props.children[0], { onClick: this.toggleModal })}\n        </div>\n\n        <Modal\n          closeModal={this.toggleModal}\n          modalState={this.state.modalState}\n          title={this.props.children[1]}\n        >\n          {React.cloneElement(this.props.children[2], { toggle: this.toggleModal })}\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst Modal = ({ children, closeModal, modalState, title }) => {\n  if (!modalState) {\n    return null;\n  }\n\n  return (\n    <div className=\"modal is-active\">\n      <div className=\"modal-background\" onClick={closeModal} />\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <p className=\"modal-card-title\">{title}</p>\n          <button className=\"delete\" onClick={closeModal} />\n        </header>\n        <section className=\"modal-card-body\">\n          <div className=\"content\">\n            {children}\n          </div>\n        </section>\n        <footer className=\"modal-card-foot\">\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nModal.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n  modalState: PropTypes.bool.isRequired,\n  title: PropTypes.string\n}\n\nexport default ModalWrapper;","import { UPSERT_MATRIX, RENAME_MATRIX, DELETE_MATRIX } from \"actions/actions\";\n\n\nexport function upsertMatrix(name, shape, numericValues) {\n    return {\n        type: UPSERT_MATRIX,\n        name,\n        shape,\n        numericValues\n    }\n}\n\nexport function renameMatrix(name, newName) {\n    return {\n        type: RENAME_MATRIX,\n        name,\n        newName\n    }\n}\n\nexport function deleteMatrix(name) {\n    return {\n        type: DELETE_MATRIX,\n        name\n    }\n}\n","import React from 'react';\nimport { bindActionCreators } from 'redux'\nimport { connect } from \"react-redux\"\n\nimport { upsertMatrix } from \"actions/matrices\"\nimport { renameMatrix } from \"actions/matrices\"\n\nclass InputGrid extends React.Component {\n    constructor(props) {\n        super(props)\n        if (props.create) {\n            this.state = {\n                numRows: props.initialRows,\n                numCols: props.initialCols,\n                matrixName: ''\n            }\n            this.finishedPopulating = true\n        }\n\n        else if (props.edit) {\n            console.log(props.ndarray)\n            this.state = {\n                numRows: props.ndarray.rows(),\n                numCols: props.ndarray.cols(),\n                numericValues: props.ndarray.numericValues,\n                matrixName: props.matrixName\n            }\n            this.finishedPopulating = false\n        }\n\n        else if (props.clone) {\n            var today = new Date();\n            var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n            var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n            var timestamp = date + ' ' + time\n            this.state = {\n                numRows: props.ndarray.rows(),\n                numCols: props.ndarray.cols(),\n                numericValues: props.ndarray.numericValues,\n                matrixName: props.matrixName + ' __CLONED_AT__' + timestamp\n            }\n            this.finishedPopulating = false\n        }\n\n        this.addRow = this.addRow.bind(this)\n        this.addCol = this.addCol.bind(this)\n        this.removeRow = this.removeRow.bind(this)\n        this.removeCol = this.removeCol.bind(this)\n        this.submit = this.submit.bind(this)\n        this.updateMatrixName = this.updateMatrixName.bind(this)\n        this.getStartingValue = this.getStartingValue.bind(this)\n        this.setFinishedPopulating = this.setFinishedPopulating.bind(this)\n    }\n\n    addRow() {\n        this.setState((prevState) => ({\n            numRows: Math.min(prevState.numRows + 1, 7)\n        }))\n    }\n\n    addCol() {\n        this.setState((prevState) => ({\n            numCols: Math.min(prevState.numCols + 1, 7)\n        }))\n    }\n\n    removeRow() {\n        this.setState((prevState) => ({\n            numRows: Math.max(prevState.numRows - 1, 1)\n        }))\n    }\n\n    removeCol() {\n        this.setState((prevState) => ({\n            numCols: Math.max(prevState.numCols - 1, 1)\n        }))\n    }\n\n    updateMatrixName(newName) {\n        this.setState(\n            { ...this.state, matrixName: newName }\n        )\n    }\n\n    submit() {\n        let numericValues = []\n        for (let r = 0; r < this.state.numRows; r++) {\n            for (let c = 0; c < this.state.numCols; c++) {\n                numericValues.push(this[`textInput${r},${c}`].value)\n            }\n        }\n        if (this.props.edit) {\n            this.props.upsertMatrix(this.props.matrixName, [this.state.numRows, this.state.numCols], numericValues)\n            this.props.renameMatrix(this.props.matrixName, this.state.matrixName)\n        } else {\n            this.props.upsertMatrix(this.state.matrixName, [this.state.numRows, this.state.numCols], numericValues)\n        }\n        this.props.toggle()\n    }\n\n    getStartingValue(i, j) {\n        if (!this.finishedPopulating) {\n            return this.state.numericValues[i * this.state.numCols + j]\n        }\n        return 0\n    }\n\n    setFinishedPopulating(status) {\n        this.finishedPopulating = status\n    }\n\n    render() {\n        let ret = (\n            <div className=\"columns\">\n                <div className=\"column\">\n                    <input\n                        className=\"input\"\n                        type=\"text\"\n                        value={this.state.matrixName}\n                        placeholder=\"Matrix Name\"\n                        onChange={(e) => this.updateMatrixName(e.target.value)} />\n                    <p className=\"help is-danger\">Matrix name must be a valid python variable name</p>\n                    <div className=\"columns is-mobile\" style={{ paddingTop: \"25px\" }}>\n                        <div className=\"column is-narrow\">\n                            {[...Array(this.state.numRows).keys()].map(i =>\n                                <div key={i}>\n                                    {[...Array(this.state.numCols).keys()].map(j =>\n                                        <input\n                                            type=\"text\"\n                                            size=\"4\"\n                                            style={{ fontSize: \"20px\" }}\n                                            defaultValue={this.getStartingValue(i, j)}\n                                            key={`${i},${j}`}\n                                            ref={element => { this[`textInput${i},${j}`] = element }} />\n                                    )}\n                                    <br />\n                                </div>)}\n                        </div>\n                        <div className=\"column is-one-fifth has-text-left\">\n                            <button className=\"button is-small\" onClick={this.removeRow}>Remove Row</button>\n                            <br />\n                            <button className=\"button is-small\" onClick={this.addRow}>Add Row</button>\n                        </div>\n                    </div>\n\n                    <div className=\"columns\" >\n                        <div className=\"column is-narrow has-text-left\">\n                            <span className=\"button is-small\" onClick={this.removeCol}>Remove Col</span>\n                            <span className=\"button is-small\" onClick={this.addCol}>Add Col</span>\n                            <div style={{ paddingTop: \"20px\" }}>\n                                <button className=\"button\" onClick={this.submit}>Submit</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n        this.setFinishedPopulating(true)\n        return ret\n    }\n}\n\n\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        upsertMatrix,\n        renameMatrix\n    },\n        dispatch)\n}\n\nexport default connect(null, mapDispatchToProps)(InputGrid);\n\n","import React from 'react';\nimport ModalWrapper from 'components/common/ModalWrapper'\nimport InputGrid from 'components/common/InputGrid'\n\nclass CreateMatrix extends React.Component {\n  render() {\n    return (\n      <ModalWrapper>\n        <button className=\"button is-primary\">\n          Create New Matrix\n        </button>\n        Create New Matrix\n        <InputGrid initialRows={2} initialCols={2} create />\n        <button className=\"button is-primary\">\n          Submit\n        </button>\n      </ModalWrapper>\n    )\n  }\n}\n\nexport default CreateMatrix;","import React from 'react';\nimport { List } from 'immutable';\nimport katex from 'katex';\nimport Parser from 'html-react-parser';\n\nconst START = \"\\\\begin{pmatrix}\"\nconst END = \"\\\\end{pmatrix}\"\n\nclass Matrix extends React.Component {\n    convertStateToLatex(props) {\n        let fragments = new List()\n        var numericValues = props.ndarray.numericValues.map(float => Math.round(float * Math.pow(10, 4)) / Math.pow(10, 4))\n        var rows, cols\n        [rows, cols] = props.ndarray.shape\n        var count\n        for (count = 0; count < rows; count++) {\n            fragments = fragments\n                .push(numericValues\n                    .slice(count * cols, (count + 1) * cols)\n                    .join(' & '))\n        }\n        return START + fragments.join(' \\\\\\\\ ') + END\n    }\n\n    render() {\n        let math = katex.renderToString(this.convertStateToLatex(this.props));\n        return (\n            <div>{Parser(math)}</div>\n        )\n    }\n}\n\nexport default Matrix;","import React from 'react';\n\nclass ResponsiveIcon extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            hover: false\n        }\n        this.hoverOn = this.hoverOn.bind(this)\n        this.hoverOff = this.hoverOff.bind(this)\n    }\n\n    hoverOn() {\n        this.setState({ hover: true });\n    }\n\n    hoverOff() {\n        this.setState({ hover: false });\n    }\n\n    render() {\n        return (\n            <i className={this.state.hover ? \"fas \" + this.props.icon : \"far \" + this.props.icon}\n                style={{ cursor: \"pointer\" }}\n                onMouseEnter={this.hoverOn}\n                onMouseLeave={this.hoverOff}\n                onClick={this.props.onClick}\n                title={this.props.title}\n            ></i>\n        )\n    }\n}\n\nexport default ResponsiveIcon;\n\n","import React from 'react';\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from 'redux'\nimport { deleteMatrix } from \"actions/matrices\"\nimport Matrix from \"components/common/Matrix\"\nimport ModalWrapper from \"components/common/ModalWrapper\"\nimport InputGrid from \"components/common/InputGrid\"\nimport ResponsiveIcon from \"components/common/ResponsiveIcon\"\n\nclass RichMatrix extends React.Component {\n    render() {\n        return (\n            <div className=\"box has-text-centered\">\n                <Matrix ndarray={this.props.ndarray} />\n                {this.props.matrixName}\n                <br />\n                <span className=\"icon has-text-info\" >\n                    <ModalWrapper>\n                        <ResponsiveIcon icon=\"fa-edit\" title=\"Edit the matrix in place\" />\n                        {`edit ${this.props.matrixName}`}\n                        <InputGrid ndarray={this.props.ndarray} matrixName={this.props.matrixName} edit />\n                    </ModalWrapper>\n                </span>\n                <span className=\"icon has-text-info\" >\n                    <ModalWrapper>\n                        <ResponsiveIcon icon=\"fa-clone\" title=\"Create a duplicate of this matrix\" />\n                        {`clone ${this.props.matrixName}`}\n                        <InputGrid ndarray={this.props.ndarray} matrixName={this.props.matrixName} clone />\n                    </ModalWrapper>\n                </span>\n                <span className=\"icon has-text-info\" >\n                    <ResponsiveIcon icon=\"fa-trash-alt\" onClick={() => this.props.deleteMatrix(this.props.matrixName)} title=\"Delete this matrix\" />\n                </span>\n            </div>\n        )\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        deleteMatrix\n    },\n        dispatch)\n}\n\nexport default connect(null, mapDispatchToProps)(RichMatrix);\n","import React, { Component } from 'react';\n\nclass BankWrapper extends Component {\n\n    render() {\n        return (\n            <div>\n                <nav className=\"level\">\n                    <div className=\"level-left\">\n                        <div className=\"level-item\">\n                            <h2 className=\"subtitle is-3\">{this.props.title} </h2>\n                        </div>\n                        <div className=\"level-item\">\n                            {this.props.createNew}\n                        </div>\n                    </div>\n                </nav>\n                <div className=\"box\">\n                    <div className=\"columns is-multiline\">\n                        {this.props.children}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default BankWrapper\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\"\n\nimport CreateMatrix from \"components/createMatrix/CreateMatrix\"\nimport RichMatrix from 'components/banks/matricesBank/RichMatrix';\nimport BankWrapper from \"components/banks/BankWrapper\"\n\n\nclass MatrixBank extends Component {\n  render() {\n    return (\n      <BankWrapper title=\"Matrices\" createNew={<CreateMatrix />}>\n        {this.props.matrixMap.entrySeq().map(([k, v]) =>\n          <div className=\"column is-narrow is-mobile\" key={k}>\n            <RichMatrix\n              ndarray={v}\n              matrixName={k}\n              key={k}\n            />\n          </div>\n        )}\n      </BankWrapper>\n    );\n  }\n}\n\nfunction mapMatricesToProps(state) {\n  return {\n    matrixMap: state.matrices\n  }\n}\n\nexport default connect(mapMatricesToProps)(MatrixBank);\n","import React from 'react';\n// import { connect } from \"react-redux\"\n// import { bindActionCreators } from 'redux'\n\nclass Scalar extends React.Component {\n    render() {\n        return (\n            <div className=\"box has-text-centered\">\n                {this.props.value}\n                <p>{this.props.scalarName}</p>\n            </div>\n        )\n    }\n}\n\n// function mapStateToProps(state) {\n//     return {\n//         ...\n//   }\n// }\n\n// function mapDispatchToProps(dispatch) {\n//     return bindActionCreators({\n//         ...\n//   },\n//         dispatch)\n// }\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Scalar);\n\nexport default Scalar\n\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\"\n\nimport BankWrapper from \"components/banks/BankWrapper\"\nimport Scalar from \"components/banks/scalarBank/Scalar\"\n\n\nclass ScalarBank extends Component {\n    render() {\n        return (\n            <BankWrapper title=\"Scalars\">\n                {this.props.matrixMap.entrySeq().map(([k, v]) =>\n                    <div className=\"column is-narrow is-mobile\" key={k}>\n                        <Scalar value={v} scalarName={k} />\n                    </div>\n                )}\n            </BankWrapper>\n        );\n    }\n}\n\nfunction mapMatricesToProps(state) {\n    return {\n        matrixMap: state.scalars\n    }\n}\n\nexport default connect(mapMatricesToProps)(ScalarBank);\n","import React from 'react';\nimport Matrix from \"components/common/Matrix\"\n\nclass CompositeMatrix extends React.Component {\n    render() {\n        return (\n            <div className=\"box has-text-centered\">\n                <div className=\"columns is-multiline\">\n                    {this.props.composite.nameMatrixPairs.map(([name, ndarray]) =>\n                        <div className=\"column\" key={name}>\n                            <div className=\"box\">\n                                <Matrix ndarray={ndarray} />\n                                <div>{name}</div>\n                            </div>\n                        </div>\n                    )}\n                </div>\n                <b>{this.props.matrixName}</b>\n            </div>\n        )\n    }\n}\n\nexport default CompositeMatrix\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\"\n\nimport BankWrapper from \"components/banks/BankWrapper\"\nimport CompositeMatrix from \"components/banks/compositeBank/CompositeMatrix\"\n\n\nclass CompositeBank extends Component {\n\n    render() {\n        return (\n            <BankWrapper title=\"Composite Matrices\">\n                {\n                    this.props.compositeMap.entrySeq().map(([k, v]) =>\n                        <div className=\"column is-narrow\" key={k}>\n                            <CompositeMatrix composite={v} matrixName={k} />\n                        </div>\n                    )\n                }\n            </BankWrapper >\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        compositeMap: state.composites\n    }\n}\n\nexport default connect(mapStateToProps)(CompositeBank);\n","import React from 'react';\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from 'redux'\n\nimport { operationBegin } from \"actions/operation\"\nimport { Button } from \"react-bulma-components/full\"\n\nconst placeholder = \"--Select Matrix--\"\nclass GenericOperation extends React.Component {\n    constructor(props) {\n        super(props)\n        this.operate = this.operate.bind(this)\n        this.showWarning = this.showWarning.bind(this)\n        this.closeWarning = this.closeWarning.bind(this)\n        this.state = { matrix_1: \"\", matrix_2: \"\", resultVariable: \"\", displayWarning: false }\n    }\n    operate = () => {\n        console.log(this.props)\n        let argv = [...Array(this.props.numDropdowns).keys()].map(i => this[`dropdown${i}`].value)\n        this.props.operationBegin(\n            this.props.codeCreator(argv),\n            argv,\n            this.props.dataTypes,\n            this[\"resultName\"].value,\n            this.props.misc\n        )\n        this.showWarning()\n    }\n\n    showWarning = () => {\n        this.setState({ displayWarning: true })\n    }\n\n    closeWarning = () => {\n        this.setState({ displayWarning: false })\n    }\n\n    render() {\n        return (\n            <div className=\"box\">\n                <div className=\"level\">\n                    <div className=\"level-left\">\n                        {[...Array(this.props.numDropdowns).keys()].map(i =>\n                            <div className=\"level-item\" key={i}>\n                                <div className=\"select\">\n                                    <select defaultValue=\"\" ref={element => { this[`dropdown${i}`] = element }}>\n                                        <option value=\"\" disabled>{placeholder}</option>\n                                        {this.props.matrixMap.keySeq().map(k =>\n                                            <option value={k} key={k}>{k}</option>\n                                        )}\n                                    </select>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n\n                    <div className=\"level-right\">\n                        <div className=\"level-item\">\n                            <input\n                                className=\"input\"\n                                type=\"text\"\n                                placeholder=\"Store Result As\"\n                                ref={element => { this[\"resultName\"] = element }}\n                            />\n                        </div>\n                    </div>\n\n                </div>\n                <br />\n                <div className=\"level\">\n                    <div className=\"level-left\">\n                        {this.state.displayWarning && this.props.mostRecentError && <div className=\"notification is-warning\">\n                            <button className=\"delete\" onClick={this.closeWarning}></button>\n                            <p><b>Numpy Error: </b>{this.props.mostRecentError}</p>\n                        </div>}\n                    </div>\n                    <div className=\"level-right\">\n                        <div className=\"level-item\">\n                            <Button onClick={this.operate}>Operate</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        matrixMap: state.matrices,\n        mostRecentError: state.error\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        operationBegin\n    },\n        dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GenericOperation);","export function invert(argv) {\n    return `np.linalg.inv(${argv[0]})`\n}\nexport const invertTypes = [\"NDARRAY\"]\n\nexport function transpose(argv) {\n    return `np.transpose(${argv[0]})`\n}\nexport const transposeTypes = [\"NDARRAY\"]\n\nexport function add(argv) {\n    return `np.add(${argv[0]}, ${argv[1]})`\n}\nexport const addTypes = [\"NDARRAY\", \"NDARRAY\"]\n\nexport function subtract(argv) {\n    return `np.subtract(${argv[0]}, ${argv[1]})`\n}\nexport const subtractTypes = [\"NDARRAY\", \"NDARRAY\"]\n\nexport function multiply(argv) {\n    return `np.dot(${argv[0]}, ${argv[1]})`\n}\nexport const multiplyTypes = [\"NDARRAY\", \"NDARRAY\"]\n\nexport function svd(argv) {\n    return `np.linalg.svd(${argv[0]}, full_matrices=False)`\n}\nexport const svdTypes = [\"NDARRAY\"]\n\nexport function eigenvectors(argv) {\n    return `np.linalg.eig(${argv[0]})`\n}\nexport const eigenvectorsTypes = [\"NDARRAY\"]\n\nexport function qr(argv) {\n    return `np.linalg.qr(${argv[0]})`\n}\nexport const qrTypes = [\"NDARRAY\"]","import React, { Component } from 'react';\n\nimport { Dropdown } from \"react-bulma-components/full\"\nimport GenericOperation from \"components/controlPanel/operations/GenericOperation\"\nimport * as Creators from \"components/controlPanel/CodeCreators\"\n\nclass ControlPanel extends Component {\n  constructor(props) {\n    super(props)\n    this.isActive = this.isActive.bind(this)\n    this.selectTab = this.selectTab.bind(this)\n    this.state = { operationType: \"Decompositions\", operation: \"\" }\n  }\n\n  selectTab = selected => {\n    this.setState({ operationType: selected });\n  };\n\n  isActive = operationType => {\n    if (this.state.operationType === operationType) {\n      return \"is-active\"\n    }\n    return \"\"\n  }\n\n  render() {\n    return (\n      <div className=\"tabs\">\n        <ul>\n          <li className={this.isActive(\"Arithmetic\")}>\n            <a onClick={() => this.selectTab(\"Arithmetic\")}>Arithmetic</a>\n          </li>\n          <li className={this.isActive(\"Decompositions\")}>\n            <a onClick={() => this.selectTab(\"Decompositions\")}>Decompositions</a>\n          </li>\n        </ul>\n      </div>\n      // <div className=\"box\">\n      //   <h2 className=\"subtitle is-3\">Operations</h2>\n      //   <Dropdown value={this.state.selected} onChange={this.onChange} color=\"info\">\n      //     <Dropdown.Item value=\"\">--Select Operation--</Dropdown.Item>\n      //     <Dropdown.Item value=\"invert\">Invert</Dropdown.Item>\n      //     <Dropdown.Item value=\"transpose\">Transpose</Dropdown.Item>\n      //     <Dropdown.Item value=\"add\">Add</Dropdown.Item>\n      //     <Dropdown.Item value=\"subtract\">Subtract</Dropdown.Item>\n      //     <Dropdown.Item value=\"multiply\">Multiply</Dropdown.Item>\n      //     <Dropdown.Item value=\"svd\">SVD</Dropdown.Item>\n      //     <Dropdown.Item value=\"eigenvectors\">Eigenvectors/values</Dropdown.Item>\n      //     <Dropdown.Item value=\"qr\">QR</Dropdown.Item>\n      //   </Dropdown>\n      //   <hr />\n      //   {this.state.selected === \"invert\" && <GenericOperation numDropdowns={1} codeCreator={Creators.invert} dataTypes={Creators.invertTypes} />}\n      //   {this.state.selected === \"transpose\" && <GenericOperation numDropdowns={1} codeCreator={Creators.transpose} dataTypes={Creators.transposeTypes} />}\n      //   {this.state.selected === \"add\" && <GenericOperation numDropdowns={2} codeCreator={Creators.add} dataTypes={Creators.addTypes} />}\n      //   {this.state.selected === \"subtract\" && <GenericOperation numDropdowns={2} codeCreator={Creators.subtract} dataTypes={Creators.subtractTypes} />}\n      //   {this.state.selected === \"multiply\" && <GenericOperation numDropdowns={2} codeCreator={Creators.multiply} dataTypes={Creators.multiplyTypes} />}\n      //   {this.state.selected === \"svd\" && <GenericOperation numDropdowns={1} codeCreator={Creators.svd} dataTypes={Creators.svdTypes} misc={{ \"namev\": [\"U\", \"Σ\", \"V\"] }} />}\n      //   {this.state.selected === \"eigenvectors\" && <GenericOperation numDropdowns={1} codeCreator={Creators.eigenvectors} dataTypes={Creators.eigenvectorsTypes} misc={{ \"namev\": [\"eigenvalues\", \"eigenvectors\"] }} />}\n      //   {this.state.selected === \"qr\" && <GenericOperation numDropdowns={1} codeCreator={Creators.qr} dataTypes={Creators.qrTypes} misc={{ \"namev\": [\"Q\", \"R\"] }} />}\n      // </div>\n    );\n  }\n}\n\nexport default ControlPanel","import React, { Component } from 'react';\n\nimport MatricesBank from \"components/banks/matricesBank/MatricesBank\"\nimport ScalarBank from \"components/banks/scalarBank/ScalarBank\"\nimport CompositeBank from \"components/banks/compositeBank/CompositeBank\"\nimport ControlPanel from \"components/controlPanel/ControlPanel\"\n\nclass MatrixGUI extends Component {\n\n  render() {\n    return (\n      <div className=\"container\">\n        <section className=\"section\">\n          <ControlPanel />\n        </section>\n        <section className=\"section\">\n          <MatricesBank />\n        </section>,\n      <section className=\"section\">\n          <ScalarBank />\n        </section>,\n      <section className=\"section\">\n          <CompositeBank />\n        </section>,\n      </div>\n    );\n  }\n}\n\nexport default MatrixGUI;\n","import React, { Component } from 'react';\n\nimport MatrixGUI from \"components/MatrixGUI\"\n// import Navbar from \"components/navbar/Navbar\"\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div>\n        {/* <Navbar /> */}\n        <MatrixGUI />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import 'bulma/css/bulma.css'\n\nimport React from 'react';\nimport { render } from 'react-dom'\n\nimport { applyMiddleware, createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from 'reducers'\n\nimport { createEpicMiddleware } from 'redux-observable';\nimport { rootEpic } from 'epics'\n\nimport { createLogger } from 'redux-logger'\nimport Immutable from 'immutable'\nimport 'rxjs';\n\nimport App from 'App';\n\nconst logger = createLogger({\n  stateTransformer: (state) => {\n    let newState = {};\n\n    for (var i of Object.keys(state)) {\n      if (Immutable.Iterable.isIterable(state[i])) {\n        newState[i] = state[i].toJS();\n      } else {\n        newState[i] = state[i];\n      }\n    };\n\n    return newState;\n  }\n});\n\nconst epicMiddleware = createEpicMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(epicMiddleware, logger)\n)\n\nepicMiddleware.run(rootEpic);\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}